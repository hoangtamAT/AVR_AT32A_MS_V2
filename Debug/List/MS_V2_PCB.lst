
AVRASM ver. 2.1.30  G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm Thu Feb 01 08:56:05 2018

G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1087): warning: Register r5 already defined by the .DEF directive
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1088): warning: Register r4 already defined by the .DEF directive
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1089): warning: Register r7 already defined by the .DEF directive
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1090): warning: Register r6 already defined by the .DEF directive
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1091): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _hour=R5
                 	.DEF _minute=R4
                 	.DEF _sec=R7
                 	.DEF _time1=R6
                 	.DEF _min1=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01ee 	JMP  __RESET
000002 940c 021a 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 021b 	JMP  _timer1_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 0400
000030 0404
000031 0404      	.DB  0x0,0x0,0x0,0x4,0x4,0x4,0x4,0x4
000032 0400
000033 0a0a
000034 000a
000035 0000      	.DB  0x0,0x4,0xA,0xA,0xA,0x0,0x0,0x0
000036 0a00
000037 1f0a
000038 1f0a
000039 0a0a      	.DB  0x0,0xA,0xA,0x1F,0xA,0x1F,0xA,0xA
00003a 1e04
00003b 0e05
00003c 0f14
00003d 0304      	.DB  0x4,0x1E,0x5,0xE,0x14,0xF,0x4,0x3
00003e 0813
00003f 0204
000040 1819
000041 0906      	.DB  0x13,0x8,0x4,0x2,0x19,0x18,0x6,0x9
000042 0205
000043 0915
000044 0616
000045 0204      	.DB  0x5,0x2,0x15,0x9,0x16,0x6,0x4,0x2
000046 0000
000047 0000
000048 0408
000049 0202      	.DB  0x0,0x0,0x0,0x0,0x8,0x4,0x2,0x2
00004a 0402
00004b 0208
00004c 0804
00004d 0808      	.DB  0x2,0x4,0x8,0x2,0x4,0x8,0x8,0x8
00004e 0204
00004f 0a00
000050 1f04
000051 0a04      	.DB  0x4,0x2,0x0,0xA,0x4,0x1F,0x4,0xA
000052 0000
000053 0404
000054 041f
000055 0004      	.DB  0x0,0x0,0x4,0x4,0x1F,0x4,0x4,0x0
000056 0000
000057 0000
000058 0406
000059 0002      	.DB  0x0,0x0,0x0,0x0,0x6,0x4,0x2,0x0
00005a 0000
00005b 001f
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x1F,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0606
000060 0000
000061 0810      	.DB  0x0,0x0,0x6,0x6,0x0,0x0,0x10,0x8
000062 0204
000063 0001
000064 110e
000065 1519      	.DB  0x4,0x2,0x1,0x0,0xE,0x11,0x19,0x15
000066 1113
000067 040e
000068 0406
000069 0404      	.DB  0x13,0x11,0xE,0x4,0x6,0x4,0x4,0x4
00006a 0e04
00006b 110e
00006c 0810
00006d 0204      	.DB  0x4,0xE,0xE,0x11,0x10,0x8,0x4,0x2
00006e 1f1f
00006f 0408
000070 1008
000071 0e11      	.DB  0x1F,0x1F,0x8,0x4,0x8,0x10,0x11,0xE
000072 0c08
000073 090a
000074 081f
000075 1f08      	.DB  0x8,0xC,0xA,0x9,0x1F,0x8,0x8,0x1F
000076 0f01
000077 1010
000078 0e11
000079 020c      	.DB  0x1,0xF,0x10,0x10,0x11,0xE,0xC,0x2
00007a 0f01
00007b 1111
00007c 1f0e
00007d 0810      	.DB  0x1,0xF,0x11,0x11,0xE,0x1F,0x10,0x8
00007e 0204
00007f 0202
000080 110e
000081 0e11      	.DB  0x4,0x2,0x2,0x2,0xE,0x11,0x11,0xE
000082 1111
000083 0e0e
000084 1111
000085 101e      	.DB  0x11,0x11,0xE,0xE,0x11,0x11,0x1E,0x10
000086 0608
000087 0600
000088 0006
000089 0606      	.DB  0x8,0x6,0x0,0x6,0x6,0x0,0x6,0x6
00008a 0000
00008b 0606
00008c 0600
00008d 0204      	.DB  0x0,0x0,0x6,0x6,0x0,0x6,0x4,0x2
00008e 0810
00008f 0204
000090 0804
000091 0010      	.DB  0x10,0x8,0x4,0x2,0x4,0x8,0x10,0x0
000092 1f00
000093 1f00
000094 0000
000095 0201      	.DB  0x0,0x1F,0x0,0x1F,0x0,0x0,0x1,0x2
000096 0804
000097 0204
000098 0e01
000099 1011      	.DB  0x4,0x8,0x4,0x2,0x1,0xE,0x11,0x10
00009a 0408
00009b 0400
00009c 110e
00009d 1610      	.DB  0x8,0x4,0x0,0x4,0xE,0x11,0x10,0x16
00009e 1515
00009f 0e0e
0000a0 1111
0000a1 1f11      	.DB  0x15,0x15,0xE,0xE,0x11,0x11,0x11,0x1F
0000a2 1111
0000a3 110f
0000a4 0f11
0000a5 1111      	.DB  0x11,0x11,0xF,0x11,0x11,0xF,0x11,0x11
0000a6 0e0f
0000a7 0111
0000a8 0101
0000a9 0e11      	.DB  0xF,0xE,0x11,0x1,0x1,0x1,0x11,0xE
0000aa 0907
0000ab 1111
0000ac 0911
0000ad 1f07      	.DB  0x7,0x9,0x11,0x11,0x11,0x9,0x7,0x1F
0000ae 0101
0000af 010f
0000b0 1f01
0000b1 011f      	.DB  0x1,0x1,0xF,0x1,0x1,0x1F,0x1F,0x1
0000b2 0701
0000b3 0101
0000b4 0e01
0000b5 0111      	.DB  0x1,0x7,0x1,0x1,0x1,0xE,0x11,0x1
0000b6 1901
0000b7 0e11
0000b8 1111
0000b9 1f11      	.DB  0x1,0x19,0x11,0xE,0x11,0x11,0x11,0x1F
0000ba 1111
0000bb 0e11
0000bc 0404
0000bd 0404      	.DB  0x11,0x11,0x11,0xE,0x4,0x4,0x4,0x4
0000be 0e04
0000bf 081c
0000c0 0808
0000c1 0908      	.DB  0x4,0xE,0x1C,0x8,0x8,0x8,0x8,0x9
0000c2 1106
0000c3 0509
0000c4 0503
0000c5 1109      	.DB  0x6,0x11,0x9,0x5,0x3,0x5,0x9,0x11
0000c6 0101
0000c7 0101
0000c8 0101
0000c9 111f      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1F,0x11
0000ca 151b
0000cb 1111
0000cc 1111
0000cd 1111      	.DB  0x1B,0x15,0x11,0x11,0x11,0x11,0x11,0x11
0000ce 1513
0000cf 1119
0000d0 0e11
0000d1 1111      	.DB  0x13,0x15,0x19,0x11,0x11,0xE,0x11,0x11
0000d2 1111
0000d3 0e11
0000d4 110f
0000d5 0f11      	.DB  0x11,0x11,0x11,0xE,0xF,0x11,0x11,0xF
0000d6 0101
0000d7 0e01
0000d8 1111
0000d9 1511      	.DB  0x1,0x1,0x1,0xE,0x11,0x11,0x11,0x15
0000da 1609
0000db 110f
0000dc 0f11
0000dd 0905      	.DB  0x9,0x16,0xF,0x11,0x11,0xF,0x5,0x9
0000de 1e11
0000df 0101
0000e0 100e
0000e1 0f10      	.DB  0x11,0x1E,0x1,0x1,0xE,0x10,0x10,0xF
0000e2 041f
0000e3 0404
0000e4 0404
0000e5 1104      	.DB  0x1F,0x4,0x4,0x4,0x4,0x4,0x4,0x11
0000e6 1111
0000e7 1111
0000e8 0e11
0000e9 1111      	.DB  0x11,0x11,0x11,0x11,0x11,0xE,0x11,0x11
0000ea 1111
0000eb 0a11
0000ec 1104
0000ed 1111      	.DB  0x11,0x11,0x11,0xA,0x4,0x11,0x11,0x11
0000ee 1515
0000ef 111b
0000f0 1111
0000f1 040a      	.DB  0x15,0x15,0x1B,0x11,0x11,0x11,0xA,0x4
0000f2 110a
0000f3 1111
0000f4 0a11
0000f5 0404      	.DB  0xA,0x11,0x11,0x11,0x11,0xA,0x4,0x4
0000f6 0404
0000f7 101f
0000f8 0408
0000f9 0102      	.DB  0x4,0x4,0x1F,0x10,0x8,0x4,0x2,0x1
0000fa 1c1f
0000fb 0404
0000fc 0404
0000fd 1c04      	.DB  0x1F,0x1C,0x4,0x4,0x4,0x4,0x4,0x1C
0000fe 0100
0000ff 0402
000100 1008
000101 0700      	.DB  0x0,0x1,0x2,0x4,0x8,0x10,0x0,0x7
000102 0404
000103 0404
000104 0704
000105 0a04      	.DB  0x4,0x4,0x4,0x4,0x4,0x7,0x4,0xA
000106 0011
000107 0000
000108 0000
000109 0000      	.DB  0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 1f00
00010c 0402
00010d 0008      	.DB  0x0,0x0,0x0,0x1F,0x2,0x4,0x8,0x0
00010e 0000
00010f 0000
000110 0e00
000111 1e10      	.DB  0x0,0x0,0x0,0x0,0x0,0xE,0x10,0x1E
000112 1e11
000113 0101
000114 130d
000115 1111      	.DB  0x11,0x1E,0x1,0x1,0xD,0x13,0x11,0x11
000116 000f
000117 0e00
000118 0101
000119 0e11      	.DB  0xF,0x0,0x0,0xE,0x1,0x1,0x11,0xE
00011a 1010
00011b 1916
00011c 1111
00011d 001e      	.DB  0x10,0x10,0x16,0x19,0x11,0x11,0x1E,0x0
00011e 0e00
00011f 1f11
000120 0e01
000121 120c      	.DB  0x0,0xE,0x11,0x1F,0x1,0xE,0xC,0x12
000122 0702
000123 0202
000124 0002
000125 1e00      	.DB  0x2,0x7,0x2,0x2,0x2,0x0,0x0,0x1E
000126 1e11
000127 0c10
000128 0101
000129 130d      	.DB  0x11,0x1E,0x10,0xC,0x1,0x1,0xD,0x13
00012a 1111
00012b 0411
00012c 0600
00012d 0404      	.DB  0x11,0x11,0x11,0x4,0x0,0x6,0x4,0x4
00012e 0e04
00012f 0008
000130 080c
000131 0908      	.DB  0x4,0xE,0x8,0x0,0xC,0x8,0x8,0x9
000132 0206
000133 1202
000134 060a
000135 120a      	.DB  0x6,0x2,0x2,0x12,0xA,0x6,0xA,0x12
000136 0406
000137 0404
000138 0404
000139 000e      	.DB  0x6,0x4,0x4,0x4,0x4,0x4,0xE,0x0
00013a 0b00
00013b 1515
00013c 1111
00013d 0000      	.DB  0x0,0xB,0x15,0x15,0x11,0x11,0x0,0x0
00013e 130d
00013f 1111
000140 0011
000141 0e00      	.DB  0xD,0x13,0x11,0x11,0x11,0x0,0x0,0xE
000142 1111
000143 0e11
000144 0000
000145 110f      	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0xF,0x11
000146 010f
000147 0001
000148 1600
000149 1e19      	.DB  0xF,0x1,0x1,0x0,0x0,0x16,0x19,0x1E
00014a 1010
00014b 0000
00014c 130d
00014d 0101      	.DB  0x10,0x10,0x0,0x0,0xD,0x13,0x1,0x1
00014e 0001
00014f 0e00
000150 0e01
000151 0f10      	.DB  0x1,0x0,0x0,0xE,0x1,0xE,0x10,0xF
000152 0202
000153 0207
000154 1202
000155 000c      	.DB  0x2,0x2,0x7,0x2,0x2,0x12,0xC,0x0
000156 1100
000157 1111
000158 1619
000159 0000      	.DB  0x0,0x11,0x11,0x11,0x19,0x16,0x0,0x0
00015a 1111
00015b 0a11
00015c 0004
00015d 1100      	.DB  0x11,0x11,0x11,0xA,0x4,0x0,0x0,0x11
00015e 1511
00015f 0a15
000160 0000
000161 0a11      	.DB  0x11,0x15,0x15,0xA,0x0,0x0,0x11,0xA
000162 0a04
000163 0011
000164 1100
000165 1e11      	.DB  0x4,0xA,0x11,0x0,0x0,0x11,0x11,0x1E
000166 0e10
000167 0000
000168 081f
000169 0204      	.DB  0x10,0xE,0x0,0x0,0x1F,0x8,0x4,0x2
00016a 081f
00016b 0404
00016c 0402
00016d 0804      	.DB  0x1F,0x8,0x4,0x4,0x2,0x4,0x4,0x8
00016e 0404
00016f 0404
000170 0404
000171 0204      	.DB  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x2
000172 0404
000173 0408
000174 0204
000175 1502      	.DB  0x4,0x4,0x8,0x4,0x4,0x2,0x2,0x15
000176 0008
000177 0000
000178 1f00
000179 1111      	.DB  0x8,0x0,0x0,0x0,0x0,0x1F,0x11,0x11
00017a 1111
00017b 1f11      	.DB  0x11,0x11,0x11,0x1F
                 _humi:
00017c 000f
00017d 000a
00017e 62c8
00017f 4490      	.DB  0xF,0x0,0xA,0x0,0xC8,0x62,0x90,0x44
000180 0a28
000181 1144
000182 2492
000183 4fb9      	.DB  0x28,0xA,0x44,0x11,0x92,0x24,0xB9,0x4F
000184 7f7f
000185 6fbb
000186 37fe
000187 0e38      	.DB  0x7F,0x7F,0xBB,0x6F,0xFE,0x37,0x38,0xE
                 _heat:
000188 0019
000189 000a
00018a 0070
00018b 0000      	.DB  0x19,0x0,0xA,0x0,0x70,0x0,0x0,0x0
00018c 01fc
00018d 0000
00018e 03fe
00018f 0000      	.DB  0xFC,0x1,0x0,0x0,0xFE,0x3,0x0,0x0
000190 fffe
000191 00ff
000192 1fff
000193 0149      	.DB  0xFE,0xFF,0xFF,0x0,0xFF,0x1F,0x49,0x1
000194 1fff
000195 0100
000196 fff6
000197 00ff      	.DB  0xFF,0x1F,0x0,0x1,0xF6,0xFF,0xFF,0x0
000198 03de
000199 0000
00019a 01fc
00019b 0000      	.DB  0xDE,0x3,0x0,0x0,0xFC,0x1,0x0,0x0
00019c 0070
00019d 0000      	.DB  0x70,0x0,0x0,0x0
                 _tbl10_G100:
00019e 2710
00019f 03e8
0001a0 0064
0001a1 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
0001a2 0001      	.DB  0x1,0x0
                 _tbl16_G100:
0001a3 1000
0001a4 0100
0001a5 0010
0001a6 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 _conv_delay_G102:
0001a7 0064
0001a8 00c8
0001a9 0190
0001aa 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G102:
0001ab fff8
0001ac fffc
0001ad fffe
0001ae ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 __glcd_mask:
0001af 0100
0001b0 0703
0001b1 1f0f
0001b2 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1230): warning: .cseg .db misalignment - padding zero byte
0001b3 00ff      	.DB  0xFF
                 _st7920_base_y_G103:
0001b4 9080
0001b5 9888      	.DB  0x80,0x90,0x88,0x98
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
0001b6 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1240): warning: .cseg .db misalignment - padding zero byte
0001b7 0000      	.DB  0x0
                 
                 _0x0:
0001b8 3a54
0001b9 3225
0001ba 312e
0001bb 0066      	.DB  0x54,0x3A,0x25,0x32,0x2E,0x31,0x66,0x0
0001bc 006f
0001bd 0043
0001be 3a48
0001bf 3225      	.DB  0x6F,0x0,0x43,0x0,0x48,0x3A,0x25,0x32
0001c0 312e
0001c1 0066
0001c2 0025
0001c3 003a      	.DB  0x2E,0x31,0x66,0x0,0x25,0x0,0x3A,0x0
0001c4 3e3e
0001c5 203e
0001c6 5552
0001c7 4e4e      	.DB  0x3E,0x3E,0x3E,0x20,0x52,0x55,0x4E,0x4E
0001c8 4e49
0001c9 2047
0001ca 3c3c
0001cb 003c      	.DB  0x49,0x4E,0x47,0x20,0x3C,0x3C,0x3C,0x0
0001cc 3e3e
0001cd 203e
0001ce 5453
0001cf 504f      	.DB  0x3E,0x3E,0x3E,0x20,0x53,0x54,0x4F,0x50
0001d0 4550
0001d1 2044
0001d2 3c3c
0001d3 003c      	.DB  0x50,0x45,0x44,0x20,0x3C,0x3C,0x3C,0x0
0001d4 002f
0001d5 4554
0001d6 504d
0001d7 5320      	.DB  0x2F,0x0,0x54,0x45,0x4D,0x50,0x20,0x53
0001d8 5445
0001d9 5400
0001da 4d49
0001db 2045      	.DB  0x45,0x54,0x0,0x54,0x49,0x4D,0x45,0x20
0001dc 4553
0001dd 0054      	.DB  0x53,0x45,0x54,0x0
                 _0x21A0060:
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1254): warning: .cseg .db misalignment - padding zero byte
0001de 0001      	.DB  0x1
                 _0x21A0000:
0001df 4e2d
0001e0 4e41
0001e1 4900
0001e2 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
G:\TAM\K\AVR\May Say V2 PCB AT32A\AVR_AT32A_MS_V2\Debug\List\MS_V2_PCB.asm(1257): warning: .cseg .db misalignment - padding zero byte
0001e3 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001e4 0001      	.DW  0x01
0001e5 0002      	.DW  0x02
0001e6 036c      	.DW  __REG_BIT_VARS*2
                 
0001e7 0001      	.DW  0x01
0001e8 0009      	.DW  0x09
0001e9 036e      	.DW  __REG_VARS*2
                 
0001ea 0001      	.DW  0x01
0001eb 0292      	.DW  __seed_G10D
0001ec 03bc      	.DW  _0x21A0060*2
                 
                 _0xFFFFFFFF:
0001ed 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0001ee 94f8      	CLI
0001ef 27ee      	CLR  R30
0001f0 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001f1 e0f1      	LDI  R31,1
0001f2 bff5      	OUT  MCUCR,R31
0001f3 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0001f4 e08d      	LDI  R24,(14-2)+1
0001f5 e0a2      	LDI  R26,2
0001f6 27bb      	CLR  R27
                 __CLEAR_REG:
0001f7 93ed      	ST   X+,R30
0001f8 958a      	DEC  R24
0001f9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001fa e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001fb e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001fc e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0001fd 93ed      	ST   X+,R30
0001fe 9701      	SBIW R24,1
0001ff f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000200 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000201 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000202 9185      	LPM  R24,Z+
000203 9195      	LPM  R25,Z+
000204 9700      	SBIW R24,0
000205 f061      	BREQ __GLOBAL_INI_END
000206 91a5      	LPM  R26,Z+
000207 91b5      	LPM  R27,Z+
000208 9005      	LPM  R0,Z+
000209 9015      	LPM  R1,Z+
00020a 01bf      	MOVW R22,R30
00020b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00020c 9005      	LPM  R0,Z+
00020d 920d      	ST   X+,R0
00020e 9701      	SBIW R24,1
00020f f7e1      	BRNE __GLOBAL_INI_LOOP
000210 01fb      	MOVW R30,R22
000211 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000212 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000213 bfed      	OUT  SPL,R30
000214 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000215 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000216 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000217 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000218 940c 0240 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : MS_V2
                 ;Version : 01
                 ;Date    : 1/11/2018
                 ;Author  : AT
                 ;
                 ;Chip type               : ATmega32A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;// I2C Bus functions
                 ;#include <i2c.h>
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;// 1 Wire Bus interface functions
                 ;#include <1wire.h>
                 ;// DS18b20 Temperature Sensor functions
                 ;#include <ds18b20.h>
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;// library Symbol
                 ;#include <symbol.h>
                 ;// DHT library
                 ;#include <DHT.h>
                 ;
                 ;//Define ouput
                 ;#define Q_N     PORTB.7
                 ;#define MOTOR   PORTB.6
                 ;#define VAN     PORTB.5
                 ;#define DTN     PORTB.4
                 ;#define Q_L     PORTB.3
                 ;#define M_NEN   PORTB.2
                 ;#define LAMP    PORTB.1
                 ;#define DP      PORTB.0
                 ;// Declare your global variables here
                 ;unsigned char hour,minute,sec;
                 ;eeprom unsigned char mTempSet,hourSet,minSet,tempSet;
                 ;float temperature,humidity;
                 ;unsigned char time1, min1=0;
                 ;bit flagStart=0;
                 ;
                 ;/*******************  FUNCTION  *****************************/
                 ;void timer1DeInit();
                 ;void timer1Init();
                 ;void getTime();
                 ;void tempDisplay(unsigned char x, unsigned char y);
                 ;void timeSettingDisplay(unsigned char x, unsigned char y);
                 ;void tempSettingDisplay(unsigned char x, unsigned char y);
                 ;void statusDisplay();
                 ;void themeDisplay();
                 ;void processOn();
                 ;void processOff();
                 ;/***********************************************************/
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0041 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
                 ; 0000 0042 // Place your code here
                 ; 0000 0043 
                 ; 0000 0044 }
00021a 9518      	RETI
                 ; .FEND
                 ;
                 ;// Timer 1 overflow interrupt service routine (2.0972s)
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0049 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
00021b 920a      	ST   -Y,R0
00021c 921a      	ST   -Y,R1
00021d 92fa      	ST   -Y,R15
00021e 936a      	ST   -Y,R22
00021f 937a      	ST   -Y,R23
000220 938a      	ST   -Y,R24
000221 939a      	ST   -Y,R25
000222 93aa      	ST   -Y,R26
000223 93ba      	ST   -Y,R27
000224 93ea      	ST   -Y,R30
000225 93fa      	ST   -Y,R31
000226 b7ef      	IN   R30,SREG
000227 93ea      	ST   -Y,R30
                 ; 0000 004A    tempDisplay(0,0);
000228 e0e0      	LDI  R30,LOW(0)
000229 93ea      	ST   -Y,R30
00022a e0a0      	LDI  R26,LOW(0)
00022b d089      	RCALL _tempDisplay
                 ; 0000 004B    time1++;
00022c 9463      	INC  R6
                 ; 0000 004C    if(time1>28)
00022d e1ec      	LDI  R30,LOW(28)
00022e 15e6      	CP   R30,R6
00022f f410      	BRSH _0x3
                 ; 0000 004D    {
                 ; 0000 004E      min1++;
000230 9493      	INC  R9
                 ; 0000 004F      time1=0;
000231 2466      	CLR  R6
                 ; 0000 0050    }
                 ; 0000 0051 
                 ; 0000 0052 }
                 _0x3:
000232 91e9      	LD   R30,Y+
000233 bfef      	OUT  SREG,R30
000234 91f9      	LD   R31,Y+
000235 91e9      	LD   R30,Y+
000236 91b9      	LD   R27,Y+
000237 91a9      	LD   R26,Y+
000238 9199      	LD   R25,Y+
000239 9189      	LD   R24,Y+
00023a 9179      	LD   R23,Y+
00023b 9169      	LD   R22,Y+
00023c 90f9      	LD   R15,Y+
00023d 9019      	LD   R1,Y+
00023e 9009      	LD   R0,Y+
00023f 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0055 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0056 // Declare your local variables here
                 ; 0000 0057 // Variable used to store graphic display
                 ; 0000 0058 // controller initialization data
                 ; 0000 0059 GLCDINIT_t glcd_init_data;
                 ; 0000 005A 
                 ; 0000 005B // Input/Output Ports initialization
                 ; 0000 005C // Port A initialization
                 ; 0000 005D // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005E DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
000240 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
000241 efe0      	LDI  R30,LOW(240)
000242 bbea      	OUT  0x1A,R30
                 ; 0000 005F // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=P Bit2=T Bit1=T Bit0=T
                 ; 0000 0060 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (1<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000243 e0e8      	LDI  R30,LOW(8)
000244 bbeb      	OUT  0x1B,R30
                 ; 0000 0061 
                 ; 0000 0062 // Port B initialization
                 ; 0000 0063 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0064 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000245 efef      	LDI  R30,LOW(255)
000246 bbe7      	OUT  0x17,R30
                 ; 0000 0065 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0066 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000247 e0e0      	LDI  R30,LOW(0)
000248 bbe8      	OUT  0x18,R30
                 ; 0000 0067 
                 ; 0000 0068 // Port C initialization
                 ; 0000 0069 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 006A DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000249 efef      	LDI  R30,LOW(255)
00024a bbe4      	OUT  0x14,R30
                 ; 0000 006B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 006C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00024b e0e0      	LDI  R30,LOW(0)
00024c bbe5      	OUT  0x15,R30
                 ; 0000 006D 
                 ; 0000 006E // Port D initialization
                 ; 0000 006F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0070 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00024d bbe1      	OUT  0x11,R30
                 ; 0000 0071 // State: Bit7=T Bit6=T Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
                 ; 0000 0072 PORTD=(0<<PORTD7) | (0<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
00024e e3ef      	LDI  R30,LOW(63)
00024f bbe2      	OUT  0x12,R30
                 ; 0000 0073 // Timer/Counter 1 initialization
                 ; 0000 0074 // Clock source: System Clock
                 ; 0000 0075 // Clock value: 31.250 kHz
                 ; 0000 0076 // Mode: Normal top=0xFFFF
                 ; 0000 0077 // OC1A output: Disconnected
                 ; 0000 0078 // OC1B output: Disconnected
                 ; 0000 0079 // Noise Canceler: Off
                 ; 0000 007A // Input Capture on Falling Edge
                 ; 0000 007B // Timer Period: 2.0972 s
                 ; 0000 007C // Timer1 Overflow Interrupt: On
                 ; 0000 007D // Input Capture Interrupt: Off
                 ; 0000 007E // Compare A Match Interrupt: Off
                 ; 0000 007F // Compare B Match Interrupt: Off
                 ; 0000 0080 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000250 940e 0e26 	CALL SUBOPT_0x0
                 ; 0000 0081 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
                 ; 0000 0082 TCNT1H=0x00;
                 ; 0000 0083 TCNT1L=0x00;
                 ; 0000 0084 ICR1H=0x00;
                 ; 0000 0085 ICR1L=0x00;
                 ; 0000 0086 OCR1AH=0x00;
                 ; 0000 0087 OCR1AL=0x00;
                 ; 0000 0088 OCR1BH=0x00;
                 ; 0000 0089 OCR1BL=0x00;
                 ; 0000 008A 
                 ; 0000 008B // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 008C TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
                 ; 0000 008D 
                 ; 0000 008E // External Interrupt(s) initialization
                 ; 0000 008F // INT0: On
                 ; 0000 0090 // INT0 Mode: Falling Edge
                 ; 0000 0091 // INT1: Off
                 ; 0000 0092 // INT2: Off
                 ; 0000 0093 GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
000252 b7eb      	IN   R30,0x3B
000253 64e0      	ORI  R30,0x40
000254 bfeb      	OUT  0x3B,R30
                 ; 0000 0094 MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
000255 e0e2      	LDI  R30,LOW(2)
000256 bfe5      	OUT  0x35,R30
                 ; 0000 0095 MCUCSR=(0<<ISC2);
000257 e0e0      	LDI  R30,LOW(0)
000258 bfe4      	OUT  0x34,R30
                 ; 0000 0096 GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
000259 e4e0      	LDI  R30,LOW(64)
00025a bfea      	OUT  0x3A,R30
                 ; 0000 0097 
                 ; 0000 0098 // Bit-Banged I2C Bus initialization
                 ; 0000 0099 // I2C Port: PORTD
                 ; 0000 009A // I2C SDA bit: 6
                 ; 0000 009B // I2C SCL bit: 7
                 ; 0000 009C // Bit Rate: 100 kHz
                 ; 0000 009D // Note: I2C settings are specified in the
                 ; 0000 009E // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 009F i2c_init();
00025b 940e 0f75 	CALL _i2c_init
                 ; 0000 00A0 
                 ; 0000 00A1 // DS1307 Real Time Clock initialization
                 ; 0000 00A2 // Square wave output on pin SQW/OUT: Off
                 ; 0000 00A3 // SQW/OUT pin state: 0
                 ; 0000 00A4 rtc_init(0,0,0);
00025d e0e0      	LDI  R30,LOW(0)
00025e 93ea      	ST   -Y,R30
00025f 93ea      	ST   -Y,R30
000260 e0a0      	LDI  R26,LOW(0)
000261 940e 0603 	CALL _rtc_init
                 ; 0000 00A5 
                 ; 0000 00A6 // 1 Wire Bus initialization
                 ; 0000 00A7 // 1 Wire Data port: PORTA
                 ; 0000 00A8 // 1 Wire Data bit: 0
                 ; 0000 00A9 // Note: 1 Wire port settings are specified in the
                 ; 0000 00AA // Project|Configure|C Compiler|Libraries|1 Wire menu.
                 ; 0000 00AB w1_init();
000263 940e 0fd0 	CALL _w1_init
                 ; 0000 00AC 
                 ; 0000 00AD // Graphic Display Controller initialization
                 ; 0000 00AE // The ST7920 connections are specified in the
                 ; 0000 00AF // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 00B0 // DB0 - PORTC Bit 4
                 ; 0000 00B1 // DB1 - PORTC Bit 5
                 ; 0000 00B2 // DB2 - PORTC Bit 6
                 ; 0000 00B3 // DB3 - PORTC Bit 7
                 ; 0000 00B4 // DB4 - PORTA Bit 7
                 ; 0000 00B5 // DB5 - PORTA Bit 6
                 ; 0000 00B6 // DB6 - PORTA Bit 5
                 ; 0000 00B7 // DB7 - PORTA Bit 4
                 ; 0000 00B8 // E - PORTC Bit 2
                 ; 0000 00B9 // R /W - PORTC Bit 1
                 ; 0000 00BA // RS - PORTC Bit 0
                 ; 0000 00BB // /RST - PORTC Bit 3
                 ; 0000 00BC 
                 ; 0000 00BD // Specify the current font for displaying text
                 ; 0000 00BE glcd_init_data.font=font5x7;
000265 e5e4      	LDI  R30,LOW(_font5x7*2)
000266 e0f0      	LDI  R31,HIGH(_font5x7*2)
000267 83e8      	ST   Y,R30
000268 83f9      	STD  Y+1,R31
                 ; 0000 00BF // No function is used for reading
                 ; 0000 00C0 // image data from external memory
                 ; 0000 00C1 glcd_init_data.readxmem=NULL;
000269 e0e0      	LDI  R30,LOW(0)
00026a 83ea      	STD  Y+2,R30
00026b 83eb      	STD  Y+2+1,R30
                 ; 0000 00C2 // No function is used for writing
                 ; 0000 00C3 // image data to external memory
                 ; 0000 00C4 glcd_init_data.writexmem=NULL;
00026c 83ec      	STD  Y+4,R30
00026d 83ed      	STD  Y+4+1,R30
                 ; 0000 00C5 
                 ; 0000 00C6 glcd_init(&glcd_init_data);
00026e 01de      	MOVW R26,R28
00026f 940e 070b 	CALL _glcd_init
                 ; 0000 00C7 
                 ; 0000 00C8 // Global enable interrupts
                 ; 0000 00C9 #asm("sei")
000271 9478      	sei
                 ; 0000 00CA if(tempSet==255)
000272 940e 0e33 	CALL SUBOPT_0x1
000274 3fef      	CPI  R30,LOW(0xFF)
000275 f479      	BRNE _0x4
                 ; 0000 00CB {
                 ; 0000 00CC    tempSet=30;
000276 e0a3      	LDI  R26,LOW(_tempSet)
000277 e0b0      	LDI  R27,HIGH(_tempSet)
000278 e1ee      	LDI  R30,LOW(30)
000279 940e 122d 	CALL __EEPROMWRB
                 ; 0000 00CD    hourSet=2;
00027b e0a1      	LDI  R26,LOW(_hourSet)
00027c e0b0      	LDI  R27,HIGH(_hourSet)
00027d e0e2      	LDI  R30,LOW(2)
00027e 940e 122d 	CALL __EEPROMWRB
                 ; 0000 00CE    minSet=10;
000280 e0a2      	LDI  R26,LOW(_minSet)
000281 e0b0      	LDI  R27,HIGH(_minSet)
000282 e0ea      	LDI  R30,LOW(10)
000283 940e 122d 	CALL __EEPROMWRB
                 ; 0000 00CF }
                 ; 0000 00D0 
                 ; 0000 00D1 themeDisplay();
                 _0x4:
000285 d178      	RCALL _themeDisplay
                 ; 0000 00D2 timeSettingDisplay(81,55);
000286 e5e1      	LDI  R30,LOW(81)
000287 93ea      	ST   -Y,R30
000288 e3a7      	LDI  R26,LOW(55)
000289 d0b8      	RCALL _timeSettingDisplay
                 ; 0000 00D3 tempSettingDisplay(16,55);
00028a e1e0      	LDI  R30,LOW(16)
00028b 93ea      	ST   -Y,R30
00028c e3a7      	LDI  R26,LOW(55)
00028d d0d3      	RCALL _tempSettingDisplay
                 ; 0000 00D4 //statusDisplay();
                 ; 0000 00D5 timer1Init();
00028e d004      	RCALL _timer1Init
                 ; 0000 00D6 while (1)
                 _0x5:
                 ; 0000 00D7       {
                 ; 0000 00D8         getTime();
00028f d018      	RCALL _getTime
                 ; 0000 00D9         processOn();
000290 d0fc      	RCALL _processOn
                 ; 0000 00DA 
                 ; 0000 00DB       }
000291 cffd      	RJMP _0x5
                 ; 0000 00DC }
                 _0x8:
000292 cfff      	RJMP _0x8
                 ; .FEND
                 ;
                 ;/******************  FUNCTION  *******************************/
                 ;/**
                 ;    @brief: Start timer1
                 ;    @prama: None
                 ;    @retval: None
                 ;*/
                 ;void timer1Init()
                 ; 0000 00E5 {
                 _timer1Init:
                 ; .FSTART _timer1Init
                 ; 0000 00E6     // Timer/Counter 1 initialization
                 ; 0000 00E7     // Clock source: System Clock
                 ; 0000 00E8     // Clock value: 31.250 kHz
                 ; 0000 00E9     // Mode: Normal top=0xFFFF
                 ; 0000 00EA     // OC1A output: Disconnected
                 ; 0000 00EB     // OC1B output: Disconnected
                 ; 0000 00EC     // Noise Canceler: Off
                 ; 0000 00ED     // Input Capture on Falling Edge
                 ; 0000 00EE     // Timer Period: 2.0972 s
                 ; 0000 00EF     // Timer1 Overflow Interrupt: On
                 ; 0000 00F0     // Input Capture Interrupt: Off
                 ; 0000 00F1     // Compare A Match Interrupt: Off
                 ; 0000 00F2     // Compare B Match Interrupt: Off
                 ; 0000 00F3     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000293 e0e0      	LDI  R30,LOW(0)
000294 bdef      	OUT  0x2F,R30
                 ; 0000 00F4     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
000295 e0e4      	LDI  R30,LOW(4)
000296 bdee      	OUT  0x2E,R30
                 ; 0000 00F5     TCNT1H=0x00;
000297 e0e0      	LDI  R30,LOW(0)
000298 bded      	OUT  0x2D,R30
                 ; 0000 00F6     TCNT1L=0x00;
000299 bdec      	OUT  0x2C,R30
                 ; 0000 00F7     ICR1H=0x00;
00029a bde7      	OUT  0x27,R30
                 ; 0000 00F8     ICR1L=0x00;
00029b bde6      	OUT  0x26,R30
                 ; 0000 00F9     OCR1AH=0x00;
00029c bdeb      	OUT  0x2B,R30
                 ; 0000 00FA     OCR1AL=0x00;
00029d bdea      	OUT  0x2A,R30
                 ; 0000 00FB     OCR1BH=0x00;
00029e bde9      	OUT  0x29,R30
                 ; 0000 00FC     OCR1BL=0x00;
00029f bde8      	OUT  0x28,R30
                 ; 0000 00FD     // enable interrupt timer1
                 ; 0000 00FE     TIMSK=(1<<TOIE1);
0002a0 e0e4      	LDI  R30,LOW(4)
0002a1 bfe9      	OUT  0x39,R30
                 ; 0000 00FF }
0002a2 9508      	RET
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Stop timer1
                 ;    @prama: None
                 ;    @retval: None
                 ;*/
                 ;void timer1DeInit()
                 ; 0000 0107 {
                 _timer1DeInit:
                 ; .FSTART _timer1DeInit
                 ; 0000 0108     // Timer/Counter 1 initialization
                 ; 0000 0109     // Clock source: System Clock
                 ; 0000 010A     // Clock value: 62.500 kHz
                 ; 0000 010B     // Mode: Normal top=0xFFFF
                 ; 0000 010C     // OC1A output: Disconnected
                 ; 0000 010D     // OC1B output: Disconnected
                 ; 0000 010E     // Noise Canceler: Off
                 ; 0000 010F     // Input Capture on Falling Edge
                 ; 0000 0110     // Timer Period: 1.0486 s
                 ; 0000 0111     // Timer1 Overflow Interrupt: On
                 ; 0000 0112     // Input Capture Interrupt: Off
                 ; 0000 0113     // Compare A Match Interrupt: Off
                 ; 0000 0114     // Compare B Match Interrupt: Off
                 ; 0000 0115     TCCR1A=0;
0002a3 940e 0e26 	CALL SUBOPT_0x0
                 ; 0000 0116     TCCR1B=0;
                 ; 0000 0117     TCNT1H=0x00;
                 ; 0000 0118     TCNT1L=0x00;
                 ; 0000 0119     ICR1H=0x00;
                 ; 0000 011A     ICR1L=0x00;
                 ; 0000 011B     OCR1AH=0x00;
                 ; 0000 011C     OCR1AL=0x00;
                 ; 0000 011D     OCR1BH=0x00;
                 ; 0000 011E     OCR1BL=0x00;
                 ; 0000 011F     // enable interrupt timer1
                 ; 0000 0120     TIMSK=(0<<TOIE1);
                 ; 0000 0121     min1=0;
0002a5 2499      	CLR  R9
                 ; 0000 0122     time1=0;
0002a6 2466      	CLR  R6
                 ; 0000 0123 }
0002a7 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;/**
                 ;    @brief: Get real-time from DS1307
                 ;    @prama: None
                 ;    @retval: None
                 ;*/
                 ;void getTime()
                 ; 0000 012C {
                 _getTime:
                 ; .FSTART _getTime
                 ; 0000 012D     rtc_get_time(&hour,&minute,&sec);
0002a8 e0e5      	LDI  R30,LOW(5)
0002a9 e0f0      	LDI  R31,HIGH(5)
0002aa 93fa      	ST   -Y,R31
0002ab 93ea      	ST   -Y,R30
0002ac e0e4      	LDI  R30,LOW(4)
0002ad e0f0      	LDI  R31,HIGH(4)
0002ae 93fa      	ST   -Y,R31
0002af 93ea      	ST   -Y,R30
0002b0 e0a7      	LDI  R26,LOW(7)
0002b1 e0b0      	LDI  R27,HIGH(7)
0002b2 940e 0621 	CALL _rtc_get_time
                 ; 0000 012E }
0002b4 9508      	RET
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Display temperature & humidity on LCD 128x64
                 ;    @prama: - x: Horizontal axis (0-127)
                 ;            - y: Vertical axis (0-63)
                 ;    @retval: None
                 ;*/
                 ;void tempDisplay(unsigned char x, unsigned char y)
                 ; 0000 0137 {
                 _tempDisplay:
                 ; .FSTART _tempDisplay
                 ; 0000 0138     char lcdBuff[10];
                 ; 0000 0139     float nd,nd1,da,da1;
                 ; 0000 013A     //#asm("cli");
                 ; 0000 013B     nd=DHT_GetTemHumi(DHT_ND);
0002b5 93aa      	ST   -Y,R26
0002b6 976a      	SBIW R28,26
                 ;	x -> Y+27
                 ;	y -> Y+26
                 ;	lcdBuff -> Y+16
                 ;	nd -> Y+12
                 ;	nd1 -> Y+8
                 ;	da -> Y+4
                 ;	da1 -> Y+0
0002b7 e0a2      	LDI  R26,LOW(2)
0002b8 940e 0e38 	CALL SUBOPT_0x2
                +
0002ba 87ec     +STD Y + 12 , R30
0002bb 87fd     +STD Y + 12 + 1 , R31
0002bc 876e     +STD Y + 12 + 2 , R22
0002bd 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 0000 013C     delay_ms(400);
0002be e9a0      	LDI  R26,LOW(400)
0002bf e0b1      	LDI  R27,HIGH(400)
0002c0 940e 0fc6 	CALL _delay_ms
                 ; 0000 013D     nd1=DHT_GetTemHumi(DHT_ND1);
0002c2 e0a3      	LDI  R26,LOW(3)
0002c3 940e 0e38 	CALL SUBOPT_0x2
                +
0002c5 87e8     +STD Y + 8 , R30
0002c6 87f9     +STD Y + 8 + 1 , R31
0002c7 876a     +STD Y + 8 + 2 , R22
0002c8 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ; 0000 013E     delay_ms(200);
0002c9 eca8      	LDI  R26,LOW(200)
0002ca e0b0      	LDI  R27,0
0002cb 940e 0fc6 	CALL _delay_ms
                 ; 0000 013F 
                 ; 0000 0140     da=DHT_GetTemHumi(DHT_DA);
0002cd e0a0      	LDI  R26,LOW(0)
0002ce 940e 0e38 	CALL SUBOPT_0x2
                +
0002d0 83ec     +STD Y + 4 , R30
0002d1 83fd     +STD Y + 4 + 1 , R31
0002d2 836e     +STD Y + 4 + 2 , R22
0002d3 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ; 0000 0141     delay_ms(400);
0002d4 e9a0      	LDI  R26,LOW(400)
0002d5 e0b1      	LDI  R27,HIGH(400)
0002d6 940e 0fc6 	CALL _delay_ms
                 ; 0000 0142     da1=DHT_GetTemHumi(DHT_DA1);
0002d8 e0a1      	LDI  R26,LOW(1)
0002d9 940e 0e38 	CALL SUBOPT_0x2
0002db 940e 1213 	CALL __PUTD1S0
                 ; 0000 0143     delay_ms(200);
0002dd eca8      	LDI  R26,LOW(200)
0002de e0b0      	LDI  R27,0
0002df 940e 0fc6 	CALL _delay_ms
                 ; 0000 0144 
                 ; 0000 0145     temperature=((nd*256)+nd1)/10;
                +
0002e1 85ac     +LDD R26 , Y + 12
0002e2 85bd     +LDD R27 , Y + 12 + 1
0002e3 858e     +LDD R24 , Y + 12 + 2
0002e4 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0002e5 940e 0e40 	CALL SUBOPT_0x3
                +
0002e7 85a8     +LDD R26 , Y + 8
0002e8 85b9     +LDD R27 , Y + 8 + 1
0002e9 858a     +LDD R24 , Y + 8 + 2
0002ea 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0002eb 940e 0e47 	CALL SUBOPT_0x4
0002ed 93e0 0286 	STS  _temperature,R30
0002ef 93f0 0287 	STS  _temperature+1,R31
0002f1 9360 0288 	STS  _temperature+2,R22
0002f3 9370 0289 	STS  _temperature+3,R23
                 ; 0000 0146     humidity=((da*256)+da1)/10;
                +
0002f5 81ac     +LDD R26 , Y + 4
0002f6 81bd     +LDD R27 , Y + 4 + 1
0002f7 818e     +LDD R24 , Y + 4 + 2
0002f8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002f9 940e 0e40 	CALL SUBOPT_0x3
0002fb 940e 120e 	CALL __GETD2S0
0002fd 940e 0e47 	CALL SUBOPT_0x4
0002ff 93e0 028a 	STS  _humidity,R30
000301 93f0 028b 	STS  _humidity+1,R31
000303 9360 028c 	STS  _humidity+2,R22
000305 9370 028d 	STS  _humidity+3,R23
                 ; 0000 0147     //#asm("sei");
                 ; 0000 0148     sprintf(lcdBuff,"T:%2.1f",temperature);
000307 01fe      	MOVW R30,R28
000308 9670      	ADIW R30,16
000309 93fa      	ST   -Y,R31
00030a 93ea      	ST   -Y,R30
                +
00030b e7e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00030c e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00030d 93fa      	ST   -Y,R31
00030e 93ea      	ST   -Y,R30
00030f 940e 0e52 	CALL SUBOPT_0x5
000311 940e 0e5b 	CALL SUBOPT_0x6
                 ; 0000 0149     glcd_outtextxy(x,y+3,lcdBuff);
000313 5fed      	SUBI R30,-LOW(3)
000314 940e 0e65 	CALL SUBOPT_0x7
                 ; 0000 014A     glcd_outtextxyf(x+25,y,"o");
000316 93ea      	ST   -Y,R30
                +
000317 e7a8     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
000318 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
000319 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 014B     glcd_outtextxyf(x+32,y+3,"C");
00031b 8deb      	LDD  R30,Y+27
00031c 5ee0      	SUBI R30,-LOW(32)
00031d 93ea      	ST   -Y,R30
00031e 8deb      	LDD  R30,Y+27
00031f 5fed      	SUBI R30,-LOW(3)
000320 93ea      	ST   -Y,R30
                +
000321 e7aa     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
000322 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
000323 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 014C 
                 ; 0000 014D     sprintf(lcdBuff,"H:%2.1f",humidity);
000325 01fe      	MOVW R30,R28
000326 9670      	ADIW R30,16
000327 93fa      	ST   -Y,R31
000328 93ea      	ST   -Y,R30
                +
000329 e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
00032a e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
00032b 93fa      	ST   -Y,R31
00032c 93ea      	ST   -Y,R30
00032d 91e0 028a 	LDS  R30,_humidity
00032f 91f0 028b 	LDS  R31,_humidity+1
000331 9160 028c 	LDS  R22,_humidity+2
000333 9170 028d 	LDS  R23,_humidity+3
000335 940e 0e5b 	CALL SUBOPT_0x6
                 ; 0000 014E     glcd_outtextxy(x,y+13,lcdBuff);
000337 5fe3      	SUBI R30,-LOW(13)
000338 940e 0e65 	CALL SUBOPT_0x7
                 ; 0000 014F     glcd_outtextxyf(x+25,y+13,"%");
00033a 5fe3      	SUBI R30,-LOW(13)
00033b 93ea      	ST   -Y,R30
                +
00033c e8a4     +LDI R26 , LOW ( 2 * _0x0 + ( 20 ) )
00033d e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW2FN _0x0,20
00033e 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 0150 }
000340 966c      	ADIW R28,28
000341 9508      	RET
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Display time run setting on LCD 128x64
                 ;    @prama: - x: Horizontal axis (0-127)
                 ;            - y: Vertical axis (0-63)
                 ;    @retval: None
                 ;*/
                 ;void timeSettingDisplay(unsigned char x, unsigned char y)
                 ; 0000 0159 {
                 _timeSettingDisplay:
                 ; .FSTART _timeSettingDisplay
                 ; 0000 015A      glcd_putcharxy(x,y,48+hourSet/10);
000342 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
000343 81e9      	LDD  R30,Y+1
000344 93ea      	ST   -Y,R30
000345 81e9      	LDD  R30,Y+1
000346 93ea      	ST   -Y,R30
000347 940e 0e6f 	CALL SUBOPT_0x8
000349 940e 0e78 	CALL SUBOPT_0x9
00034b 940e 0b82 	CALL _glcd_putcharxy
                 ; 0000 015B      glcd_putchar(48+hourSet%10);
00034d 940e 0e6f 	CALL SUBOPT_0x8
00034f 940e 0e7d 	CALL SUBOPT_0xA
                 ; 0000 015C      glcd_outtextf(":");
                +
000351 e8a6     +LDI R26 , LOW ( 2 * _0x0 + ( 22 ) )
000352 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW2FN _0x0,22
000353 940e 0ba6 	CALL _glcd_outtextf
                 ; 0000 015D      glcd_putchar(48+minSet/10);
000355 940e 0e83 	CALL SUBOPT_0xB
000357 940e 0e78 	CALL SUBOPT_0x9
000359 940e 0aed 	CALL _glcd_putchar
                 ; 0000 015E      glcd_putchar(48+minSet%10);
00035b 940e 0e83 	CALL SUBOPT_0xB
00035d 940e 0e7d 	CALL SUBOPT_0xA
                 ; 0000 015F }
00035f 940c 079a 	JMP  _0x21C000B
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Display temperature control setting on LCD 128x64
                 ;    @prama: - x: Horizontal axis (0-127)
                 ;            - y: Vertical axis (0-63)
                 ;    @retval: None
                 ;*/
                 ;void tempSettingDisplay(unsigned char x, unsigned char y)
                 ; 0000 0168 {
                 _tempSettingDisplay:
                 ; .FSTART _tempSettingDisplay
                 ; 0000 0169       glcd_putcharxy(x,y,48+tempSet/10);
000361 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
000362 81e9      	LDD  R30,Y+1
000363 93ea      	ST   -Y,R30
000364 81e9      	LDD  R30,Y+1
000365 93ea      	ST   -Y,R30
000366 940e 0e33 	CALL SUBOPT_0x1
000368 e0f0      	LDI  R31,0
000369 01df      	MOVW R26,R30
00036a e0ea      	LDI  R30,LOW(10)
00036b e0f0      	LDI  R31,HIGH(10)
00036c 940e 0e78 	CALL SUBOPT_0x9
00036e 940e 0b82 	CALL _glcd_putcharxy
                 ; 0000 016A       glcd_putchar(48+tempSet%10);
000370 940e 0e33 	CALL SUBOPT_0x1
000372 e0f0      	LDI  R31,0
000373 01df      	MOVW R26,R30
000374 e0ea      	LDI  R30,LOW(10)
000375 e0f0      	LDI  R31,HIGH(10)
000376 940e 0e7d 	CALL SUBOPT_0xA
                 ; 0000 016B       glcd_outtextxyf(x+13,y-4,"o");
000378 81e9      	LDD  R30,Y+1
000379 5fe3      	SUBI R30,-LOW(13)
00037a 93ea      	ST   -Y,R30
00037b 81e9      	LDD  R30,Y+1
00037c 50e4      	SUBI R30,LOW(4)
00037d 93ea      	ST   -Y,R30
                +
00037e e7a8     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
00037f e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
000380 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 016C       glcd_outtextxyf(x+20,y,"C");
000382 81e9      	LDD  R30,Y+1
000383 5eec      	SUBI R30,-LOW(20)
000384 93ea      	ST   -Y,R30
000385 81e9      	LDD  R30,Y+1
000386 93ea      	ST   -Y,R30
                +
000387 e7aa     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
000388 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
000389 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 016D }
00038b 940c 079a 	JMP  _0x21C000B
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Display status device (stop/running), Progress complete(%) on LCD 128x64
                 ;    @prama: - x: Horizontal axis (0-127)
                 ;            - y: Vertical axis (0-63)
                 ;    @retval: None
                 ;*/
                 ;void statusDisplay()
                 ; 0000 0176 {    unsigned int setPercent, runPercent,percent;
                 ; 0000 0177 
                 ; 0000 0178      setPercent = hourSet*60 + minSet;
                 ;	setPercent -> R16,R17
                 ;	runPercent -> R18,R19
                 ;	percent -> R20,R21
                 ; 0000 0179      runPercent = hour*60 + minute;
                 ; 0000 017A      percent = (runPercent*100)/setPercent;
                 ; 0000 017B 
                 ; 0000 017C      if(flagStart) glcd_outtextxyf(5,23,">>> RUNNING <<<");
                 ; 0000 017D      else glcd_outtextxyf(20,23,">>> STOPPED <<<");
                 ; 0000 017E 
                 ; 0000 017F      glcd_putcharxy(15,33,48+hour/10);
                 ; 0000 0180      glcd_putchar(48+hour%10);
                 ; 0000 0181      glcd_outtextf(":");
                 ; 0000 0182      glcd_putchar(48+minute/10);
                 ; 0000 0183      glcd_putchar(48+minute%10);
                 ; 0000 0184 
                 ; 0000 0185      glcd_outtextf("/");
                 ; 0000 0186 
                 ; 0000 0187      glcd_putchar(48+hourSet/10);
                 ; 0000 0188      glcd_putchar(48+hourSet%10);
                 ; 0000 0189      glcd_outtextf(":");
                 ; 0000 018A      glcd_putchar(48+minSet/10);
                 ; 0000 018B      glcd_putchar(48+minSet%10);
                 ; 0000 018C 
                 ; 0000 018D      glcd_putcharxy(110,33,48+percent/10);
                 ; 0000 018E      glcd_putchar(48+percent%10);
                 ; 0000 018F      glcd_outtextf("%");
                 ; 0000 0190 }
                 ;
                 ;/**
                 ;    @brief: Process turn ON device sequence by setting
                 ;    @prama: tempSet: Temperature setting for control heating at this temperature
                 ;    @retval: None
                 ;*/
                 ;void processOn()
                 ; 0000 0198 {
                 _processOn:
                 ; .FSTART _processOn
00038d 92ff      	PUSH R15
                 ; 0000 0199     int i;
                 ; 0000 019A     bit flagTime=0;
                 ; 0000 019B     Q_N=1;
00038e 931a      	ST   -Y,R17
00038f 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                 ;	flagTime -> R15.0
000390 24ff      	CLR  R15
000391 9ac7      	SBI  0x18,7
                 ; 0000 019C     MOTOR=1;
000392 9ac6      	SBI  0x18,6
                 ; 0000 019D     timer1Init();
000393 deff      	RCALL _timer1Init
                 ; 0000 019E     while(min1==0);
                 _0xF:
000394 2099      	TST  R9
000395 f3f1      	BREQ _0xF
                 ; 0000 019F     if(min1==1){
000396 e0e1      	LDI  R30,LOW(1)
000397 15e9      	CP   R30,R9
000398 f411      	BRNE _0x12
                 ; 0000 01A0        Q_L=1;
000399 9ac3      	SBI  0x18,3
                 ; 0000 01A1        M_NEN=1;
00039a 9ac2      	SBI  0x18,2
                 ; 0000 01A2     }
                 ; 0000 01A3     if(min1==2){
                 _0x12:
00039b e0e2      	LDI  R30,LOW(2)
00039c 15e9      	CP   R30,R9
00039d f429      	BRNE _0x17
                 ; 0000 01A4        VAN=1;
00039e 9ac5      	SBI  0x18,5
                 ; 0000 01A5        DTN=1;
00039f 9ac4      	SBI  0x18,4
                 ; 0000 01A6        flagTime=1;
0003a0 9468      	SET
0003a1 f8f0      	BLD  R15,0
                 ; 0000 01A7        timer1DeInit();
0003a2 df00      	RCALL _timer1DeInit
                 ; 0000 01A8     }
                 ; 0000 01A9     while(flagTime){
                 _0x17:
                 _0x1C:
0003a3 fef0      	SBRS R15,0
0003a4 c037      	RJMP _0x1E
                 ; 0000 01AA        while((int)temperature > (tempSet-5) && (int)temperature<tempSet)
                 _0x1F:
0003a5 940e 0e8c 	CALL SUBOPT_0xC
0003a7 e0f0      	LDI  R31,0
0003a8 9735      	SBIW R30,5
0003a9 15e0      	CP   R30,R0
0003aa 05f1      	CPC  R31,R1
0003ab f43c      	BRGE _0x22
0003ac 940e 0e8c 	CALL SUBOPT_0xC
0003ae 01d0      	MOVW R26,R0
0003af e0f0      	LDI  R31,0
0003b0 17ae      	CP   R26,R30
0003b1 07bf      	CPC  R27,R31
0003b2 f00c      	BRLT _0x23
                 _0x22:
0003b3 c012      	RJMP _0x21
                 _0x23:
                 ; 0000 01AB        {
                 ; 0000 01AC         DTN=0;
0003b4 98c4      	CBI  0x18,4
                 ; 0000 01AD         delay_ms(500);
0003b5 efa4      	LDI  R26,LOW(500)
0003b6 e0b1      	LDI  R27,HIGH(500)
0003b7 940e 0fc6 	CALL _delay_ms
                 ; 0000 01AE         if((int)temperature > tempSet) break;
0003b9 940e 0e8c 	CALL SUBOPT_0xC
0003bb 01d0      	MOVW R26,R0
0003bc e0f0      	LDI  R31,0
0003bd 17ea      	CP   R30,R26
0003be 07fb      	CPC  R31,R27
0003bf f034      	BRLT _0x21
                 ; 0000 01AF         else{
                 ; 0000 01B0             DTN=1;
0003c0 9ac4      	SBI  0x18,4
                 ; 0000 01B1             delay_ms(500);
0003c1 efa4      	LDI  R26,LOW(500)
0003c2 e0b1      	LDI  R27,HIGH(500)
0003c3 940e 0fc6 	CALL _delay_ms
                 ; 0000 01B2         }
                 ; 0000 01B3        }
0003c5 cfdf      	RJMP _0x1F
                 _0x21:
                 ; 0000 01B4        if(temperature>tempSet) DTN=0;
0003c6 940e 0e33 	CALL SUBOPT_0x1
0003c8 91a0 0286 	LDS  R26,_temperature
0003ca 91b0 0287 	LDS  R27,_temperature+1
0003cc 9180 0288 	LDS  R24,_temperature+2
0003ce 9190 0289 	LDS  R25,_temperature+3
0003d0 27ff      	CLR  R31
0003d1 2766      	CLR  R22
0003d2 2777      	CLR  R23
0003d3 940e 104e 	CALL __CDF1
0003d5 940e 1164 	CALL __CMPF12
0003d7 f009      	BREQ PC+2
0003d8 f408      	BRCC PC+2
0003d9 c001      	RJMP _0x2A
0003da 98c4      	CBI  0x18,4
                 ; 0000 01B5     }
                 _0x2A:
0003db cfc7      	RJMP _0x1C
                 _0x1E:
                 ; 0000 01B6 
                 ; 0000 01B7     /*when temp set > temp created by the compressor. this case,
                 ; 0000 01B8      the compressor is always turn ON, this time just control heat resistance.
                 ; 0000 01B9     */
                 ; 0000 01BA     if(tempSet>mTempSet){
0003dc 940e 0e33 	CALL SUBOPT_0x1
0003de 2e0e      	MOV  R0,R30
0003df e0a0      	LDI  R26,LOW(_mTempSet)
0003e0 e0b0      	LDI  R27,HIGH(_mTempSet)
0003e1 940e 1221 	CALL __EEPROMRDB
0003e3 15e0      	CP   R30,R0
0003e4 f458      	BRSH _0x2D
                 ; 0000 01BB 
                 ; 0000 01BC        if(minute>=1){
0003e5 e0e1      	LDI  R30,LOW(1)
0003e6 164e      	CP   R4,R30
0003e7 f038      	BRLO _0x2E
                 ; 0000 01BD           Q_L=1;
0003e8 9ac3      	SBI  0x18,3
                 ; 0000 01BE           M_NEN=1;
0003e9 9ac2      	SBI  0x18,2
                 ; 0000 01BF           if(minute>=2){
0003ea e0e2      	LDI  R30,LOW(2)
0003eb 164e      	CP   R4,R30
0003ec f010      	BRLO _0x33
                 ; 0000 01C0             VAN=1;
0003ed 9ac5      	SBI  0x18,5
                 ; 0000 01C1             DTN=1;
0003ee 9ac4      	SBI  0x18,4
                 ; 0000 01C2           }
                 ; 0000 01C3        }
                 _0x33:
                 ; 0000 01C4     }
                 _0x2E:
                 ; 0000 01C5     /*when temp set < temp created by the compressor. this case,
                 ; 0000 01C6      the heat resistance is always turn OFF, this time just control the compressor.
                 ; 0000 01C7     */
                 ; 0000 01C8     else{
0003ef c00a      	RJMP _0x38
                 _0x2D:
                 ; 0000 01C9        DTN=0;
0003f0 98c4      	CBI  0x18,4
                 ; 0000 01CA        if(minute>=1){
0003f1 e0e1      	LDI  R30,LOW(1)
0003f2 164e      	CP   R4,R30
0003f3 f030      	BRLO _0x3B
                 ; 0000 01CB             Q_L=1;
0003f4 9ac3      	SBI  0x18,3
                 ; 0000 01CC             M_NEN=1;
0003f5 9ac2      	SBI  0x18,2
                 ; 0000 01CD             if(minute>=2){
0003f6 e0e2      	LDI  R30,LOW(2)
0003f7 164e      	CP   R4,R30
0003f8 f008      	BRLO _0x40
                 ; 0000 01CE             VAN=1;
0003f9 9ac5      	SBI  0x18,5
                 ; 0000 01CF           }
                 ; 0000 01D0        }
                 _0x40:
                 ; 0000 01D1     }
                 _0x3B:
                 _0x38:
                 ; 0000 01D2 }
0003fa 9109      	LD   R16,Y+
0003fb 9119      	LD   R17,Y+
0003fc 90ff      	POP  R15
0003fd 9508      	RET
                 ; .FEND
                 ;
                 ;/**
                 ;    @brief: Process turn OFF device sequence by setting
                 ;    @prama:
                 ;    @retval: None
                 ;*/
                 ;void processOff()
                 ; 0000 01DA {
                 ; 0000 01DB 
                 ; 0000 01DC }
                 ;
                 ;/**
                 ;    @brief: Display theme on all main screen
                 ;    @prama:None
                 ;    @retval: None
                 ;*/
                 ;void themeDisplay()
                 ; 0000 01E4 {
                 _themeDisplay:
                 ; .FSTART _themeDisplay
                 ; 0000 01E5     glcd_line(0,20,127,20);
0003fe e0e0      	LDI  R30,LOW(0)
0003ff 93ea      	ST   -Y,R30
000400 e1e4      	LDI  R30,LOW(20)
000401 93ea      	ST   -Y,R30
000402 e7ef      	LDI  R30,LOW(127)
000403 93ea      	ST   -Y,R30
000404 e1a4      	LDI  R26,LOW(20)
000405 940e 0c07 	CALL _glcd_line
                 ; 0000 01E6     glcd_line(0,41,127,41);
000407 e0e0      	LDI  R30,LOW(0)
000408 93ea      	ST   -Y,R30
000409 e2e9      	LDI  R30,LOW(41)
00040a 93ea      	ST   -Y,R30
00040b e7ef      	LDI  R30,LOW(127)
00040c 93ea      	ST   -Y,R30
00040d e2a9      	LDI  R26,LOW(41)
00040e 940e 0c07 	CALL _glcd_line
                 ; 0000 01E7     glcd_line(62,41,62,63);
000410 e3ee      	LDI  R30,LOW(62)
000411 93ea      	ST   -Y,R30
000412 e2e9      	LDI  R30,LOW(41)
000413 93ea      	ST   -Y,R30
000414 e3ee      	LDI  R30,LOW(62)
000415 93ea      	ST   -Y,R30
000416 e3af      	LDI  R26,LOW(63)
000417 940e 0c07 	CALL _glcd_line
                 ; 0000 01E8     glcd_line(64,41,64,63);
000419 e4e0      	LDI  R30,LOW(64)
00041a 93ea      	ST   -Y,R30
00041b e2e9      	LDI  R30,LOW(41)
00041c 93ea      	ST   -Y,R30
00041d e4e0      	LDI  R30,LOW(64)
00041e 93ea      	ST   -Y,R30
00041f e3af      	LDI  R26,LOW(63)
000420 940e 0c07 	CALL _glcd_line
                 ; 0000 01E9 
                 ; 0000 01EA     glcd_line(62,3,62,16);
000422 e3ee      	LDI  R30,LOW(62)
000423 93ea      	ST   -Y,R30
000424 e0e3      	LDI  R30,LOW(3)
000425 93ea      	ST   -Y,R30
000426 e3ee      	LDI  R30,LOW(62)
000427 93ea      	ST   -Y,R30
000428 e1a0      	LDI  R26,LOW(16)
000429 940e 0c07 	CALL _glcd_line
                 ; 0000 01EB     glcd_line(64,3,64,16);
00042b e4e0      	LDI  R30,LOW(64)
00042c 93ea      	ST   -Y,R30
00042d e0e3      	LDI  R30,LOW(3)
00042e 93ea      	ST   -Y,R30
00042f e4e0      	LDI  R30,LOW(64)
000430 93ea      	ST   -Y,R30
000431 e1a0      	LDI  R26,LOW(16)
000432 940e 0c07 	CALL _glcd_line
                 ; 0000 01EC 
                 ; 0000 01ED     glcd_outtextxyf(7,43,"TEMP SET");
000434 e0e7      	LDI  R30,LOW(7)
000435 93ea      	ST   -Y,R30
000436 e2eb      	LDI  R30,LOW(43)
000437 93ea      	ST   -Y,R30
                +
000438 eaaa     +LDI R26 , LOW ( 2 * _0x0 + ( 58 ) )
000439 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 58 ) )
                 	__POINTW2FN _0x0,58
00043a 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 01EE     glcd_outtextxyf(72,43,"TIME SET");
00043c e4e8      	LDI  R30,LOW(72)
00043d 93ea      	ST   -Y,R30
00043e e2eb      	LDI  R30,LOW(43)
00043f 93ea      	ST   -Y,R30
                +
000440 eba3     +LDI R26 , LOW ( 2 * _0x0 + ( 67 ) )
000441 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 67 ) )
                 	__POINTW2FN _0x0,67
000442 940e 0b9b 	CALL _glcd_outtextxyf
                 ; 0000 01EF     glcd_putimagef(8,6,heat,GLCD_PUTCOPY);
000444 e0e8      	LDI  R30,LOW(8)
000445 93ea      	ST   -Y,R30
000446 e0e6      	LDI  R30,LOW(6)
000447 93ea      	ST   -Y,R30
000448 e1e0      	LDI  R30,LOW(_heat*2)
000449 e0f3      	LDI  R31,HIGH(_heat*2)
00044a 93fa      	ST   -Y,R31
00044b 93ea      	ST   -Y,R30
00044c e0a0      	LDI  R26,LOW(0)
00044d 940e 0bb2 	CALL _glcd_putimagef
                 ; 0000 01F0     glcd_putimagef(75,6,humi,GLCD_PUTCOPY);
00044f e4eb      	LDI  R30,LOW(75)
000450 93ea      	ST   -Y,R30
000451 e0e6      	LDI  R30,LOW(6)
000452 93ea      	ST   -Y,R30
000453 efe8      	LDI  R30,LOW(_humi*2)
000454 e0f2      	LDI  R31,HIGH(_humi*2)
000455 93fa      	ST   -Y,R31
000456 93ea      	ST   -Y,R30
000457 e0a0      	LDI  R26,LOW(0)
000458 940e 0bb2 	CALL _glcd_putimagef
                 ; 0000 01F1 }
00045a 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00045b 93ba      	ST   -Y,R27
00045c 93aa      	ST   -Y,R26
00045d 931a      	ST   -Y,R17
00045e 930a      	ST   -Y,R16
00045f 81aa      	LDD  R26,Y+2
000460 81bb      	LDD  R27,Y+2+1
000461 9612      	ADIW R26,2
000462 940e 1206 	CALL __GETW1P
000464 9730      	SBIW R30,0
000465 f159      	BREQ _0x2000010
000466 81aa      	LDD  R26,Y+2
000467 81bb      	LDD  R27,Y+2+1
000468 9614      	ADIW R26,4
000469 940e 1206 	CALL __GETW1P
00046b 018f      	MOVW R16,R30
00046c 9730      	SBIW R30,0
00046d f061      	BREQ _0x2000012
                +
00046e 3002     +CPI R16 , LOW ( 2 )
00046f e0e0     +LDI R30 , HIGH ( 2 )
000470 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000471 f098      	BRLO _0x2000013
000472 01f8      	MOVW R30,R16
000473 9731      	SBIW R30,1
000474 018f      	MOVW R16,R30
                +
000475 81aa     +LDD R26 , Y + 2
000476 81bb     +LDD R27 , Y + 2 + 1
000477 9614     +ADIW R26 , 4
000478 93ed     +ST X + , R30
000479 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00047a 81aa      	LDD  R26,Y+2
00047b 81bb      	LDD  R27,Y+2+1
00047c 9612      	ADIW R26,2
00047d 91ed      	LD   R30,X+
00047e 91fd      	LD   R31,X+
00047f 9631      	ADIW R30,1
000480 93fe      	ST   -X,R31
000481 93ee      	ST   -X,R30
000482 9731      	SBIW R30,1
000483 81ac      	LDD  R26,Y+4
000484 83a0      	STD  Z+0,R26
                 _0x2000013:
000485 81aa      	LDD  R26,Y+2
000486 81bb      	LDD  R27,Y+2+1
000487 940e 1206 	CALL __GETW1P
000489 23ff      	TST  R31
00048a f02a      	BRMI _0x2000014
00048b 91ed      	LD   R30,X+
00048c 91fd      	LD   R31,X+
00048d 9631      	ADIW R30,1
00048e 93fe      	ST   -X,R31
00048f 93ee      	ST   -X,R30
                 _0x2000014:
000490 c006      	RJMP _0x2000015
                 _0x2000010:
000491 81aa      	LDD  R26,Y+2
000492 81bb      	LDD  R27,Y+2+1
000493 efef      	LDI  R30,LOW(65535)
000494 efff      	LDI  R31,HIGH(65535)
000495 93ed      	ST   X+,R30
000496 93fc      	ST   X,R31
                 _0x2000015:
000497 8119      	LDD  R17,Y+1
000498 8108      	LDD  R16,Y+0
000499 9625      	ADIW R28,5
00049a 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00049b 93ba      	ST   -Y,R27
00049c 93aa      	ST   -Y,R26
00049d 9726      	SBIW R28,6
00049e 940e 1242 	CALL __SAVELOCR6
0004a0 e010      	LDI  R17,0
0004a1 85ac      	LDD  R26,Y+12
0004a2 85bd      	LDD  R27,Y+12+1
0004a3 e0e0      	LDI  R30,LOW(0)
0004a4 e0f0      	LDI  R31,HIGH(0)
0004a5 93ed      	ST   X+,R30
0004a6 93fc      	ST   X,R31
                 _0x2000016:
0004a7 89ea      	LDD  R30,Y+18
0004a8 89fb      	LDD  R31,Y+18+1
0004a9 9631      	ADIW R30,1
0004aa 8bea      	STD  Y+18,R30
0004ab 8bfb      	STD  Y+18+1,R31
0004ac 9731      	SBIW R30,1
0004ad 91e4      	LPM  R30,Z
0004ae 2f2e      	MOV  R18,R30
0004af 30e0      	CPI  R30,0
0004b0 f409      	BRNE PC+2
0004b1 c115      	RJMP _0x2000018
0004b2 2fe1      	MOV  R30,R17
0004b3 30e0      	CPI  R30,0
0004b4 f439      	BRNE _0x200001C
0004b5 3225      	CPI  R18,37
0004b6 f411      	BRNE _0x200001D
0004b7 e011      	LDI  R17,LOW(1)
0004b8 c002      	RJMP _0x200001E
                 _0x200001D:
0004b9 940e 0e91 	CALL SUBOPT_0xD
                 _0x200001E:
0004bb c10a      	RJMP _0x200001B
                 _0x200001C:
0004bc 30e1      	CPI  R30,LOW(0x1)
0004bd f4a9      	BRNE _0x200001F
0004be 3225      	CPI  R18,37
0004bf f419      	BRNE _0x2000020
0004c0 940e 0e91 	CALL SUBOPT_0xD
0004c2 c102      	RJMP _0x20000CC
                 _0x2000020:
0004c3 e012      	LDI  R17,LOW(2)
0004c4 e040      	LDI  R20,LOW(0)
0004c5 e000      	LDI  R16,LOW(0)
0004c6 322d      	CPI  R18,45
0004c7 f411      	BRNE _0x2000021
0004c8 e001      	LDI  R16,LOW(1)
0004c9 c0fc      	RJMP _0x200001B
                 _0x2000021:
0004ca 322b      	CPI  R18,43
0004cb f411      	BRNE _0x2000022
0004cc e24b      	LDI  R20,LOW(43)
0004cd c0f8      	RJMP _0x200001B
                 _0x2000022:
0004ce 3220      	CPI  R18,32
0004cf f411      	BRNE _0x2000023
0004d0 e240      	LDI  R20,LOW(32)
0004d1 c0f4      	RJMP _0x200001B
                 _0x2000023:
0004d2 c002      	RJMP _0x2000024
                 _0x200001F:
0004d3 30e2      	CPI  R30,LOW(0x2)
0004d4 f439      	BRNE _0x2000025
                 _0x2000024:
0004d5 e050      	LDI  R21,LOW(0)
0004d6 e013      	LDI  R17,LOW(3)
0004d7 3320      	CPI  R18,48
0004d8 f411      	BRNE _0x2000026
0004d9 6800      	ORI  R16,LOW(128)
0004da c0eb      	RJMP _0x200001B
                 _0x2000026:
0004db c003      	RJMP _0x2000027
                 _0x2000025:
0004dc 30e3      	CPI  R30,LOW(0x3)
0004dd f009      	BREQ PC+2
0004de c0e7      	RJMP _0x200001B
                 _0x2000027:
0004df 3320      	CPI  R18,48
0004e0 f010      	BRLO _0x200002A
0004e1 332a      	CPI  R18,58
0004e2 f008      	BRLO _0x200002B
                 _0x200002A:
0004e3 c007      	RJMP _0x2000029
                 _0x200002B:
0004e4 e0aa      	LDI  R26,LOW(10)
0004e5 9f5a      	MUL  R21,R26
0004e6 2d50      	MOV  R21,R0
0004e7 2fe2      	MOV  R30,R18
0004e8 53e0      	SUBI R30,LOW(48)
0004e9 0f5e      	ADD  R21,R30
0004ea c0db      	RJMP _0x200001B
                 _0x2000029:
0004eb 2fe2      	MOV  R30,R18
0004ec 36e3      	CPI  R30,LOW(0x63)
0004ed f449      	BRNE _0x200002F
0004ee 940e 0e98 	CALL SUBOPT_0xE
0004f0 89e8      	LDD  R30,Y+16
0004f1 89f9      	LDD  R31,Y+16+1
0004f2 81a4      	LDD  R26,Z+4
0004f3 93aa      	ST   -Y,R26
0004f4 940e 0e9e 	CALL SUBOPT_0xF
0004f6 c0ce      	RJMP _0x2000030
                 _0x200002F:
0004f7 37e3      	CPI  R30,LOW(0x73)
0004f8 f441      	BRNE _0x2000032
0004f9 940e 0e98 	CALL SUBOPT_0xE
0004fb 940e 0ea4 	CALL SUBOPT_0x10
0004fd 940e 0d7c 	CALL _strlen
0004ff 2f1e      	MOV  R17,R30
000500 c00a      	RJMP _0x2000033
                 _0x2000032:
000501 37e0      	CPI  R30,LOW(0x70)
000502 f461      	BRNE _0x2000035
000503 940e 0e98 	CALL SUBOPT_0xE
000505 940e 0ea4 	CALL SUBOPT_0x10
000507 940e 0d88 	CALL _strlenf
000509 2f1e      	MOV  R17,R30
00050a 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00050b 6002      	ORI  R16,LOW(2)
00050c 770f      	ANDI R16,LOW(127)
00050d e030      	LDI  R19,LOW(0)
00050e c034      	RJMP _0x2000036
                 _0x2000035:
00050f 36e4      	CPI  R30,LOW(0x64)
000510 f011      	BREQ _0x2000039
000511 36e9      	CPI  R30,LOW(0x69)
000512 f411      	BRNE _0x200003A
                 _0x2000039:
000513 6004      	ORI  R16,LOW(4)
000514 c002      	RJMP _0x200003B
                 _0x200003A:
000515 37e5      	CPI  R30,LOW(0x75)
000516 f431      	BRNE _0x200003C
                 _0x200003B:
000517 e3ec      	LDI  R30,LOW(_tbl10_G100*2)
000518 e0f3      	LDI  R31,HIGH(_tbl10_G100*2)
000519 83ee      	STD  Y+6,R30
00051a 83ff      	STD  Y+6+1,R31
00051b e015      	LDI  R17,LOW(5)
00051c c00c      	RJMP _0x200003D
                 _0x200003C:
00051d 35e8      	CPI  R30,LOW(0x58)
00051e f411      	BRNE _0x200003F
00051f 6008      	ORI  R16,LOW(8)
000520 c003      	RJMP _0x2000040
                 _0x200003F:
000521 37e8      	CPI  R30,LOW(0x78)
000522 f009      	BREQ PC+2
000523 c0a1      	RJMP _0x2000071
                 _0x2000040:
000524 e4e6      	LDI  R30,LOW(_tbl16_G100*2)
000525 e0f3      	LDI  R31,HIGH(_tbl16_G100*2)
000526 83ee      	STD  Y+6,R30
000527 83ff      	STD  Y+6+1,R31
000528 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000529 ff02      	SBRS R16,2
00052a c014      	RJMP _0x2000042
00052b 940e 0e98 	CALL SUBOPT_0xE
00052d 940e 0eae 	CALL SUBOPT_0x11
00052f 85ab      	LDD  R26,Y+11
000530 23aa      	TST  R26
000531 f43a      	BRPL _0x2000043
000532 85ea      	LDD  R30,Y+10
000533 85fb      	LDD  R31,Y+10+1
000534 940e 1188 	CALL __ANEGW1
000536 87ea      	STD  Y+10,R30
000537 87fb      	STD  Y+10+1,R31
000538 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000539 3040      	CPI  R20,0
00053a f011      	BREQ _0x2000044
00053b 5f1f      	SUBI R17,-LOW(1)
00053c c001      	RJMP _0x2000045
                 _0x2000044:
00053d 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00053e c004      	RJMP _0x2000046
                 _0x2000042:
00053f 940e 0e98 	CALL SUBOPT_0xE
000541 940e 0eae 	CALL SUBOPT_0x11
                 _0x2000046:
                 _0x2000036:
000543 fd00      	SBRC R16,0
000544 c011      	RJMP _0x2000047
                 _0x2000048:
000545 1715      	CP   R17,R21
000546 f478      	BRSH _0x200004A
000547 ff07      	SBRS R16,7
000548 c008      	RJMP _0x200004B
000549 ff02      	SBRS R16,2
00054a c004      	RJMP _0x200004C
00054b 7f0b      	ANDI R16,LOW(251)
00054c 2f24      	MOV  R18,R20
00054d 5011      	SUBI R17,LOW(1)
00054e c001      	RJMP _0x200004D
                 _0x200004C:
00054f e320      	LDI  R18,LOW(48)
                 _0x200004D:
000550 c001      	RJMP _0x200004E
                 _0x200004B:
000551 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000552 940e 0e91 	CALL SUBOPT_0xD
000554 5051      	SUBI R21,LOW(1)
000555 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000556 2f31      	MOV  R19,R17
000557 ff01      	SBRS R16,1
000558 c017      	RJMP _0x200004F
                 _0x2000050:
000559 3030      	CPI  R19,0
00055a f0a1      	BREQ _0x2000052
00055b ff03      	SBRS R16,3
00055c c006      	RJMP _0x2000053
00055d 81ee      	LDD  R30,Y+6
00055e 81ff      	LDD  R31,Y+6+1
00055f 9125      	LPM  R18,Z+
000560 83ee      	STD  Y+6,R30
000561 83ff      	STD  Y+6+1,R31
000562 c005      	RJMP _0x2000054
                 _0x2000053:
000563 81ae      	LDD  R26,Y+6
000564 81bf      	LDD  R27,Y+6+1
000565 912d      	LD   R18,X+
000566 83ae      	STD  Y+6,R26
000567 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000568 940e 0e91 	CALL SUBOPT_0xD
00056a 3050      	CPI  R21,0
00056b f009      	BREQ _0x2000055
00056c 5051      	SUBI R21,LOW(1)
                 _0x2000055:
00056d 5031      	SUBI R19,LOW(1)
00056e cfea      	RJMP _0x2000050
                 _0x2000052:
00056f c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000570 e320      	LDI  R18,LOW(48)
000571 81ee      	LDD  R30,Y+6
000572 81ff      	LDD  R31,Y+6+1
000573 940e 120a 	CALL __GETW1PF
000575 87e8      	STD  Y+8,R30
000576 87f9      	STD  Y+8+1,R31
000577 81ee      	LDD  R30,Y+6
000578 81ff      	LDD  R31,Y+6+1
000579 9632      	ADIW R30,2
00057a 83ee      	STD  Y+6,R30
00057b 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00057c 85e8      	LDD  R30,Y+8
00057d 85f9      	LDD  R31,Y+8+1
00057e 85aa      	LDD  R26,Y+10
00057f 85bb      	LDD  R27,Y+10+1
000580 17ae      	CP   R26,R30
000581 07bf      	CPC  R27,R31
000582 f050      	BRLO _0x200005C
000583 5f2f      	SUBI R18,-LOW(1)
000584 85a8      	LDD  R26,Y+8
000585 85b9      	LDD  R27,Y+8+1
000586 85ea      	LDD  R30,Y+10
000587 85fb      	LDD  R31,Y+10+1
000588 1bea      	SUB  R30,R26
000589 0bfb      	SBC  R31,R27
00058a 87ea      	STD  Y+10,R30
00058b 87fb      	STD  Y+10+1,R31
00058c cfef      	RJMP _0x200005A
                 _0x200005C:
00058d 332a      	CPI  R18,58
00058e f028      	BRLO _0x200005D
00058f ff03      	SBRS R16,3
000590 c002      	RJMP _0x200005E
000591 5f29      	SUBI R18,-LOW(7)
000592 c001      	RJMP _0x200005F
                 _0x200005E:
000593 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000594 fd04      	SBRC R16,4
000595 c01a      	RJMP _0x2000061
000596 3321      	CPI  R18,49
000597 f420      	BRSH _0x2000063
000598 85a8      	LDD  R26,Y+8
000599 85b9      	LDD  R27,Y+8+1
00059a 9711      	SBIW R26,1
00059b f409      	BRNE _0x2000062
                 _0x2000063:
00059c c009      	RJMP _0x20000CD
                 _0x2000062:
00059d 1753      	CP   R21,R19
00059e f010      	BRLO _0x2000067
00059f ff00      	SBRS R16,0
0005a0 c001      	RJMP _0x2000068
                 _0x2000067:
0005a1 c013      	RJMP _0x2000066
                 _0x2000068:
0005a2 e220      	LDI  R18,LOW(32)
0005a3 ff07      	SBRS R16,7
0005a4 c00b      	RJMP _0x2000069
0005a5 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0005a6 6100      	ORI  R16,LOW(16)
0005a7 ff02      	SBRS R16,2
0005a8 c007      	RJMP _0x200006A
0005a9 7f0b      	ANDI R16,LOW(251)
0005aa 934a      	ST   -Y,R20
0005ab 940e 0e9e 	CALL SUBOPT_0xF
0005ad 3050      	CPI  R21,0
0005ae f009      	BREQ _0x200006B
0005af 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0005b0 940e 0e91 	CALL SUBOPT_0xD
0005b2 3050      	CPI  R21,0
0005b3 f009      	BREQ _0x200006C
0005b4 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0005b5 5031      	SUBI R19,LOW(1)
0005b6 85a8      	LDD  R26,Y+8
0005b7 85b9      	LDD  R27,Y+8+1
0005b8 9712      	SBIW R26,2
0005b9 f008      	BRLO _0x2000059
0005ba cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0005bb ff00      	SBRS R16,0
0005bc c008      	RJMP _0x200006D
                 _0x200006E:
0005bd 3050      	CPI  R21,0
0005be f031      	BREQ _0x2000070
0005bf 5051      	SUBI R21,LOW(1)
0005c0 e2e0      	LDI  R30,LOW(32)
0005c1 93ea      	ST   -Y,R30
0005c2 940e 0e9e 	CALL SUBOPT_0xF
0005c4 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0005c5 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0005c6 cee0      	RJMP _0x2000016
                 _0x2000018:
0005c7 85ac      	LDD  R26,Y+12
0005c8 85bd      	LDD  R27,Y+12+1
0005c9 940e 1206 	CALL __GETW1P
0005cb 940e 1249 	CALL __LOADLOCR6
0005cd 9664      	ADIW R28,20
0005ce 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0005cf 92ff      	PUSH R15
0005d0 2ef8      	MOV  R15,R24
0005d1 9726      	SBIW R28,6
0005d2 940e 1244 	CALL __SAVELOCR4
0005d4 940e 0eb6 	CALL SUBOPT_0x12
0005d6 9730      	SBIW R30,0
0005d7 f419      	BRNE _0x2000072
0005d8 efef      	LDI  R30,LOW(65535)
0005d9 efff      	LDI  R31,HIGH(65535)
0005da c023      	RJMP _0x21C000D
                 _0x2000072:
0005db 01de      	MOVW R26,R28
0005dc 9616      	ADIW R26,6
0005dd 940e 1184 	CALL __ADDW2R15
0005df 018d      	MOVW R16,R26
0005e0 940e 0eb6 	CALL SUBOPT_0x12
0005e2 83ee      	STD  Y+6,R30
0005e3 83ff      	STD  Y+6+1,R31
0005e4 e0e0      	LDI  R30,LOW(0)
0005e5 87e8      	STD  Y+8,R30
0005e6 87e9      	STD  Y+8+1,R30
0005e7 01de      	MOVW R26,R28
0005e8 961a      	ADIW R26,10
0005e9 940e 1184 	CALL __ADDW2R15
0005eb 940e 1206 	CALL __GETW1P
0005ed 93fa      	ST   -Y,R31
0005ee 93ea      	ST   -Y,R30
0005ef 931a      	ST   -Y,R17
0005f0 930a      	ST   -Y,R16
0005f1 e5eb      	LDI  R30,LOW(_put_buff_G100)
0005f2 e0f4      	LDI  R31,HIGH(_put_buff_G100)
0005f3 93fa      	ST   -Y,R31
0005f4 93ea      	ST   -Y,R30
0005f5 01de      	MOVW R26,R28
0005f6 961a      	ADIW R26,10
0005f7 dea3      	RCALL __print_G100
0005f8 019f      	MOVW R18,R30
0005f9 81ae      	LDD  R26,Y+6
0005fa 81bf      	LDD  R27,Y+6+1
0005fb e0e0      	LDI  R30,LOW(0)
0005fc 93ec      	ST   X,R30
0005fd 01f9      	MOVW R30,R18
                 _0x21C000D:
0005fe 940e 124b 	CALL __LOADLOCR4
000600 962a      	ADIW R28,10
000601 90ff      	POP  R15
000602 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
000603 93aa      	ST   -Y,R26
000604 81ea      	LDD  R30,Y+2
000605 70e3      	ANDI R30,LOW(0x3)
000606 83ea      	STD  Y+2,R30
000607 81e9      	LDD  R30,Y+1
000608 30e0      	CPI  R30,0
000609 f019      	BREQ _0x2020003
00060a 81ea      	LDD  R30,Y+2
00060b 61e0      	ORI  R30,0x10
00060c 83ea      	STD  Y+2,R30
                 _0x2020003:
00060d 81e8      	LD   R30,Y
00060e 30e0      	CPI  R30,0
00060f f019      	BREQ _0x2020004
000610 81ea      	LDD  R30,Y+2
000611 68e0      	ORI  R30,0x80
000612 83ea      	STD  Y+2,R30
                 _0x2020004:
000613 940e 0f7a 	CALL _i2c_start
000615 eda0      	LDI  R26,LOW(208)
000616 940e 0fae 	CALL _i2c_write
000618 e0a7      	LDI  R26,LOW(7)
000619 940e 0fae 	CALL _i2c_write
00061b 81aa      	LDD  R26,Y+2
00061c 940e 0fae 	CALL _i2c_write
00061e 940e 0f89 	CALL _i2c_stop
000620 c189      	RJMP _0x21C000A
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
000621 93ba      	ST   -Y,R27
000622 93aa      	ST   -Y,R26
000623 940e 0f7a 	CALL _i2c_start
000625 eda0      	LDI  R26,LOW(208)
000626 940e 0fae 	CALL _i2c_write
000628 e0a0      	LDI  R26,LOW(0)
000629 940e 0fae 	CALL _i2c_write
00062b 940e 0f89 	CALL _i2c_stop
00062d 940e 0f7a 	CALL _i2c_start
00062f eda1      	LDI  R26,LOW(209)
000630 940e 0fae 	CALL _i2c_write
000632 940e 0ebd 	CALL SUBOPT_0x13
000634 81a8      	LD   R26,Y
000635 81b9      	LDD  R27,Y+1
000636 93ec      	ST   X,R30
000637 940e 0ebd 	CALL SUBOPT_0x13
000639 81aa      	LDD  R26,Y+2
00063a 81bb      	LDD  R27,Y+2+1
00063b 93ec      	ST   X,R30
00063c e0a0      	LDI  R26,LOW(0)
00063d 940e 0f93 	CALL _i2c_read
00063f 2fae      	MOV  R26,R30
000640 940e 0d95 	CALL _bcd2bin
000642 81ac      	LDD  R26,Y+4
000643 81bd      	LDD  R27,Y+4+1
000644 93ec      	ST   X,R30
000645 940e 0f89 	CALL _i2c_stop
000647 940c 0823 	JMP  _0x21C0009
                 ; .FEND
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _st7920_delay_G103:
                 ; .FSTART _st7920_delay_G103
000649 0000          nop
00064a 0000          nop
00064b 0000          nop
00064c 9508      	RET
                 ; .FEND
                 _st7920_wrbus_G103:
                 ; .FSTART _st7920_wrbus_G103
00064d 93aa      	ST   -Y,R26
00064e 98a9      	CBI  0x15,1
00064f 9aaa      	SBI  0x15,2
000650 9aa4      	SBI  0x14,4
000651 9aa5      	SBI  0x14,5
000652 9aa6      	SBI  0x14,6
000653 9aa7      	SBI  0x14,7
000654 9ad7      	SBI  0x1A,7
000655 9ad6      	SBI  0x1A,6
000656 9ad5      	SBI  0x1A,5
000657 9ad4      	SBI  0x1A,4
000658 81e8      	LD   R30,Y
000659 70e1      	ANDI R30,LOW(0x1)
00065a f011      	BREQ _0x2060003
00065b 9aac      	SBI  0x15,4
00065c c001      	RJMP _0x2060004
                 _0x2060003:
00065d 98ac      	CBI  0x15,4
                 _0x2060004:
00065e 81e8      	LD   R30,Y
00065f 70e2      	ANDI R30,LOW(0x2)
000660 f011      	BREQ _0x2060005
000661 9aad      	SBI  0x15,5
000662 c001      	RJMP _0x2060006
                 _0x2060005:
000663 98ad      	CBI  0x15,5
                 _0x2060006:
000664 81e8      	LD   R30,Y
000665 70e4      	ANDI R30,LOW(0x4)
000666 f011      	BREQ _0x2060007
000667 9aae      	SBI  0x15,6
000668 c001      	RJMP _0x2060008
                 _0x2060007:
000669 98ae      	CBI  0x15,6
                 _0x2060008:
00066a 81e8      	LD   R30,Y
00066b 70e8      	ANDI R30,LOW(0x8)
00066c f011      	BREQ _0x2060009
00066d 9aaf      	SBI  0x15,7
00066e c001      	RJMP _0x206000A
                 _0x2060009:
00066f 98af      	CBI  0x15,7
                 _0x206000A:
000670 81e8      	LD   R30,Y
000671 71e0      	ANDI R30,LOW(0x10)
000672 f011      	BREQ _0x206000B
000673 9adf      	SBI  0x1B,7
000674 c001      	RJMP _0x206000C
                 _0x206000B:
000675 98df      	CBI  0x1B,7
                 _0x206000C:
000676 81e8      	LD   R30,Y
000677 72e0      	ANDI R30,LOW(0x20)
000678 f011      	BREQ _0x206000D
000679 9ade      	SBI  0x1B,6
00067a c001      	RJMP _0x206000E
                 _0x206000D:
00067b 98de      	CBI  0x1B,6
                 _0x206000E:
00067c 81e8      	LD   R30,Y
00067d 74e0      	ANDI R30,LOW(0x40)
00067e f011      	BREQ _0x206000F
00067f 9add      	SBI  0x1B,5
000680 c001      	RJMP _0x2060010
                 _0x206000F:
000681 98dd      	CBI  0x1B,5
                 _0x2060010:
000682 81e8      	LD   R30,Y
000683 78e0      	ANDI R30,LOW(0x80)
000684 f011      	BREQ _0x2060011
000685 9adc      	SBI  0x1B,4
000686 c001      	RJMP _0x2060012
                 _0x2060011:
000687 98dc      	CBI  0x1B,4
                 _0x2060012:
000688 dfc0      	RCALL _st7920_delay_G103
000689 98aa      	CBI  0x15,2
00068a c05b      	RJMP _0x21C000C
                 ; .FEND
                 _st7920_rdbus_G103:
                 ; .FSTART _st7920_rdbus_G103
00068b 931a      	ST   -Y,R17
00068c 940e 0ec3 	CALL SUBOPT_0x14
00068e e010      	LDI  R17,LOW(0)
00068f 999c      	SBIC 0x13,4
000690 e011      	LDI  R17,LOW(1)
000691 999d      	SBIC 0x13,5
000692 6012      	ORI  R17,LOW(2)
000693 999e      	SBIC 0x13,6
000694 6014      	ORI  R17,LOW(4)
000695 999f      	SBIC 0x13,7
000696 6018      	ORI  R17,LOW(8)
000697 99cf      	SBIC 0x19,7
000698 6110      	ORI  R17,LOW(16)
000699 99ce      	SBIC 0x19,6
00069a 6210      	ORI  R17,LOW(32)
00069b 99cd      	SBIC 0x19,5
00069c 6410      	ORI  R17,LOW(64)
00069d 99cc      	SBIC 0x19,4
00069e 6810      	ORI  R17,LOW(128)
00069f 98aa      	CBI  0x15,2
0006a0 2fe1      	MOV  R30,R17
0006a1 9119      	LD   R17,Y+
0006a2 9508      	RET
                 ; .FEND
                 _st7920_busy_G103:
                 ; .FSTART _st7920_busy_G103
0006a3 98a8      	CBI  0x15,0
0006a4 940e 0ec3 	CALL SUBOPT_0x14
                 _0x206001B:
0006a6 99cc      	SBIC 0x19,4
0006a7 cffe      	RJMP _0x206001B
0006a8 98aa      	CBI  0x15,2
                +
0006a9 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0006aa 958a     +DEC R24
0006ab f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0006ac 9508      	RET
                 ; .FEND
                 _st7920_wrdata:
                 ; .FSTART _st7920_wrdata
0006ad 93aa      	ST   -Y,R26
0006ae dff4      	RCALL _st7920_busy_G103
0006af 9aa8      	SBI  0x15,0
0006b0 81a8      	LD   R26,Y
0006b1 df9b      	RCALL _st7920_wrbus_G103
0006b2 c033      	RJMP _0x21C000C
                 ; .FEND
                 _st7920_rddata:
                 ; .FSTART _st7920_rddata
0006b3 dfef      	RCALL _st7920_busy_G103
0006b4 9aa8      	SBI  0x15,0
0006b5 dfd5      	RCALL _st7920_rdbus_G103
0006b6 9508      	RET
                 ; .FEND
                 _st7920_wrcmd:
                 ; .FSTART _st7920_wrcmd
0006b7 93aa      	ST   -Y,R26
0006b8 dfea      	RCALL _st7920_busy_G103
0006b9 81a8      	LD   R26,Y
0006ba df92      	RCALL _st7920_wrbus_G103
0006bb c02a      	RJMP _0x21C000C
                 ; .FEND
                 _st7920_setxy_G103:
                 ; .FSTART _st7920_setxy_G103
0006bc 93aa      	ST   -Y,R26
0006bd 81e8      	LD   R30,Y
0006be 71ef      	ANDI R30,LOW(0x1F)
0006bf 68e0      	ORI  R30,0x80
0006c0 2fae      	MOV  R26,R30
0006c1 dff5      	RCALL _st7920_wrcmd
0006c2 81a8      	LD   R26,Y
0006c3 32a0      	CPI  R26,LOW(0x20)
0006c4 f018      	BRLO _0x206001E
0006c5 81e9      	LDD  R30,Y+1
0006c6 68e0      	ORI  R30,0x80
0006c7 83e9      	STD  Y+1,R30
                 _0x206001E:
0006c8 81e9      	LDD  R30,Y+1
0006c9 95e2      	SWAP R30
0006ca 70ef      	ANDI R30,0xF
0006cb 68e0      	ORI  R30,0x80
0006cc 2fae      	MOV  R26,R30
0006cd dfe9      	RCALL _st7920_wrcmd
0006ce c0cb      	RJMP _0x21C000B
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0006cf 93aa      	ST   -Y,R26
0006d0 940e 0ecf 	CALL SUBOPT_0x15
0006d2 81e8      	LD   R30,Y
0006d3 30e0      	CPI  R30,0
0006d4 f011      	BREQ _0x206001F
0006d5 e0ec      	LDI  R30,LOW(12)
0006d6 c001      	RJMP _0x2060020
                 _0x206001F:
0006d7 e0e8      	LDI  R30,LOW(8)
                 _0x2060020:
0006d8 2fae      	MOV  R26,R30
0006d9 dfdd      	RCALL _st7920_wrcmd
0006da 81e8      	LD   R30,Y
0006db 30e0      	CPI  R30,0
0006dc f011      	BREQ _0x2060022
0006dd e0e2      	LDI  R30,LOW(2)
0006de c001      	RJMP _0x2060023
                 _0x2060022:
0006df e0e0      	LDI  R30,LOW(0)
                 _0x2060023:
0006e0 93e0 028e 	STS  _st7920_graphics_on_G103,R30
0006e2 940e 0ecf 	CALL SUBOPT_0x15
0006e4 940e 0ed5 	CALL SUBOPT_0x16
                 _0x21C000C:
0006e6 9621      	ADIW R28,1
0006e7 9508      	RET
                 ; .FEND
                 _glcd_cleargraphics:
                 ; .FSTART _glcd_cleargraphics
0006e8 940e 1244 	CALL __SAVELOCR4
0006ea e030      	LDI  R19,0
                +
0006eb 91e0 026a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0006ed 30e0      	CPI  R30,0
0006ee f009      	BREQ _0x2060025
0006ef ef3f      	LDI  R19,LOW(255)
                 _0x2060025:
0006f0 940e 0ed5 	CALL SUBOPT_0x16
0006f2 e000      	LDI  R16,LOW(0)
                 _0x2060026:
0006f3 3400      	CPI  R16,64
0006f4 f470      	BRSH _0x2060028
0006f5 e0e0      	LDI  R30,LOW(0)
0006f6 93ea      	ST   -Y,R30
0006f7 2fa0      	MOV  R26,R16
0006f8 5f0f      	SUBI R16,-1
0006f9 dfc2      	RCALL _st7920_setxy_G103
0006fa e110      	LDI  R17,LOW(16)
                 _0x2060029:
0006fb 2fe1      	MOV  R30,R17
0006fc 5011      	SUBI R17,1
0006fd 30e0      	CPI  R30,0
0006fe f019      	BREQ _0x206002B
0006ff 2fa3      	MOV  R26,R19
000700 dfac      	RCALL _st7920_wrdata
000701 cff9      	RJMP _0x2060029
                 _0x206002B:
000702 cff0      	RJMP _0x2060026
                 _0x2060028:
000703 e0e0      	LDI  R30,LOW(0)
000704 93ea      	ST   -Y,R30
000705 e0a0      	LDI  R26,LOW(0)
000706 d4f4      	RCALL _glcd_moveto
000707 940e 124b 	CALL __LOADLOCR4
000709 9624      	ADIW R28,4
00070a 9508      	RET
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
00070b 93ba      	ST   -Y,R27
00070c 93aa      	ST   -Y,R26
00070d 9aa2      	SBI  0x14,2
00070e 98aa      	CBI  0x15,2
00070f 9aa1      	SBI  0x14,1
000710 9aa9      	SBI  0x15,1
000711 9aa0      	SBI  0x14,0
000712 98a8      	CBI  0x15,0
000713 9aa3      	SBI  0x14,3
000714 e3a2      	LDI  R26,LOW(50)
000715 e0b0      	LDI  R27,0
000716 940e 0fc6 	CALL _delay_ms
000718 98ab      	CBI  0x15,3
000719 e0a1      	LDI  R26,LOW(1)
00071a e0b0      	LDI  R27,0
00071b 940e 0fc6 	CALL _delay_ms
00071d 9aab      	SBI  0x15,3
00071e e0a1      	LDI  R26,LOW(1)
00071f e0b0      	LDI  R27,0
000720 940e 0fc6 	CALL _delay_ms
000722 940e 0edb 	CALL SUBOPT_0x17
000724 940e 0edb 	CALL SUBOPT_0x17
000726 e0a8      	LDI  R26,LOW(8)
000727 df25      	RCALL _st7920_wrbus_G103
                +
000728 e280     +LDI R24 , LOW ( 800 )
000729 e093     +LDI R25 , HIGH ( 800 )
                +__DELAY_USW_LOOP :
00072a 9701     +SBIW R24 , 1
00072b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 800
00072c e0a1      	LDI  R26,LOW(1)
00072d df89      	RCALL _st7920_wrcmd
00072e e0af      	LDI  R26,LOW(15)
00072f e0b0      	LDI  R27,0
000730 940e 0fc6 	CALL _delay_ms
000732 e0e0      	LDI  R30,LOW(0)
000733 93e0 0291 	STS  _yt_G103,R30
000735 93e0 0290 	STS  _xt_G103,R30
000737 e0a6      	LDI  R26,LOW(6)
000738 df7e      	RCALL _st7920_wrcmd
000739 e3a4      	LDI  R26,LOW(52)
00073a df7c      	RCALL _st7920_wrcmd
00073b e4a0      	LDI  R26,LOW(64)
00073c df7a      	RCALL _st7920_wrcmd
00073d e0a2      	LDI  R26,LOW(2)
00073e df78      	RCALL _st7920_wrcmd
00073f e0e0      	LDI  R30,LOW(0)
000740 93e0 028e 	STS  _st7920_graphics_on_G103,R30
000742 dfa5      	RCALL _glcd_cleargraphics
000743 e0a1      	LDI  R26,LOW(1)
000744 df8a      	RCALL _glcd_display
000745 e0e1      	LDI  R30,LOW(1)
000746 93e0 0269 	STS  _glcd_state,R30
000748 e0e0      	LDI  R30,LOW(0)
                +
000749 93e0 026a+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00074b e0e1      	LDI  R30,LOW(1)
                +
00074c 93e0 026f+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00074e 93e0 0270+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
000750 81e8      	LD   R30,Y
000751 81f9      	LDD  R31,Y+1
000752 9730      	SBIW R30,0
000753 f0a9      	BREQ _0x206002C
000754 81a8      	LD   R26,Y
000755 81b9      	LDD  R27,Y+1
000756 940e 1206 	CALL __GETW1P
                +
000758 93e0 026d+STS _glcd_state + ( 4 ) , R30
00075a 93f0 026e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
00075c 9612      	ADIW R26,2
00075d 940e 1206 	CALL __GETW1P
                +
00075f 93e0 0282+STS _glcd_state + ( 25 ) , R30
000761 93f0 0283+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000763 81a8      	LD   R26,Y
000764 81b9      	LDD  R27,Y+1
000765 9614      	ADIW R26,4
000766 940e 1206 	CALL __GETW1P
000768 c00a      	RJMP _0x20600BB
                 _0x206002C:
000769 e0e0      	LDI  R30,LOW(0)
00076a e0f0      	LDI  R31,HIGH(0)
                +
00076b 93e0 026d+STS _glcd_state + ( 4 ) , R30
00076d 93f0 026e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00076f 93e0 0282+STS _glcd_state + ( 25 ) , R30
000771 93f0 0283+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20600BB:
                +
000773 93e0 0284+STS _glcd_state + ( 27 ) , R30
000775 93f0 0285+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000777 e0e1      	LDI  R30,LOW(1)
                +
000778 93e0 0271+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00077a efef      	LDI  R30,LOW(255)
                +
00077b 93e0 0272+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00077d e0e1      	LDI  R30,LOW(1)
                +
00077e 93e0 0279+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
000780 e7ea     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
000781 e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
000782 93fa      	ST   -Y,R31
000783 93ea      	ST   -Y,R30
000784 efef      	LDI  R30,LOW(255)
000785 93ea      	ST   -Y,R30
000786 e0a8      	LDI  R26,LOW(8)
000787 e0b0      	LDI  R27,0
000788 940e 0d6c 	CALL _memset
00078a e0e1      	LDI  R30,LOW(1)
00078b c00e      	RJMP _0x21C000B
                 ; .FEND
                 _st7920_rdbyte_G103:
                 ; .FSTART _st7920_rdbyte_G103
00078c 93aa      	ST   -Y,R26
00078d 81e9      	LDD  R30,Y+1
00078e 93ea      	ST   -Y,R30
00078f 81a9      	LDD  R26,Y+1
000790 df2b      	RCALL _st7920_setxy_G103
000791 df21      	RCALL _st7920_rddata
000792 81e9      	LDD  R30,Y+1
000793 70ef      	ANDI R30,LOW(0xF)
000794 30e8      	CPI  R30,LOW(0x8)
000795 f018      	BRLO _0x206002E
000796 df1c      	RCALL _st7920_rddata
000797 93e0 028f 	STS  _st7920_bits8_15_G103,R30
                 _0x206002E:
000799 df19      	RCALL _st7920_rddata
                 _0x21C000B:
00079a 9622      	ADIW R28,2
00079b 9508      	RET
                 ; .FEND
                 _st7920_wrbyte_G103:
                 ; .FSTART _st7920_wrbyte_G103
00079c 93aa      	ST   -Y,R26
00079d 81ea      	LDD  R30,Y+2
00079e 93ea      	ST   -Y,R30
00079f 81aa      	LDD  R26,Y+2
0007a0 df1b      	RCALL _st7920_setxy_G103
0007a1 81ea      	LDD  R30,Y+2
0007a2 70ef      	ANDI R30,LOW(0xF)
0007a3 30e8      	CPI  R30,LOW(0x8)
0007a4 f018      	BRLO _0x206002F
0007a5 91a0 028f 	LDS  R26,_st7920_bits8_15_G103
0007a7 df05      	RCALL _st7920_wrdata
                 _0x206002F:
0007a8 81a8      	LD   R26,Y
0007a9 df03      	RCALL _st7920_wrdata
                 _0x21C000A:
0007aa 9623      	ADIW R28,3
0007ab 9508      	RET
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
0007ac 93aa      	ST   -Y,R26
0007ad 931a      	ST   -Y,R17
0007ae 930a      	ST   -Y,R16
0007af 81ac      	LDD  R26,Y+4
0007b0 38a0      	CPI  R26,LOW(0x80)
0007b1 f418      	BRSH _0x2060031
0007b2 81ab      	LDD  R26,Y+3
0007b3 34a0      	CPI  R26,LOW(0x40)
0007b4 f020      	BRLO _0x2060030
                 _0x2060031:
0007b5 8119      	LDD  R17,Y+1
0007b6 8108      	LDD  R16,Y+0
0007b7 940c 0d7a 	JMP  _0x21C0003
                 _0x2060030:
0007b9 940e 0ed5 	CALL SUBOPT_0x16
0007bb 81ec      	LDD  R30,Y+4
0007bc 93ea      	ST   -Y,R30
0007bd 81ac      	LDD  R26,Y+4
0007be dfcd      	RCALL _st7920_rdbyte_G103
0007bf 2f1e      	MOV  R17,R30
0007c0 81ec      	LDD  R30,Y+4
0007c1 70e7      	ANDI R30,LOW(0x7)
0007c2 e0a7      	LDI  R26,LOW(7)
0007c3 940e 121d 	CALL __SWAPB12
0007c5 1bea      	SUB  R30,R26
0007c6 e0a1      	LDI  R26,LOW(1)
0007c7 940e 1194 	CALL __LSLB12
0007c9 2f0e      	MOV  R16,R30
0007ca 81ea      	LDD  R30,Y+2
0007cb 30e0      	CPI  R30,0
0007cc f011      	BREQ _0x2060033
0007cd 2b10      	OR   R17,R16
0007ce c003      	RJMP _0x2060034
                 _0x2060033:
0007cf 2fe0      	MOV  R30,R16
0007d0 95e0      	COM  R30
0007d1 231e      	AND  R17,R30
                 _0x2060034:
0007d2 81ec      	LDD  R30,Y+4
0007d3 93ea      	ST   -Y,R30
0007d4 81ec      	LDD  R30,Y+4
0007d5 93ea      	ST   -Y,R30
0007d6 2fa1      	MOV  R26,R17
0007d7 dfc4      	RCALL _st7920_wrbyte_G103
0007d8 8119      	LDD  R17,Y+1
0007d9 8108      	LDD  R16,Y+0
0007da 940c 0d7a 	JMP  _0x21C0003
                 ; .FEND
                 _st7920_wrmasked_G103:
                 ; .FSTART _st7920_wrmasked_G103
0007dc 93aa      	ST   -Y,R26
0007dd 931a      	ST   -Y,R17
0007de 940e 0ed5 	CALL SUBOPT_0x16
0007e0 81ed      	LDD  R30,Y+5
0007e1 93ea      	ST   -Y,R30
0007e2 81ad      	LDD  R26,Y+5
0007e3 940e 0ee3 	CALL SUBOPT_0x18
0007e5 2f1e      	MOV  R17,R30
0007e6 81e9      	LDD  R30,Y+1
0007e7 30e7      	CPI  R30,LOW(0x7)
0007e8 f011      	BREQ _0x206003F
0007e9 30e8      	CPI  R30,LOW(0x8)
0007ea f439      	BRNE _0x2060040
                 _0x206003F:
0007eb 81eb      	LDD  R30,Y+3
0007ec 93ea      	ST   -Y,R30
0007ed 81aa      	LDD  R26,Y+2
0007ee 940e 0dad 	CALL _glcd_mappixcolor1bit
0007f0 83eb      	STD  Y+3,R30
0007f1 c00e      	RJMP _0x2060041
                 _0x2060040:
0007f2 30e3      	CPI  R30,LOW(0x3)
0007f3 f421      	BRNE _0x2060043
0007f4 81eb      	LDD  R30,Y+3
0007f5 95e0      	COM  R30
0007f6 83eb      	STD  Y+3,R30
0007f7 c002      	RJMP _0x2060044
                 _0x2060043:
0007f8 30e0      	CPI  R30,0
0007f9 f409      	BRNE _0x2060045
                 _0x2060044:
0007fa c002      	RJMP _0x2060046
                 _0x2060045:
0007fb 30e9      	CPI  R30,LOW(0x9)
0007fc f409      	BRNE _0x2060047
                 _0x2060046:
0007fd c002      	RJMP _0x2060048
                 _0x2060047:
0007fe 30ea      	CPI  R30,LOW(0xA)
0007ff f421      	BRNE _0x2060049
                 _0x2060048:
                 _0x2060041:
000800 81ea      	LDD  R30,Y+2
000801 95e0      	COM  R30
000802 231e      	AND  R17,R30
000803 c002      	RJMP _0x206004A
                 _0x2060049:
000804 30e2      	CPI  R30,LOW(0x2)
000805 f429      	BRNE _0x206004B
                 _0x206004A:
000806 81ea      	LDD  R30,Y+2
000807 81ab      	LDD  R26,Y+3
000808 23ea      	AND  R30,R26
000809 2b1e      	OR   R17,R30
00080a c00e      	RJMP _0x206003D
                 _0x206004B:
00080b 30e1      	CPI  R30,LOW(0x1)
00080c f429      	BRNE _0x206004C
00080d 81ea      	LDD  R30,Y+2
00080e 81ab      	LDD  R26,Y+3
00080f 23ea      	AND  R30,R26
000810 271e      	EOR  R17,R30
000811 c007      	RJMP _0x206003D
                 _0x206004C:
000812 30e4      	CPI  R30,LOW(0x4)
000813 f429      	BRNE _0x206003D
000814 81ea      	LDD  R30,Y+2
000815 95e0      	COM  R30
000816 81ab      	LDD  R26,Y+3
000817 2bea      	OR   R30,R26
000818 231e      	AND  R17,R30
                 _0x206003D:
000819 81ed      	LDD  R30,Y+5
00081a 93ea      	ST   -Y,R30
00081b 81ed      	LDD  R30,Y+5
00081c 93ea      	ST   -Y,R30
00081d 2fa1      	MOV  R26,R17
00081e 940e 0e13 	CALL _glcd_revbits
000820 2fae      	MOV  R26,R30
000821 df7a      	RCALL _st7920_wrbyte_G103
000822 8118      	LDD  R17,Y+0
                 _0x21C0009:
000823 9626      	ADIW R28,6
000824 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000825 93aa      	ST   -Y,R26
000826 9727      	SBIW R28,7
000827 940e 1242 	CALL __SAVELOCR6
000829 89ac      	LDD  R26,Y+20
00082a 38a0      	CPI  R26,LOW(0x80)
00082b f448      	BRSH _0x206004F
00082c 89ab      	LDD  R26,Y+19
00082d 34a0      	CPI  R26,LOW(0x40)
00082e f430      	BRSH _0x206004F
00082f 89aa      	LDD  R26,Y+18
000830 30a0      	CPI  R26,LOW(0x0)
000831 f019      	BREQ _0x206004F
000832 89a9      	LDD  R26,Y+17
000833 30a0      	CPI  R26,LOW(0x0)
000834 f409      	BRNE _0x206004E
                 _0x206004F:
000835 c4c3      	RJMP _0x21C0005
                 _0x206004E:
000836 89ea      	LDD  R30,Y+18
000837 95e6      	LSR  R30
000838 95e6      	LSR  R30
000839 95e6      	LSR  R30
00083a 2f2e      	MOV  R18,R30
                +
00083b 8728     +STD Y + 8 , R18
                 	__PUTBSR 18,8
00083c 89ea      	LDD  R30,Y+18
00083d 70e7      	ANDI R30,LOW(0x7)
00083e 87eb      	STD  Y+11,R30
00083f 30e0      	CPI  R30,0
000840 f019      	BREQ _0x2060051
000841 85e8      	LDD  R30,Y+8
000842 5fef      	SUBI R30,-LOW(1)
000843 87e8      	STD  Y+8,R30
                 _0x2060051:
000844 890a      	LDD  R16,Y+18
000845 89ac      	LDD  R26,Y+20
000846 27bb      	CLR  R27
000847 89ea      	LDD  R30,Y+18
000848 e0f0      	LDI  R31,0
000849 0fae      	ADD  R26,R30
00084a 1fbf      	ADC  R27,R31
00084b 38a1      	CPI  R26,LOW(0x81)
00084c e0e0      	LDI  R30,HIGH(0x81)
00084d 07be      	CPC  R27,R30
00084e f020      	BRLO _0x2060052
00084f 89ac      	LDD  R26,Y+20
000850 e8e0      	LDI  R30,LOW(128)
000851 1bea      	SUB  R30,R26
000852 8bea      	STD  Y+18,R30
                 _0x2060052:
000853 89e9      	LDD  R30,Y+17
000854 87ea      	STD  Y+10,R30
000855 89ab      	LDD  R26,Y+19
000856 27bb      	CLR  R27
000857 89e9      	LDD  R30,Y+17
000858 e0f0      	LDI  R31,0
000859 0fae      	ADD  R26,R30
00085a 1fbf      	ADC  R27,R31
00085b 34a1      	CPI  R26,LOW(0x41)
00085c e0e0      	LDI  R30,HIGH(0x41)
00085d 07be      	CPC  R27,R30
00085e f020      	BRLO _0x2060053
00085f 89ab      	LDD  R26,Y+19
000860 e4e0      	LDI  R30,LOW(64)
000861 1bea      	SUB  R30,R26
000862 8be9      	STD  Y+17,R30
                 _0x2060053:
000863 85ed      	LDD  R30,Y+13
000864 30e6      	CPI  R30,LOW(0x6)
000865 f009      	BREQ PC+2
000866 c04e      	RJMP _0x2060057
000867 89e8      	LDD  R30,Y+16
000868 30e1      	CPI  R30,LOW(0x1)
000869 f409      	BRNE _0x206005B
00086a c48e      	RJMP _0x21C0005
                 _0x206005B:
00086b 30e3      	CPI  R30,LOW(0x3)
00086c f439      	BRNE _0x206005E
                +
00086d 91e0 0284+LDS R30 , _glcd_state + ( 27 )
00086f 91f0 0285+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000871 9730      	SBIW R30,0
000872 f409      	BRNE _0x206005D
000873 c485      	RJMP _0x21C0005
                 _0x206005D:
                 _0x206005E:
000874 85eb      	LDD  R30,Y+11
000875 30e0      	CPI  R30,0
000876 f419      	BRNE _0x2060060
000877 89aa      	LDD  R26,Y+18
000878 170a      	CP   R16,R26
000879 f0d9      	BREQ _0x206005F
                 _0x2060060:
00087a 2fe2      	MOV  R30,R18
00087b 85ae      	LDD  R26,Y+14
00087c 85bf      	LDD  R27,Y+14+1
00087d e0f0      	LDI  R31,0
00087e 940e 0ee8 	CALL SUBOPT_0x19
000880 8919      	LDD  R17,Y+17
                 _0x2060062:
000881 3010      	CPI  R17,0
000882 f091      	BREQ _0x2060064
000883 2f32      	MOV  R19,R18
                 _0x2060065:
000884 933f      	PUSH R19
000885 5f3f      	SUBI R19,-1
000886 85e8      	LDD  R30,Y+8
000887 91af      	POP  R26
000888 17ae      	CP   R26,R30
000889 f418      	BRSH _0x2060067
00088a 940e 0eed 	CALL SUBOPT_0x1A
00088c cff7      	RJMP _0x2060065
                 _0x2060067:
00088d 2fe2      	MOV  R30,R18
00088e 81ae      	LDD  R26,Y+6
00088f 81bf      	LDD  R27,Y+6+1
000890 e0f0      	LDI  R31,0
000891 940e 0ee8 	CALL SUBOPT_0x19
000893 5011      	SUBI R17,LOW(1)
000894 cfec      	RJMP _0x2060062
                 _0x2060064:
                 _0x206005F:
000895 8929      	LDD  R18,Y+17
000896 85ea      	LDD  R30,Y+10
000897 17e2      	CP   R30,R18
000898 f0d9      	BREQ _0x2060068
000899 2fa2      	MOV  R26,R18
00089a 27bb      	CLR  R27
00089b 85e8      	LDD  R30,Y+8
00089c e0f0      	LDI  R31,0
00089d 940e 11aa 	CALL __MULW12U
00089f 85ae      	LDD  R26,Y+14
0008a0 85bf      	LDD  R27,Y+14+1
0008a1 940e 0ee8 	CALL SUBOPT_0x19
                 _0x2060069:
0008a3 932f      	PUSH R18
0008a4 5f2f      	SUBI R18,-1
0008a5 85ea      	LDD  R30,Y+10
0008a6 91af      	POP  R26
0008a7 17ae      	CP   R26,R30
0008a8 f458      	BRSH _0x206006B
0008a9 e030      	LDI  R19,LOW(0)
                 _0x206006C:
0008aa 933f      	PUSH R19
0008ab 5f3f      	SUBI R19,-1
0008ac 85e8      	LDD  R30,Y+8
0008ad 91af      	POP  R26
0008ae 17ae      	CP   R26,R30
0008af f418      	BRSH _0x206006E
0008b0 940e 0eed 	CALL SUBOPT_0x1A
0008b2 cff7      	RJMP _0x206006C
                 _0x206006E:
0008b3 cfef      	RJMP _0x2060069
                 _0x206006B:
                 _0x2060068:
0008b4 c00d      	RJMP _0x2060056
                 _0x2060057:
0008b5 30e9      	CPI  R30,LOW(0x9)
0008b6 f411      	BRNE _0x206006F
0008b7 e0e0      	LDI  R30,LOW(0)
0008b8 c003      	RJMP _0x20600BC
                 _0x206006F:
0008b9 30ea      	CPI  R30,LOW(0xA)
0008ba f439      	BRNE _0x2060056
0008bb efef      	LDI  R30,LOW(255)
                 _0x20600BC:
0008bc 87ea      	STD  Y+10,R30
0008bd 93ea      	ST   -Y,R30
0008be 85ae      	LDD  R26,Y+14
0008bf 940e 0dad 	CALL _glcd_mappixcolor1bit
0008c1 87ea      	STD  Y+10,R30
                 _0x2060056:
0008c2 89ec      	LDD  R30,Y+20
0008c3 70e7      	ANDI R30,LOW(0x7)
0008c4 2f3e      	MOV  R19,R30
0008c5 e0e8      	LDI  R30,LOW(8)
0008c6 1be3      	SUB  R30,R19
0008c7 2f2e      	MOV  R18,R30
0008c8 2f52      	MOV  R21,R18
0008c9 89aa      	LDD  R26,Y+18
0008ca 172a      	CP   R18,R26
0008cb f010      	BRLO _0x2060073
0008cc 895a      	LDD  R21,Y+18
0008cd c00e      	RJMP _0x2060074
                 _0x2060073:
0008ce 3030      	CPI  R19,0
0008cf f061      	BREQ _0x2060075
0008d0 2f43      	MOV  R20,R19
0008d1 89aa      	LDD  R26,Y+18
0008d2 30a9      	CPI  R26,LOW(0x9)
0008d3 f418      	BRSH _0x2060076
0008d4 89ea      	LDD  R30,Y+18
0008d5 1be2      	SUB  R30,R18
0008d6 2f4e      	MOV  R20,R30
                 _0x2060076:
0008d7 2fe4      	MOV  R30,R20
0008d8 e0f0      	LDI  R31,0
0008d9 5ae2      	SUBI R30,LOW(-__glcd_mask*2)
0008da 4ffc      	SBCI R31,HIGH(-__glcd_mask*2)
0008db 9144      	LPM  R20,Z
                 _0x2060075:
                 _0x2060074:
0008dc 933a      	ST   -Y,R19
0008dd 2fa5      	MOV  R26,R21
0008de 940e 0da2 	CALL _glcd_getmask
0008e0 2f5e      	MOV  R21,R30
0008e1 85ab      	LDD  R26,Y+11
0008e2 172a      	CP   R18,R26
0008e3 f418      	BRSH _0x2060077
0008e4 85eb      	LDD  R30,Y+11
0008e5 1be2      	SUB  R30,R18
0008e6 87eb      	STD  Y+11,R30
                 _0x2060077:
0008e7 85eb      	LDD  R30,Y+11
0008e8 e0f0      	LDI  R31,0
0008e9 5ae2      	SUBI R30,LOW(-__glcd_mask*2)
0008ea 4ffc      	SBCI R31,HIGH(-__glcd_mask*2)
0008eb 9004      	LPM  R0,Z
0008ec 860c      	STD  Y+12,R0
0008ed 940e 0ed5 	CALL SUBOPT_0x16
                 _0x2060078:
0008ef 89e9      	LDD  R30,Y+17
0008f0 50e1      	SUBI R30,LOW(1)
0008f1 8be9      	STD  Y+17,R30
0008f2 5fef      	SUBI R30,-LOW(1)
0008f3 f409      	BRNE PC+2
0008f4 c0e9      	RJMP _0x206007A
0008f5 e010      	LDI  R17,LOW(0)
0008f6 890c      	LDD  R16,Y+20
0008f7 85ee      	LDD  R30,Y+14
0008f8 85ff      	LDD  R31,Y+14+1
0008f9 83ee      	STD  Y+6,R30
0008fa 83ff      	STD  Y+6+1,R31
0008fb 3030      	CPI  R19,0
0008fc f409      	BRNE PC+2
0008fd c096      	RJMP _0x206007B
                +
0008fe 874b     +STD Y + 11 , R20
                 	__PUTBSR 20,11
0008ff 85ad      	LDD  R26,Y+13
000900 30a6      	CPI  R26,LOW(0x6)
000901 f009      	BREQ PC+2
000902 c055      	RJMP _0x206007C
                 _0x206007D:
000903 89ea      	LDD  R30,Y+18
000904 171e      	CP   R17,R30
000905 f008      	BRLO PC+2
000906 c050      	RJMP _0x206007F
000907 930a      	ST   -Y,R16
000908 89ac      	LDD  R26,Y+20
000909 940e 0ee3 	CALL SUBOPT_0x18
00090b 23e5      	AND  R30,R21
00090c 2fae      	MOV  R26,R30
00090d 2fe3      	MOV  R30,R19
00090e 940e 119c 	CALL __LSRB12
000910 87e9      	STD  Y+9,R30
000911 940e 0efa 	CALL SUBOPT_0x1B
000913 2e1e      	MOV  R1,R30
000914 2fe3      	MOV  R30,R19
000915 2fa5      	MOV  R26,R21
000916 940e 119c 	CALL __LSRB12
000918 95e0      	COM  R30
000919 21e1      	AND  R30,R1
00091a 85a9      	LDD  R26,Y+9
00091b 2bea      	OR   R30,R26
00091c 87e9      	STD  Y+9,R30
00091d 89aa      	LDD  R26,Y+18
00091e 172a      	CP   R18,R26
00091f f430      	BRSH _0x2060081
000920 2fe0      	MOV  R30,R16
000921 95e6      	LSR  R30
000922 95e6      	LSR  R30
000923 95e6      	LSR  R30
000924 30ef      	CPI  R30,LOW(0xF)
000925 f040      	BRLO _0x2060080
                 _0x2060081:
000926 940e 0f02 	CALL SUBOPT_0x1C
000928 93fa      	ST   -Y,R31
000929 93ea      	ST   -Y,R30
00092a 85ac      	LDD  R26,Y+12
00092b 940e 0df4 	CALL _glcd_writemem
00092d c029      	RJMP _0x206007F
                 _0x2060080:
00092e 89aa      	LDD  R26,Y+18
00092f 1ba1      	SUB  R26,R17
000930 30a8      	CPI  R26,LOW(0x8)
000931 f410      	BRSH _0x2060083
000932 85ec      	LDD  R30,Y+12
000933 87eb      	STD  Y+11,R30
                 _0x2060083:
000934 5f08      	SUBI R16,-LOW(8)
000935 930a      	ST   -Y,R16
000936 89ac      	LDD  R26,Y+20
000937 940e 0ee3 	CALL SUBOPT_0x18
000939 85ab      	LDD  R26,Y+11
00093a 23ea      	AND  R30,R26
00093b 2fae      	MOV  R26,R30
00093c 2fe2      	MOV  R30,R18
00093d 940e 1194 	CALL __LSLB12
00093f 87ea      	STD  Y+10,R30
000940 2fe2      	MOV  R30,R18
000941 85ab      	LDD  R26,Y+11
000942 940e 1194 	CALL __LSLB12
000944 95e0      	COM  R30
000945 85a9      	LDD  R26,Y+9
000946 23ea      	AND  R30,R26
000947 85aa      	LDD  R26,Y+10
000948 2bea      	OR   R30,R26
000949 87ea      	STD  Y+10,R30
00094a 940e 0f02 	CALL SUBOPT_0x1C
00094c 9631      	ADIW R30,1
00094d 83ef      	STD  Y+7,R30
00094e 87f8      	STD  Y+7+1,R31
00094f 9731      	SBIW R30,1
000950 93fa      	ST   -Y,R31
000951 93ea      	ST   -Y,R30
000952 85ad      	LDD  R26,Y+13
000953 940e 0df4 	CALL _glcd_writemem
000955 5f18      	SUBI R17,-LOW(8)
000956 cfac      	RJMP _0x206007D
                 _0x206007F:
000957 c03b      	RJMP _0x2060084
                 _0x206007C:
                 _0x2060085:
000958 89ea      	LDD  R30,Y+18
000959 171e      	CP   R17,R30
00095a f5c0      	BRSH _0x2060087
00095b 85ed      	LDD  R30,Y+13
00095c 30e9      	CPI  R30,LOW(0x9)
00095d f011      	BREQ _0x206008C
00095e 30ea      	CPI  R30,LOW(0xA)
00095f f409      	BRNE _0x206008E
                 _0x206008C:
000960 c00d      	RJMP _0x206008A
                 _0x206008E:
000961 940e 0f02 	CALL SUBOPT_0x1C
000963 9631      	ADIW R30,1
000964 83ef      	STD  Y+7,R30
000965 87f8      	STD  Y+7+1,R31
000966 9731      	SBIW R30,1
000967 2766      	CLR  R22
000968 2777      	CLR  R23
000969 01df      	MOVW R26,R30
00096a 01cb      	MOVW R24,R22
00096b 940e 0dd5 	CALL _glcd_readmem
00096d 87ea      	STD  Y+10,R30
                 _0x206008A:
00096e 930a      	ST   -Y,R16
00096f 89ec      	LDD  R30,Y+20
000970 93ea      	ST   -Y,R30
000971 2fe3      	MOV  R30,R19
000972 85ac      	LDD  R26,Y+12
000973 940e 1194 	CALL __LSLB12
000975 93ea      	ST   -Y,R30
000976 935a      	ST   -Y,R21
000977 89a9      	LDD  R26,Y+17
000978 de63      	RCALL _st7920_wrmasked_G103
000979 89aa      	LDD  R26,Y+18
00097a 172a      	CP   R18,R26
00097b f4b8      	BRSH _0x2060087
00097c 2fe0      	MOV  R30,R16
00097d 95e6      	LSR  R30
00097e 95e6      	LSR  R30
00097f 95e6      	LSR  R30
000980 30ef      	CPI  R30,LOW(0xF)
000981 f488      	BRSH _0x2060087
000982 1ba1      	SUB  R26,R17
000983 30a8      	CPI  R26,LOW(0x8)
000984 f410      	BRSH _0x2060091
000985 85ec      	LDD  R30,Y+12
000986 87eb      	STD  Y+11,R30
                 _0x2060091:
000987 5f08      	SUBI R16,-LOW(8)
000988 930a      	ST   -Y,R16
000989 89ec      	LDD  R30,Y+20
00098a 93ea      	ST   -Y,R30
00098b 2fe2      	MOV  R30,R18
00098c 85ac      	LDD  R26,Y+12
00098d 940e 119c 	CALL __LSRB12
00098f 940e 0f07 	CALL SUBOPT_0x1D
000991 5f18      	SUBI R17,-LOW(8)
000992 cfc5      	RJMP _0x2060085
                 _0x2060087:
                 _0x2060084:
000993 c03e      	RJMP _0x2060092
                 _0x206007B:
                +
000994 875b     +STD Y + 11 , R21
                 	__PUTBSR 21,11
                 _0x2060093:
000995 89ea      	LDD  R30,Y+18
000996 171e      	CP   R17,R30
000997 f5d0      	BRSH _0x2060095
000998 89aa      	LDD  R26,Y+18
000999 1ba1      	SUB  R26,R17
00099a 30a8      	CPI  R26,LOW(0x8)
00099b f410      	BRSH _0x2060096
00099c 85ec      	LDD  R30,Y+12
00099d 87eb      	STD  Y+11,R30
                 _0x2060096:
00099e 85ed      	LDD  R30,Y+13
00099f 30e9      	CPI  R30,LOW(0x9)
0009a0 f011      	BREQ _0x206009B
0009a1 30ea      	CPI  R30,LOW(0xA)
0009a2 f409      	BRNE _0x206009D
                 _0x206009B:
0009a3 c009      	RJMP _0x2060099
                 _0x206009D:
0009a4 85ad      	LDD  R26,Y+13
0009a5 30a6      	CPI  R26,LOW(0x6)
0009a6 f419      	BRNE _0x206009F
0009a7 85ab      	LDD  R26,Y+11
0009a8 3faf      	CPI  R26,LOW(0xFF)
0009a9 f019      	BREQ _0x206009E
                 _0x206009F:
0009aa 940e 0efa 	CALL SUBOPT_0x1B
0009ac 87ea      	STD  Y+10,R30
                 _0x206009E:
                 _0x2060099:
0009ad 85ad      	LDD  R26,Y+13
0009ae 30a6      	CPI  R26,LOW(0x6)
0009af f4a1      	BRNE _0x20600A1
0009b0 940e 0f02 	CALL SUBOPT_0x1C
0009b2 93fa      	ST   -Y,R31
0009b3 93ea      	ST   -Y,R30
0009b4 930a      	ST   -Y,R16
0009b5 89af      	LDD  R26,Y+23
0009b6 940e 0ee3 	CALL SUBOPT_0x18
0009b8 85ae      	LDD  R26,Y+14
0009b9 23ea      	AND  R30,R26
0009ba 2e0e      	MOV  R0,R30
0009bb 85ee      	LDD  R30,Y+14
0009bc 95e0      	COM  R30
0009bd 85ad      	LDD  R26,Y+13
0009be 23ea      	AND  R30,R26
0009bf 29e0      	OR   R30,R0
0009c0 2fae      	MOV  R26,R30
0009c1 940e 0df4 	CALL _glcd_writemem
0009c3 c006      	RJMP _0x20600A2
                 _0x20600A1:
0009c4 930a      	ST   -Y,R16
0009c5 89ec      	LDD  R30,Y+20
0009c6 93ea      	ST   -Y,R30
0009c7 85ec      	LDD  R30,Y+12
0009c8 940e 0f07 	CALL SUBOPT_0x1D
                 _0x20600A2:
0009ca 81ee      	LDD  R30,Y+6
0009cb 81ff      	LDD  R31,Y+6+1
0009cc 9631      	ADIW R30,1
0009cd 83ee      	STD  Y+6,R30
0009ce 83ff      	STD  Y+6+1,R31
0009cf 5f08      	SUBI R16,-LOW(8)
0009d0 5f18      	SUBI R17,-LOW(8)
0009d1 cfc3      	RJMP _0x2060093
                 _0x2060095:
                 _0x2060092:
0009d2 89eb      	LDD  R30,Y+19
0009d3 5fef      	SUBI R30,-LOW(1)
0009d4 8beb      	STD  Y+19,R30
0009d5 85e8      	LDD  R30,Y+8
0009d6 85ae      	LDD  R26,Y+14
0009d7 85bf      	LDD  R27,Y+14+1
0009d8 e0f0      	LDI  R31,0
0009d9 0fea      	ADD  R30,R26
0009da 1ffb      	ADC  R31,R27
0009db 87ee      	STD  Y+14,R30
0009dc 87ff      	STD  Y+14+1,R31
0009dd cf11      	RJMP _0x2060078
                 _0x206007A:
0009de c31a      	RJMP _0x21C0005
                 ; .FEND
                 _glcd_putcharcg:
                 ; .FSTART _glcd_putcharcg
0009df 93aa      	ST   -Y,R26
0009e0 931a      	ST   -Y,R17
0009e1 930a      	ST   -Y,R16
0009e2 81ac      	LDD  R26,Y+4
0009e3 31a0      	CPI  R26,LOW(0x10)
0009e4 f010      	BRLO _0x20600A5
0009e5 e0ef      	LDI  R30,LOW(15)
0009e6 83ec      	STD  Y+4,R30
                 _0x20600A5:
0009e7 81ab      	LDD  R26,Y+3
0009e8 30a4      	CPI  R26,LOW(0x4)
0009e9 f010      	BRLO _0x20600A6
0009ea e0e3      	LDI  R30,LOW(3)
0009eb 83eb      	STD  Y+3,R30
                 _0x20600A6:
0009ec 81eb      	LDD  R30,Y+3
0009ed e0f0      	LDI  R31,0
0009ee 59e8      	SUBI R30,LOW(-_st7920_base_y_G103*2)
0009ef 4ffc      	SBCI R31,HIGH(-_st7920_base_y_G103*2)
0009f0 91a4      	LPM  R26,Z
0009f1 81ec      	LDD  R30,Y+4
0009f2 95e6      	LSR  R30
0009f3 2bea      	OR   R30,R26
0009f4 2f1e      	MOV  R17,R30
0009f5 940e 0ecf 	CALL SUBOPT_0x15
0009f7 2fa1      	MOV  R26,R17
0009f8 dcbe      	RCALL _st7920_wrcmd
0009f9 dcb9      	RCALL _st7920_rddata
0009fa 81ec      	LDD  R30,Y+4
0009fb 70e1      	ANDI R30,LOW(0x1)
0009fc f011      	BREQ _0x20600A7
0009fd dcb5      	RCALL _st7920_rddata
0009fe 2f0e      	MOV  R16,R30
                 _0x20600A7:
0009ff 2fa1      	MOV  R26,R17
000a00 dcb6      	RCALL _st7920_wrcmd
000a01 81ec      	LDD  R30,Y+4
000a02 70e1      	ANDI R30,LOW(0x1)
000a03 f011      	BREQ _0x20600A8
000a04 2fa0      	MOV  R26,R16
000a05 dca7      	RCALL _st7920_wrdata
                 _0x20600A8:
000a06 81aa      	LDD  R26,Y+2
000a07 dca5      	RCALL _st7920_wrdata
000a08 8119      	LDD  R17,Y+1
000a09 8108      	LDD  R16,Y+0
000a0a 940c 0d7a 	JMP  _0x21C0003
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000a0c 940e 0f0d 	CALL SUBOPT_0x1E
000a0e f024      	BRLT _0x2080003
000a0f e0e0      	LDI  R30,LOW(0)
000a10 e0f0      	LDI  R31,HIGH(0)
000a11 940c 0dab 	JMP  _0x21C0002
                 _0x2080003:
000a13 81a8      	LD   R26,Y
000a14 81b9      	LDD  R27,Y+1
000a15 38a0      	CPI  R26,LOW(0x80)
000a16 e0e0      	LDI  R30,HIGH(0x80)
000a17 07be      	CPC  R27,R30
000a18 f024      	BRLT _0x2080004
000a19 e7ef      	LDI  R30,LOW(127)
000a1a e0f0      	LDI  R31,HIGH(127)
000a1b 940c 0dab 	JMP  _0x21C0002
                 _0x2080004:
000a1d 81e8      	LD   R30,Y
000a1e 81f9      	LDD  R31,Y+1
000a1f 940c 0dab 	JMP  _0x21C0002
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000a21 940e 0f0d 	CALL SUBOPT_0x1E
000a23 f024      	BRLT _0x2080005
000a24 e0e0      	LDI  R30,LOW(0)
000a25 e0f0      	LDI  R31,HIGH(0)
000a26 940c 0dab 	JMP  _0x21C0002
                 _0x2080005:
000a28 81a8      	LD   R26,Y
000a29 81b9      	LDD  R27,Y+1
000a2a 34a0      	CPI  R26,LOW(0x40)
000a2b e0e0      	LDI  R30,HIGH(0x40)
000a2c 07be      	CPC  R27,R30
000a2d f024      	BRLT _0x2080006
000a2e e3ef      	LDI  R30,LOW(63)
000a2f e0f0      	LDI  R31,HIGH(63)
000a30 940c 0dab 	JMP  _0x21C0002
                 _0x2080006:
000a32 81e8      	LD   R30,Y
000a33 81f9      	LDD  R31,Y+1
000a34 940c 0dab 	JMP  _0x21C0002
                 ; .FEND
                 _glcd_imagesize:
                 ; .FSTART _glcd_imagesize
000a36 93aa      	ST   -Y,R26
000a37 931a      	ST   -Y,R17
000a38 81aa      	LDD  R26,Y+2
000a39 38a0      	CPI  R26,LOW(0x80)
000a3a f418      	BRSH _0x2080008
000a3b 81a9      	LDD  R26,Y+1
000a3c 34a0      	CPI  R26,LOW(0x40)
000a3d f038      	BRLO _0x2080007
                 _0x2080008:
                +
000a3e e0e0     +LDI R30 , LOW ( 0x0 )
000a3f e0f0     +LDI R31 , HIGH ( 0x0 )
000a40 e060     +LDI R22 , BYTE3 ( 0x0 )
000a41 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000a42 8118      	LDD  R17,Y+0
000a43 940c 0df2 	JMP  _0x21C0001
                 _0x2080007:
000a45 81ea      	LDD  R30,Y+2
000a46 70e7      	ANDI R30,LOW(0x7)
000a47 2f1e      	MOV  R17,R30
000a48 81ea      	LDD  R30,Y+2
000a49 95e6      	LSR  R30
000a4a 95e6      	LSR  R30
000a4b 95e6      	LSR  R30
000a4c 83ea      	STD  Y+2,R30
000a4d 3010      	CPI  R17,0
000a4e f011      	BREQ _0x208000A
000a4f 5fef      	SUBI R30,-LOW(1)
000a50 83ea      	STD  Y+2,R30
                 _0x208000A:
000a51 81aa      	LDD  R26,Y+2
000a52 27bb      	CLR  R27
000a53 2788      	CLR  R24
000a54 2799      	CLR  R25
000a55 81e9      	LDD  R30,Y+1
000a56 27ff      	CLR  R31
000a57 2766      	CLR  R22
000a58 2777      	CLR  R23
000a59 940e 11b2 	CALL __MULD12U
                +
000a5b 5fec     +SUBI R30 , LOW ( - 4 )
000a5c 4fff     +SBCI R31 , HIGH ( - 4 )
000a5d 4f6f     +SBCI R22 , BYTE3 ( - 4 )
000a5e 4f7f     +SBCI R23 , BYTE4 ( - 4 )
                 	__ADDD1N 4
000a5f 8118      	LDD  R17,Y+0
000a60 940c 0df2 	JMP  _0x21C0001
                 ; .FEND
                 _glcd_getcharw_G104:
                 ; .FSTART _glcd_getcharw_G104
000a62 93ba      	ST   -Y,R27
000a63 93aa      	ST   -Y,R26
000a64 9723      	SBIW R28,3
000a65 940e 0f14 	CALL SUBOPT_0x1F
000a67 018f      	MOVW R16,R30
000a68 2e00      	MOV  R0,R16
000a69 2a01      	OR   R0,R17
000a6a f419      	BRNE _0x208000B
000a6b e0e0      	LDI  R30,LOW(0)
000a6c e0f0      	LDI  R31,HIGH(0)
000a6d c068      	RJMP _0x21C0008
                 _0x208000B:
000a6e 940e 0f1b 	CALL SUBOPT_0x20
000a70 820f      	STD  Y+7,R0
000a71 940e 0f1b 	CALL SUBOPT_0x20
000a73 820e      	STD  Y+6,R0
000a74 940e 0f1b 	CALL SUBOPT_0x20
000a76 8608      	STD  Y+8,R0
000a77 85eb      	LDD  R30,Y+11
000a78 85a8      	LDD  R26,Y+8
000a79 17ea      	CP   R30,R26
000a7a f418      	BRSH _0x208000C
000a7b e0e0      	LDI  R30,LOW(0)
000a7c e0f0      	LDI  R31,HIGH(0)
000a7d c058      	RJMP _0x21C0008
                 _0x208000C:
000a7e 01f8      	MOVW R30,R16
                +
000a7f 5f0f     +SUBI R16 , LOW ( - 1 )
000a80 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000a81 9154      	LPM  R21,Z
000a82 85a8      	LDD  R26,Y+8
000a83 27bb      	CLR  R27
000a84 27ee      	CLR  R30
000a85 0fa5      	ADD  R26,R21
000a86 1fbe      	ADC  R27,R30
000a87 85eb      	LDD  R30,Y+11
000a88 e0f0      	LDI  R31,0
000a89 17ea      	CP   R30,R26
000a8a 07fb      	CPC  R31,R27
000a8b f018      	BRLO _0x208000D
000a8c e0e0      	LDI  R30,LOW(0)
000a8d e0f0      	LDI  R31,HIGH(0)
000a8e c047      	RJMP _0x21C0008
                 _0x208000D:
000a8f 81ef      	LDD  R30,Y+7
000a90 30e0      	CPI  R30,0
000a91 f0e1      	BREQ _0x208000E
000a92 85a9      	LDD  R26,Y+9
000a93 85ba      	LDD  R27,Y+9+1
000a94 93ec      	ST   X,R30
000a95 95e6      	LSR  R30
000a96 95e6      	LSR  R30
000a97 95e6      	LSR  R30
000a98 2f4e      	MOV  R20,R30
000a99 81ef      	LDD  R30,Y+7
000a9a 70e7      	ANDI R30,LOW(0x7)
000a9b f009      	BREQ _0x208000F
000a9c 5f4f      	SUBI R20,-LOW(1)
                 _0x208000F:
000a9d 85a8      	LDD  R26,Y+8
000a9e 85eb      	LDD  R30,Y+11
000a9f 1bea      	SUB  R30,R26
000aa0 e0f0      	LDI  R31,0
000aa1 01df      	MOVW R26,R30
000aa2 81ee      	LDD  R30,Y+6
000aa3 e0f0      	LDI  R31,0
000aa4 940e 11aa 	CALL __MULW12U
000aa6 01df      	MOVW R26,R30
000aa7 2fe4      	MOV  R30,R20
000aa8 e0f0      	LDI  R31,0
000aa9 940e 11aa 	CALL __MULW12U
000aab 0fe0      	ADD  R30,R16
000aac 1ff1      	ADC  R31,R17
000aad c028      	RJMP _0x21C0008
                 _0x208000E:
000aae 0198      	MOVW R18,R16
000aaf 2fe5      	MOV  R30,R21
000ab0 e0f0      	LDI  R31,0
                +
000ab1 0f0e     +ADD R16 , R30
000ab2 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2080010:
000ab3 85a8      	LDD  R26,Y+8
000ab4 5faf      	SUBI R26,-LOW(1)
000ab5 87a8      	STD  Y+8,R26
000ab6 50a1      	SUBI R26,LOW(1)
000ab7 85eb      	LDD  R30,Y+11
000ab8 17ae      	CP   R26,R30
000ab9 f4b0      	BRSH _0x2080012
000aba 01f9      	MOVW R30,R18
000abb 91e4      	LPM  R30,Z
000abc 95e6      	LSR  R30
000abd 95e6      	LSR  R30
000abe 95e6      	LSR  R30
000abf 2f4e      	MOV  R20,R30
000ac0 01f9      	MOVW R30,R18
                +
000ac1 5f2f     +SUBI R18 , LOW ( - 1 )
000ac2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000ac3 91e4      	LPM  R30,Z
000ac4 70e7      	ANDI R30,LOW(0x7)
000ac5 f009      	BREQ _0x2080013
000ac6 5f4f      	SUBI R20,-LOW(1)
                 _0x2080013:
000ac7 81ae      	LDD  R26,Y+6
000ac8 27bb      	CLR  R27
000ac9 2fe4      	MOV  R30,R20
000aca e0f0      	LDI  R31,0
000acb 940e 11aa 	CALL __MULW12U
                +
000acd 0f0e     +ADD R16 , R30
000ace 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000acf cfe3      	RJMP _0x2080010
                 _0x2080012:
000ad0 01f9      	MOVW R30,R18
000ad1 91e4      	LPM  R30,Z
000ad2 85a9      	LDD  R26,Y+9
000ad3 85ba      	LDD  R27,Y+9+1
000ad4 93ec      	ST   X,R30
000ad5 01f8      	MOVW R30,R16
                 _0x21C0008:
000ad6 940e 1249 	CALL __LOADLOCR6
000ad8 962c      	ADIW R28,12
000ad9 9508      	RET
                 ; .FEND
                 _glcd_new_line_G104:
                 ; .FSTART _glcd_new_line_G104
000ada e0e0      	LDI  R30,LOW(0)
                +
000adb 93e0 026b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000add 91a0 026c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000adf 27bb      	CLR  R27
000ae0 940e 0f20 	CALL SUBOPT_0x21
000ae2 e0f0      	LDI  R31,0
000ae3 0fae      	ADD  R26,R30
000ae4 1fbf      	ADC  R27,R31
                +
000ae5 91e0 0270+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000ae7 e0f0      	LDI  R31,0
000ae8 0fae      	ADD  R26,R30
000ae9 1fbf      	ADC  R27,R31
000aea 940e 0f27 	CALL SUBOPT_0x22
000aec 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000aed 93aa      	ST   -Y,R26
000aee 9721      	SBIW R28,1
000aef 940e 0f14 	CALL SUBOPT_0x1F
000af1 9730      	SBIW R30,0
000af2 f409      	BRNE PC+2
000af3 c052      	RJMP _0x2080020
000af4 81af      	LDD  R26,Y+7
000af5 30aa      	CPI  R26,LOW(0xA)
000af6 f409      	BRNE _0x2080021
000af7 c04b      	RJMP _0x2080022
                 _0x2080021:
000af8 81ef      	LDD  R30,Y+7
000af9 93ea      	ST   -Y,R30
000afa 01de      	MOVW R26,R28
000afb 9617      	ADIW R26,7
000afc df65      	RCALL _glcd_getcharw_G104
000afd 01af      	MOVW R20,R30
000afe 9730      	SBIW R30,0
000aff f409      	BRNE _0x2080023
000b00 c07d      	RJMP _0x21C0007
                 _0x2080023:
                +
000b01 91e0 026f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000b03 81ae      	LDD  R26,Y+6
000b04 0fea      	ADD  R30,R26
000b05 2f3e      	MOV  R19,R30
                +
000b06 91a0 026b+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000b08 27bb      	CLR  R27
000b09 e0f0      	LDI  R31,0
000b0a 0fea      	ADD  R30,R26
000b0b 1ffb      	ADC  R31,R27
000b0c 018f      	MOVW R16,R30
                +
000b0d 3801     +CPI R16 , LOW ( 129 )
000b0e e0e0     +LDI R30 , HIGH ( 129 )
000b0f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
000b10 f018      	BRLO _0x2080024
000b11 2f03      	MOV  R16,R19
000b12 2711      	CLR  R17
000b13 dfc6      	RCALL _glcd_new_line_G104
                 _0x2080024:
000b14 940e 0f2c 	CALL SUBOPT_0x23
000b16 85e8      	LDD  R30,Y+8
000b17 93ea      	ST   -Y,R30
000b18 940e 0f20 	CALL SUBOPT_0x21
000b1a 93ea      	ST   -Y,R30
000b1b e0e1      	LDI  R30,LOW(1)
000b1c 93ea      	ST   -Y,R30
000b1d 935a      	ST   -Y,R21
000b1e 934a      	ST   -Y,R20
000b1f e0a7      	LDI  R26,LOW(7)
000b20 940e 0f33 	CALL SUBOPT_0x24
000b22 81ae      	LDD  R26,Y+6
000b23 0fea      	ADD  R30,R26
000b24 93ea      	ST   -Y,R30
                +
000b25 91e0 026c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000b27 93ea      	ST   -Y,R30
                +
000b28 91e0 026f+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000b2a 93ea      	ST   -Y,R30
000b2b 940e 0f20 	CALL SUBOPT_0x21
000b2d 940e 0f38 	CALL SUBOPT_0x25
000b2f 940e 0f33 	CALL SUBOPT_0x24
000b31 93ea      	ST   -Y,R30
                +
000b32 91a0 026c+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000b34 940e 0f20 	CALL SUBOPT_0x21
000b36 0fea      	ADD  R30,R26
000b37 93ea      	ST   -Y,R30
000b38 933a      	ST   -Y,R19
                +
000b39 91e0 0270+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000b3b 940e 0f38 	CALL SUBOPT_0x25
000b3d dce7      	RCALL _glcd_block
000b3e e8e0      	LDI  R30,LOW(128)
000b3f e0f0      	LDI  R31,HIGH(128)
000b40 17e0      	CP   R30,R16
000b41 07f1      	CPC  R31,R17
000b42 f411      	BRNE _0x2080025
                 _0x2080022:
000b43 df96      	RCALL _glcd_new_line_G104
000b44 c039      	RJMP _0x21C0007
                 _0x2080025:
000b45 c036      	RJMP _0x2080026
                 _0x2080020:
000b46 81af      	LDD  R26,Y+7
000b47 30aa      	CPI  R26,LOW(0xA)
000b48 f151      	BREQ _0x2080028
                +
000b49 91e0 026b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000b4b 95e6      	LSR  R30
000b4c 95e6      	LSR  R30
000b4d 95e6      	LSR  R30
000b4e 2f3e      	MOV  R19,R30
                +
000b4f 91e0 026c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000b51 95e2      	SWAP R30
000b52 70ef      	ANDI R30,0xF
000b53 2f2e      	MOV  R18,R30
000b54 933a      	ST   -Y,R19
000b55 932a      	ST   -Y,R18
000b56 85a9      	LDD  R26,Y+9
000b57 de87      	RCALL _glcd_putcharcg
000b58 2fe3      	MOV  R30,R19
000b59 0fee      	LSL  R30
000b5a 0fee      	LSL  R30
000b5b 0fee      	LSL  R30
                +
000b5c 93e0 026b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000b5e e1a0      	LDI  R26,LOW(16)
000b5f 9f2a      	MUL  R18,R26
000b60 01f0      	MOVW R30,R0
                +
000b61 93e0 026c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000b63 940e 0f2c 	CALL SUBOPT_0x23
000b65 e0e8      	LDI  R30,LOW(8)
000b66 93ea      	ST   -Y,R30
000b67 e1e0      	LDI  R30,LOW(16)
000b68 940e 0f38 	CALL SUBOPT_0x25
000b6a 940e 0f33 	CALL SUBOPT_0x24
000b6c e0f0      	LDI  R31,0
000b6d 9638      	ADIW R30,8
000b6e 018f      	MOVW R16,R30
                +
000b6f 3800     +CPI R16 , LOW ( 128 )
000b70 e0e0     +LDI R30 , HIGH ( 128 )
000b71 071e     +CPC R17 , R30
                 	__CPWRN 16,17,128
000b72 f048      	BRLO _0x2080029
                 _0x2080028:
                +
000b73 e000     +LDI R16 , LOW ( 0 )
000b74 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000b75 91e0 026c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000b77 e0f0      	LDI  R31,0
000b78 9670      	ADIW R30,16
000b79 01df      	MOVW R26,R30
000b7a 940e 0f27 	CALL SUBOPT_0x22
                 _0x2080029:
                 _0x2080026:
                +
000b7c 9300 026b+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x21C0007:
000b7e 940e 1249 	CALL __LOADLOCR6
000b80 9628      	ADIW R28,8
000b81 9508      	RET
                 ; .FEND
                 _glcd_putcharxy:
                 ; .FSTART _glcd_putcharxy
000b82 93aa      	ST   -Y,R26
000b83 81ea      	LDD  R30,Y+2
000b84 93ea      	ST   -Y,R30
000b85 81aa      	LDD  R26,Y+2
000b86 d074      	RCALL _glcd_moveto
000b87 81a8      	LD   R26,Y
000b88 df64      	RCALL _glcd_putchar
000b89 940c 0df2 	JMP  _0x21C0001
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000b8b 940e 0f41 	CALL SUBOPT_0x26
                 _0x208002A:
000b8d 81a9      	LDD  R26,Y+1
000b8e 81ba      	LDD  R27,Y+1+1
000b8f 91ed      	LD   R30,X+
000b90 83a9      	STD  Y+1,R26
000b91 83ba      	STD  Y+1+1,R27
000b92 2f1e      	MOV  R17,R30
000b93 30e0      	CPI  R30,0
000b94 f019      	BREQ _0x208002C
000b95 2fa1      	MOV  R26,R17
000b96 df56      	RCALL _glcd_putchar
000b97 cff5      	RJMP _0x208002A
                 _0x208002C:
000b98 8118      	LDD  R17,Y+0
000b99 940c 0d7a 	JMP  _0x21C0003
                 ; .FEND
                 _glcd_outtextxyf:
                 ; .FSTART _glcd_outtextxyf
000b9b 940e 0f41 	CALL SUBOPT_0x26
                 _0x208002D:
000b9d 940e 0f49 	CALL SUBOPT_0x27
000b9f f019      	BREQ _0x208002F
000ba0 2fa1      	MOV  R26,R17
000ba1 df4b      	RCALL _glcd_putchar
000ba2 cffa      	RJMP _0x208002D
                 _0x208002F:
000ba3 8118      	LDD  R17,Y+0
000ba4 940c 0d7a 	JMP  _0x21C0003
                 ; .FEND
                 _glcd_outtextf:
                 ; .FSTART _glcd_outtextf
000ba6 93ba      	ST   -Y,R27
000ba7 93aa      	ST   -Y,R26
000ba8 931a      	ST   -Y,R17
                 _0x2080036:
000ba9 940e 0f49 	CALL SUBOPT_0x27
000bab f019      	BREQ _0x2080038
000bac 2fa1      	MOV  R26,R17
000bad df3f      	RCALL _glcd_putchar
000bae cffa      	RJMP _0x2080036
                 _0x2080038:
000baf 8118      	LDD  R17,Y+0
000bb0 940c 0df2 	JMP  _0x21C0001
                 ; .FEND
                 _glcd_putimagef:
                 ; .FSTART _glcd_putimagef
000bb2 93aa      	ST   -Y,R26
000bb3 940e 1244 	CALL __SAVELOCR4
000bb5 81ac      	LDD  R26,Y+4
000bb6 30a5      	CPI  R26,LOW(0x5)
000bb7 f500      	BRSH _0x208003D
000bb8 81ed      	LDD  R30,Y+5
000bb9 81fe      	LDD  R31,Y+5+1
000bba 9105      	LPM  R16,Z+
000bbb 940e 0f53 	CALL SUBOPT_0x28
000bbd 9115      	LPM  R17,Z+
000bbe 940e 0f53 	CALL SUBOPT_0x28
000bc0 9125      	LPM  R18,Z+
000bc1 940e 0f53 	CALL SUBOPT_0x28
000bc3 9135      	LPM  R19,Z+
000bc4 83ed      	STD  Y+5,R30
000bc5 83fe      	STD  Y+5+1,R31
000bc6 85e8      	LDD  R30,Y+8
000bc7 93ea      	ST   -Y,R30
000bc8 85e8      	LDD  R30,Y+8
000bc9 93ea      	ST   -Y,R30
000bca 930a      	ST   -Y,R16
000bcb 932a      	ST   -Y,R18
000bcc e0e1      	LDI  R30,LOW(1)
000bcd 93ea      	ST   -Y,R30
000bce 85ea      	LDD  R30,Y+10
000bcf 85fb      	LDD  R31,Y+10+1
000bd0 93fa      	ST   -Y,R31
000bd1 93ea      	ST   -Y,R30
000bd2 85ab      	LDD  R26,Y+11
000bd3 dc51      	RCALL _glcd_block
000bd4 930a      	ST   -Y,R16
000bd5 2fa2      	MOV  R26,R18
000bd6 de5f      	RCALL _glcd_imagesize
000bd7 c004      	RJMP _0x21C0006
                 _0x208003D:
                +
000bd8 e0e0     +LDI R30 , LOW ( 0x0 )
000bd9 e0f0     +LDI R31 , HIGH ( 0x0 )
000bda e060     +LDI R22 , BYTE3 ( 0x0 )
000bdb e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                 _0x21C0006:
000bdc 940e 124b 	CALL __LOADLOCR4
000bde 9629      	ADIW R28,9
000bdf 9508      	RET
                 ; .FEND
                 _glcd_putpixelm_G104:
                 ; .FSTART _glcd_putpixelm_G104
000be0 93aa      	ST   -Y,R26
000be1 81ea      	LDD  R30,Y+2
000be2 93ea      	ST   -Y,R30
000be3 81ea      	LDD  R30,Y+2
000be4 93ea      	ST   -Y,R30
                +
000be5 91e0 0272+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000be7 81aa      	LDD  R26,Y+2
000be8 23ea      	AND  R30,R26
000be9 f019      	BREQ _0x2080043
000bea 91e0 0269 	LDS  R30,_glcd_state
000bec c002      	RJMP _0x2080044
                 _0x2080043:
                +
000bed 91e0 026a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x2080044:
000bef 2fae      	MOV  R26,R30
000bf0 dbbb      	RCALL _glcd_putpixel
000bf1 81e8      	LD   R30,Y
000bf2 0fee      	LSL  R30
000bf3 83e8      	ST   Y,R30
000bf4 30e0      	CPI  R30,0
000bf5 f411      	BRNE _0x2080046
000bf6 e0e1      	LDI  R30,LOW(1)
000bf7 83e8      	ST   Y,R30
                 _0x2080046:
000bf8 81e8      	LD   R30,Y
000bf9 940c 0df2 	JMP  _0x21C0001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000bfb 93aa      	ST   -Y,R26
000bfc 81a9      	LDD  R26,Y+1
000bfd 27bb      	CLR  R27
000bfe de0d      	RCALL _glcd_clipx
                +
000bff 93e0 026b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000c01 81a8      	LD   R26,Y
000c02 27bb      	CLR  R27
000c03 940e 0f27 	CALL SUBOPT_0x22
000c05 940c 0dab 	JMP  _0x21C0002
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000c07 93aa      	ST   -Y,R26
000c08 972b      	SBIW R28,11
000c09 940e 1242 	CALL __SAVELOCR6
000c0b 89ac      	LDD  R26,Y+20
000c0c 27bb      	CLR  R27
000c0d ddfe      	RCALL _glcd_clipx
000c0e 8bec      	STD  Y+20,R30
000c0f 89aa      	LDD  R26,Y+18
000c10 27bb      	CLR  R27
000c11 ddfa      	RCALL _glcd_clipx
000c12 8bea      	STD  Y+18,R30
000c13 89ab      	LDD  R26,Y+19
000c14 27bb      	CLR  R27
000c15 de0b      	RCALL _glcd_clipy
000c16 8beb      	STD  Y+19,R30
000c17 89a9      	LDD  R26,Y+17
000c18 27bb      	CLR  R27
000c19 de07      	RCALL _glcd_clipy
000c1a 8be9      	STD  Y+17,R30
000c1b 89ea      	LDD  R30,Y+18
                +
000c1c 93e0 026b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000c1e 89e9      	LDD  R30,Y+17
                +
000c1f 93e0 026c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000c21 e0e1      	LDI  R30,LOW(1)
000c22 87e8      	STD  Y+8,R30
000c23 89e9      	LDD  R30,Y+17
000c24 89ab      	LDD  R26,Y+19
000c25 17ea      	CP   R30,R26
000c26 f571      	BRNE _0x2080047
000c27 891c      	LDD  R17,Y+20
000c28 89aa      	LDD  R26,Y+18
000c29 171a      	CP   R17,R26
000c2a f431      	BRNE _0x2080048
000c2b 931a      	ST   -Y,R17
000c2c 89ec      	LDD  R30,Y+20
000c2d 93ea      	ST   -Y,R30
000c2e e0a1      	LDI  R26,LOW(1)
000c2f dfb0      	RCALL _glcd_putpixelm_G104
000c30 c0c8      	RJMP _0x21C0005
                 _0x2080048:
000c31 89aa      	LDD  R26,Y+18
000c32 171a      	CP   R17,R26
000c33 f430      	BRSH _0x2080049
000c34 89ea      	LDD  R30,Y+18
000c35 1be1      	SUB  R30,R17
000c36 2f0e      	MOV  R16,R30
                +
000c37 e041     +LDI R20 , LOW ( 1 )
000c38 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000c39 c006      	RJMP _0x208004A
                 _0x2080049:
000c3a 89aa      	LDD  R26,Y+18
000c3b 2fe1      	MOV  R30,R17
000c3c 1bea      	SUB  R30,R26
000c3d 2f0e      	MOV  R16,R30
                +
000c3e ef4f     +LDI R20 , LOW ( - 1 )
000c3f ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x208004A:
                 _0x208004C:
000c40 893b      	LDD  R19,Y+19
000c41 e0e0      	LDI  R30,LOW(0)
000c42 83ee      	STD  Y+6,R30
                 _0x208004E:
000c43 940e 0f56 	CALL SUBOPT_0x29
000c45 f438      	BRSH _0x2080050
000c46 931a      	ST   -Y,R17
000c47 933a      	ST   -Y,R19
000c48 9533      	INC  R19
000c49 85aa      	LDD  R26,Y+10
000c4a df95      	RCALL _glcd_putpixelm_G104
000c4b 83ef      	STD  Y+7,R30
000c4c cff6      	RJMP _0x208004E
                 _0x2080050:
000c4d 81ef      	LDD  R30,Y+7
000c4e 87e8      	STD  Y+8,R30
000c4f 0f14      	ADD  R17,R20
000c50 2fe0      	MOV  R30,R16
000c51 5001      	SUBI R16,1
000c52 30e0      	CPI  R30,0
000c53 f761      	BRNE _0x208004C
000c54 c0a4      	RJMP _0x2080051
                 _0x2080047:
000c55 89ea      	LDD  R30,Y+18
000c56 89ac      	LDD  R26,Y+20
000c57 17ea      	CP   R30,R26
000c58 f539      	BRNE _0x2080052
000c59 893b      	LDD  R19,Y+19
000c5a 89a9      	LDD  R26,Y+17
000c5b 173a      	CP   R19,R26
000c5c f430      	BRSH _0x2080053
000c5d 89e9      	LDD  R30,Y+17
000c5e 1be3      	SUB  R30,R19
000c5f 2f2e      	MOV  R18,R30
000c60 e0e1      	LDI  R30,LOW(1)
000c61 e0f0      	LDI  R31,HIGH(1)
000c62 c006      	RJMP _0x2080120
                 _0x2080053:
000c63 89a9      	LDD  R26,Y+17
000c64 2fe3      	MOV  R30,R19
000c65 1bea      	SUB  R30,R26
000c66 2f2e      	MOV  R18,R30
000c67 efef      	LDI  R30,LOW(65535)
000c68 efff      	LDI  R31,HIGH(65535)
                 _0x2080120:
000c69 87ed      	STD  Y+13,R30
000c6a 87fe      	STD  Y+13+1,R31
                 _0x2080056:
000c6b 891c      	LDD  R17,Y+20
000c6c e0e0      	LDI  R30,LOW(0)
000c6d 83ee      	STD  Y+6,R30
                 _0x2080058:
000c6e 940e 0f56 	CALL SUBOPT_0x29
000c70 f430      	BRSH _0x208005A
000c71 931a      	ST   -Y,R17
000c72 9513      	INC  R17
000c73 940e 0f5e 	CALL SUBOPT_0x2A
000c75 83ef      	STD  Y+7,R30
000c76 cff7      	RJMP _0x2080058
                 _0x208005A:
000c77 81ef      	LDD  R30,Y+7
000c78 87e8      	STD  Y+8,R30
000c79 85ed      	LDD  R30,Y+13
000c7a 0f3e      	ADD  R19,R30
000c7b 2fe2      	MOV  R30,R18
000c7c 5021      	SUBI R18,1
000c7d 30e0      	CPI  R30,0
000c7e f761      	BRNE _0x2080056
000c7f c079      	RJMP _0x208005B
                 _0x2080052:
000c80 e0e0      	LDI  R30,LOW(0)
000c81 83ee      	STD  Y+6,R30
                 _0x208005C:
000c82 940e 0f56 	CALL SUBOPT_0x29
000c84 f008      	BRLO PC+2
000c85 c073      	RJMP _0x208005E
000c86 891c      	LDD  R17,Y+20
000c87 893b      	LDD  R19,Y+19
000c88 e0e1      	LDI  R30,LOW(1)
000c89 2f2e      	MOV  R18,R30
000c8a 2f0e      	MOV  R16,R30
000c8b 89aa      	LDD  R26,Y+18
000c8c 27bb      	CLR  R27
000c8d 89ec      	LDD  R30,Y+20
000c8e e0f0      	LDI  R31,0
000c8f 1bae      	SUB  R26,R30
000c90 0bbf      	SBC  R27,R31
000c91 01ad      	MOVW R20,R26
000c92 2355      	TST  R21
000c93 f42a      	BRPL _0x208005F
000c94 ef0f      	LDI  R16,LOW(255)
000c95 01fa      	MOVW R30,R20
000c96 940e 1188 	CALL __ANEGW1
000c98 01af      	MOVW R20,R30
                 _0x208005F:
000c99 01fa      	MOVW R30,R20
000c9a 0fee      	LSL  R30
000c9b 1fff      	ROL  R31
000c9c 87ef      	STD  Y+15,R30
000c9d 8bf8      	STD  Y+15+1,R31
000c9e 89a9      	LDD  R26,Y+17
000c9f 27bb      	CLR  R27
000ca0 89eb      	LDD  R30,Y+19
000ca1 e0f0      	LDI  R31,0
000ca2 1bae      	SUB  R26,R30
000ca3 0bbf      	SBC  R27,R31
000ca4 87ad      	STD  Y+13,R26
000ca5 87be      	STD  Y+13+1,R27
000ca6 85ae      	LDD  R26,Y+14
000ca7 23aa      	TST  R26
000ca8 f43a      	BRPL _0x2080060
000ca9 ef2f      	LDI  R18,LOW(255)
000caa 85ed      	LDD  R30,Y+13
000cab 85fe      	LDD  R31,Y+13+1
000cac 940e 1188 	CALL __ANEGW1
000cae 87ed      	STD  Y+13,R30
000caf 87fe      	STD  Y+13+1,R31
                 _0x2080060:
000cb0 85ed      	LDD  R30,Y+13
000cb1 85fe      	LDD  R31,Y+13+1
000cb2 0fee      	LSL  R30
000cb3 1fff      	ROL  R31
000cb4 87eb      	STD  Y+11,R30
000cb5 87fc      	STD  Y+11+1,R31
000cb6 931a      	ST   -Y,R17
000cb7 933a      	ST   -Y,R19
000cb8 e0a1      	LDI  R26,LOW(1)
000cb9 df26      	RCALL _glcd_putpixelm_G104
000cba 87e8      	STD  Y+8,R30
000cbb e0e0      	LDI  R30,LOW(0)
000cbc 87e9      	STD  Y+9,R30
000cbd 87ea      	STD  Y+9+1,R30
000cbe 85ad      	LDD  R26,Y+13
000cbf 85be      	LDD  R27,Y+13+1
000cc0 174a      	CP   R20,R26
000cc1 075b      	CPC  R21,R27
000cc2 f0bc      	BRLT _0x2080061
                 _0x2080063:
000cc3 0f10      	ADD  R17,R16
000cc4 85eb      	LDD  R30,Y+11
000cc5 85fc      	LDD  R31,Y+11+1
000cc6 940e 0f62 	CALL SUBOPT_0x2B
000cc8 85a9      	LDD  R26,Y+9
000cc9 85ba      	LDD  R27,Y+9+1
000cca 174a      	CP   R20,R26
000ccb 075b      	CPC  R21,R27
000ccc f42c      	BRGE _0x2080065
000ccd 0f32      	ADD  R19,R18
000cce 85af      	LDD  R26,Y+15
000ccf 89b8      	LDD  R27,Y+15+1
000cd0 940e 0f69 	CALL SUBOPT_0x2C
                 _0x2080065:
000cd2 931a      	ST   -Y,R17
000cd3 940e 0f5e 	CALL SUBOPT_0x2A
000cd5 87e8      	STD  Y+8,R30
000cd6 89ea      	LDD  R30,Y+18
000cd7 17e1      	CP   R30,R17
000cd8 f751      	BRNE _0x2080063
000cd9 c018      	RJMP _0x2080066
                 _0x2080061:
                 _0x2080068:
000cda 0f32      	ADD  R19,R18
000cdb 85ef      	LDD  R30,Y+15
000cdc 89f8      	LDD  R31,Y+15+1
000cdd 940e 0f62 	CALL SUBOPT_0x2B
000cdf 85ed      	LDD  R30,Y+13
000ce0 85fe      	LDD  R31,Y+13+1
000ce1 85a9      	LDD  R26,Y+9
000ce2 85ba      	LDD  R27,Y+9+1
000ce3 17ea      	CP   R30,R26
000ce4 07fb      	CPC  R31,R27
000ce5 f42c      	BRGE _0x208006A
000ce6 0f10      	ADD  R17,R16
000ce7 85ab      	LDD  R26,Y+11
000ce8 85bc      	LDD  R27,Y+11+1
000ce9 940e 0f69 	CALL SUBOPT_0x2C
                 _0x208006A:
000ceb 931a      	ST   -Y,R17
000cec 940e 0f5e 	CALL SUBOPT_0x2A
000cee 87e8      	STD  Y+8,R30
000cef 89e9      	LDD  R30,Y+17
000cf0 17e3      	CP   R30,R19
000cf1 f741      	BRNE _0x2080068
                 _0x2080066:
000cf2 89eb      	LDD  R30,Y+19
000cf3 5fef      	SUBI R30,-LOW(1)
000cf4 8beb      	STD  Y+19,R30
000cf5 89e9      	LDD  R30,Y+17
000cf6 5fef      	SUBI R30,-LOW(1)
000cf7 8be9      	STD  Y+17,R30
000cf8 cf89      	RJMP _0x208005C
                 _0x208005E:
                 _0x208005B:
                 _0x2080051:
                 _0x21C0005:
000cf9 940e 1249 	CALL __LOADLOCR6
000cfb 9665      	ADIW R28,21
000cfc 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _DHT_GetTemHumi:
                 ; .FSTART _DHT_GetTemHumi
000cfd 93aa      	ST   -Y,R26
000cfe 9725      	SBIW R28,5
000cff e0e0      	LDI  R30,LOW(0)
000d00 83e8      	ST   Y,R30
000d01 83e9      	STD  Y+1,R30
000d02 83ea      	STD  Y+2,R30
000d03 83eb      	STD  Y+3,R30
000d04 83ec      	STD  Y+4,R30
000d05 940e 1244 	CALL __SAVELOCR4
000d07 9ad1      	SBI  0x1A,1
000d08 9ad9      	SBI  0x1B,1
000d09 940e 0f70 	CALL SUBOPT_0x2D
000d0b 98d9      	CBI  0x1B,1
000d0c e1a9      	LDI  R26,LOW(25)
000d0d e0b0      	LDI  R27,0
000d0e 940e 0fc6 	CALL _delay_ms
000d10 9ad9      	SBI  0x1B,1
000d11 98d1      	CBI  0x1A,1
000d12 940e 0f70 	CALL SUBOPT_0x2D
000d14 9bc9      	SBIS 0x19,1
000d15 c002      	RJMP _0x20E000D
000d16 e0e0      	LDI  R30,LOW(0)
000d17 c050      	RJMP _0x21C0004
                 _0x20E000D:
                 _0x20E000F:
000d18 9bc9      	SBIS 0x19,1
000d19 cffe      	RJMP _0x20E000F
000d1a 940e 0f70 	CALL SUBOPT_0x2D
000d1c 99c9      	SBIC 0x19,1
000d1d c002      	RJMP _0x20E0012
000d1e e0e0      	LDI  R30,LOW(0)
000d1f c048      	RJMP _0x21C0004
                 _0x20E0012:
                 _0x20E0014:
000d20 99c9      	SBIC 0x19,1
000d21 cffe      	RJMP _0x20E0014
000d22 e010      	LDI  R17,LOW(0)
                 _0x20E0018:
000d23 3015      	CPI  R17,5
000d24 f508      	BRSH _0x20E0019
000d25 e000      	LDI  R16,LOW(0)
                 _0x20E001B:
000d26 3008      	CPI  R16,8
000d27 f4e0      	BRSH _0x20E001C
                 _0x20E001D:
000d28 9bc9      	SBIS 0x19,1
000d29 cffe      	RJMP _0x20E001D
                +
000d2a ec88     +LDI R24 , LOW ( 200 )
000d2b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000d2c 9701     +SBIW R24 , 1
000d2d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000d2e 9bc9      	SBIS 0x19,1
000d2f c012      	RJMP _0x20E0020
000d30 2fe1      	MOV  R30,R17
000d31 e0f0      	LDI  R31,0
000d32 01de      	MOVW R26,R28
000d33 9614      	ADIW R26,4
000d34 0fea      	ADD  R30,R26
000d35 1ffb      	ADC  R31,R27
000d36 01bf      	MOVW R22,R30
000d37 8010      	LD   R1,Z
000d38 e0e7      	LDI  R30,LOW(7)
000d39 1be0      	SUB  R30,R16
000d3a e0a1      	LDI  R26,LOW(1)
000d3b 940e 1194 	CALL __LSLB12
000d3d 29e1      	OR   R30,R1
000d3e 01db      	MOVW R26,R22
000d3f 93ec      	ST   X,R30
                 _0x20E0021:
000d40 99c9      	SBIC 0x19,1
000d41 cffe      	RJMP _0x20E0021
                 _0x20E0020:
000d42 5f0f      	SUBI R16,-1
000d43 cfe2      	RJMP _0x20E001B
                 _0x20E001C:
000d44 5f1f      	SUBI R17,-1
000d45 cfdd      	RJMP _0x20E0018
                 _0x20E0019:
000d46 81ed      	LDD  R30,Y+5
000d47 81ac      	LDD  R26,Y+4
000d48 0fea      	ADD  R30,R26
000d49 81ae      	LDD  R26,Y+6
000d4a 0fea      	ADD  R30,R26
000d4b 81af      	LDD  R26,Y+7
000d4c 0fea      	ADD  R30,R26
000d4d 2f3e      	MOV  R19,R30
000d4e 85e8      	LDD  R30,Y+8
000d4f 17e3      	CP   R30,R19
000d50 f011      	BREQ _0x20E0024
000d51 e0e0      	LDI  R30,LOW(0)
000d52 c015      	RJMP _0x21C0004
                 _0x20E0024:
000d53 85a9      	LDD  R26,Y+9
000d54 30a2      	CPI  R26,LOW(0x2)
000d55 f411      	BRNE _0x20E0025
000d56 81ee      	LDD  R30,Y+6
000d57 c010      	RJMP _0x21C0004
                 _0x20E0025:
000d58 85a9      	LDD  R26,Y+9
000d59 30a3      	CPI  R26,LOW(0x3)
000d5a f411      	BRNE _0x20E0027
000d5b 81ef      	LDD  R30,Y+7
000d5c c00b      	RJMP _0x21C0004
                 _0x20E0027:
000d5d 85e9      	LDD  R30,Y+9
000d5e 30e0      	CPI  R30,0
000d5f f411      	BRNE _0x20E0029
000d60 81ec      	LDD  R30,Y+4
000d61 c006      	RJMP _0x21C0004
                 _0x20E0029:
000d62 85a9      	LDD  R26,Y+9
000d63 30a1      	CPI  R26,LOW(0x1)
000d64 f411      	BRNE _0x20E002B
000d65 81ed      	LDD  R30,Y+5
000d66 c001      	RJMP _0x21C0004
                 _0x20E002B:
000d67 e0e1      	LDI  R30,LOW(1)
                 _0x21C0004:
000d68 940e 124b 	CALL __LOADLOCR4
000d6a 962a      	ADIW R28,10
000d6b 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000d6c 93ba      	ST   -Y,R27
000d6d 93aa      	ST   -Y,R26
000d6e 81b9          ldd  r27,y+1
000d6f 81a8          ld   r26,y
000d70 9610          adiw r26,0
000d71 f031          breq memset1
000d72 81fc          ldd  r31,y+4
000d73 81eb          ldd  r30,y+3
000d74 816a          ldd  r22,y+2
                 memset0:
000d75 9361          st   z+,r22
000d76 9711          sbiw r26,1
000d77 f7e9          brne memset0
                 memset1:
000d78 81eb          ldd  r30,y+3
000d79 81fc          ldd  r31,y+4
                 _0x21C0003:
000d7a 9625      	ADIW R28,5
000d7b 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000d7c 93ba      	ST   -Y,R27
000d7d 93aa      	ST   -Y,R26
000d7e 91a9          ld   r26,y+
000d7f 91b9          ld   r27,y+
000d80 27ee          clr  r30
000d81 27ff          clr  r31
                 strlen0:
000d82 916d          ld   r22,x+
000d83 2366          tst  r22
000d84 f011          breq strlen1
000d85 9631          adiw r30,1
000d86 cffb          rjmp strlen0
                 strlen1:
000d87 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000d88 93ba      	ST   -Y,R27
000d89 93aa      	ST   -Y,R26
000d8a 27aa          clr  r26
000d8b 27bb          clr  r27
000d8c 91e9          ld   r30,y+
000d8d 91f9          ld   r31,y+
                 strlenf0:
000d8e 9005      	lpm  r0,z+
000d8f 2000          tst  r0
000d90 f011          breq strlenf1
000d91 9611          adiw r26,1
000d92 cffb          rjmp strlenf0
                 strlenf1:
000d93 01fd          movw r30,r26
000d94 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
000d95 93aa      	ST   -Y,R26
000d96 81e8          ld   r30,y
000d97 95e2          swap r30
000d98 70ef          andi r30,0xf
000d99 2fae          mov  r26,r30
000d9a 0faa          lsl  r26
000d9b 0faa          lsl  r26
000d9c 0fea          add  r30,r26
000d9d 0fee          lsl  r30
000d9e 91a9          ld   r26,y+
000d9f 70af          andi r26,0xf
000da0 0fea          add  r30,r26
000da1 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000da2 93aa      	ST   -Y,R26
000da3 81e8      	LD   R30,Y
000da4 e0f0      	LDI  R31,0
000da5 5ae2      	SUBI R30,LOW(-__glcd_mask*2)
000da6 4ffc      	SBCI R31,HIGH(-__glcd_mask*2)
000da7 91a4      	LPM  R26,Z
000da8 81e9      	LDD  R30,Y+1
000da9 940e 1194 	CALL __LSLB12
                 _0x21C0002:
000dab 9622      	ADIW R28,2
000dac 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000dad 93aa      	ST   -Y,R26
000dae 931a      	ST   -Y,R17
000daf 81e9      	LDD  R30,Y+1
000db0 30e7      	CPI  R30,LOW(0x7)
000db1 f011      	BREQ _0x2180007
000db2 30ea      	CPI  R30,LOW(0xA)
000db3 f419      	BRNE _0x2180008
                 _0x2180007:
000db4 9110 0269 	LDS  R17,_glcd_state
000db6 c009      	RJMP _0x2180009
                 _0x2180008:
000db7 30e9      	CPI  R30,LOW(0x9)
000db8 f419      	BRNE _0x218000B
                +
000db9 9110 026a+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000dbb c004      	RJMP _0x2180009
                 _0x218000B:
000dbc 30e8      	CPI  R30,LOW(0x8)
000dbd f4a1      	BRNE _0x2180005
                +
000dbe 9110 0279+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2180009:
                +
000dc0 91e0 026a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000dc2 30e0      	CPI  R30,0
000dc3 f049      	BREQ _0x218000E
000dc4 3010      	CPI  R17,0
000dc5 f019      	BREQ _0x218000F
000dc6 efef      	LDI  R30,LOW(255)
000dc7 8118      	LDD  R17,Y+0
000dc8 c029      	RJMP _0x21C0001
                 _0x218000F:
000dc9 81ea      	LDD  R30,Y+2
000dca 95e0      	COM  R30
000dcb 8118      	LDD  R17,Y+0
000dcc c025      	RJMP _0x21C0001
                 _0x218000E:
000dcd 3010      	CPI  R17,0
000dce f419      	BRNE _0x2180011
000dcf e0e0      	LDI  R30,LOW(0)
000dd0 8118      	LDD  R17,Y+0
000dd1 c020      	RJMP _0x21C0001
                 _0x2180011:
                 _0x2180005:
000dd2 81ea      	LDD  R30,Y+2
000dd3 8118      	LDD  R17,Y+0
000dd4 c01d      	RJMP _0x21C0001
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000dd5 93ba      	ST   -Y,R27
000dd6 93aa      	ST   -Y,R26
000dd7 81ea      	LDD  R30,Y+2
000dd8 30e1      	CPI  R30,LOW(0x1)
000dd9 f421      	BRNE _0x2180015
000dda 81e8      	LD   R30,Y
000ddb 81f9      	LDD  R31,Y+1
000ddc 91e4      	LPM  R30,Z
000ddd c014      	RJMP _0x21C0001
                 _0x2180015:
000dde 30e2      	CPI  R30,LOW(0x2)
000ddf f429      	BRNE _0x2180016
000de0 81a8      	LD   R26,Y
000de1 81b9      	LDD  R27,Y+1
000de2 940e 1221 	CALL __EEPROMRDB
000de4 c00d      	RJMP _0x21C0001
                 _0x2180016:
000de5 30e3      	CPI  R30,LOW(0x3)
000de6 f441      	BRNE _0x2180018
000de7 81a8      	LD   R26,Y
000de8 81b9      	LDD  R27,Y+1
                +
000de9 91e0 0282+LDS R30 , _glcd_state + ( 25 )
000deb 91f0 0283+LDS R31 , _glcd_state + ( 25 ) + 1
000ded 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000dee c003      	RJMP _0x21C0001
                 _0x2180018:
000def 81a8      	LD   R26,Y
000df0 81b9      	LDD  R27,Y+1
000df1 91ec      	LD   R30,X
                 _0x21C0001:
000df2 9623      	ADIW R28,3
000df3 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000df4 93aa      	ST   -Y,R26
000df5 81eb      	LDD  R30,Y+3
000df6 30e0      	CPI  R30,0
000df7 f429      	BRNE _0x218001C
000df8 81e8      	LD   R30,Y
000df9 81a9      	LDD  R26,Y+1
000dfa 81ba      	LDD  R27,Y+1+1
000dfb 93ec      	ST   X,R30
000dfc c014      	RJMP _0x218001B
                 _0x218001C:
000dfd 30e2      	CPI  R30,LOW(0x2)
000dfe f431      	BRNE _0x218001D
000dff 81e8      	LD   R30,Y
000e00 81a9      	LDD  R26,Y+1
000e01 81ba      	LDD  R27,Y+1+1
000e02 940e 122d 	CALL __EEPROMWRB
000e04 c00c      	RJMP _0x218001B
                 _0x218001D:
000e05 30e3      	CPI  R30,LOW(0x3)
000e06 f451      	BRNE _0x218001B
000e07 81e9      	LDD  R30,Y+1
000e08 81fa      	LDD  R31,Y+1+1
000e09 93fa      	ST   -Y,R31
000e0a 93ea      	ST   -Y,R30
000e0b 81aa      	LDD  R26,Y+2
                +
000e0c 91e0 0284+LDS R30 , _glcd_state + ( 27 )
000e0e 91f0 0285+LDS R31 , _glcd_state + ( 27 ) + 1
000e10 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x218001B:
000e11 9624      	ADIW R28,4
000e12 9508      	RET
                 ; .FEND
                 _glcd_revbits:
                 ; .FSTART _glcd_revbits
000e13 93aa      	ST   -Y,R26
000e14 91a9          ld  r26,y+
000e15 fba0          bst r26,0
000e16 f9e7          bld r30,7
                 
000e17 fba1          bst r26,1
000e18 f9e6          bld r30,6
                 
000e19 fba2          bst r26,2
000e1a f9e5          bld r30,5
                 
000e1b fba3          bst r26,3
000e1c f9e4          bld r30,4
                 
000e1d fba4          bst r26,4
000e1e f9e3          bld r30,3
                 
000e1f fba5          bst r26,5
000e20 f9e2          bld r30,2
                 
000e21 fba6          bst r26,6
000e22 f9e1          bld r30,1
                 
000e23 fba7          bst r26,7
000e24 f9e0          bld r30,0
000e25 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
000260           	.BYTE 0x9
                 _glcd_state:
000269           	.BYTE 0x1D
                 
                 	.ESEG
                 _mTempSet:
000000           	.BYTE 0x1
                 _hourSet:
000001           	.BYTE 0x1
                 _minSet:
000002           	.BYTE 0x1
                 _tempSet:
000003           	.BYTE 0x1
                 
                 	.DSEG
                 _temperature:
000286           	.BYTE 0x4
                 _humidity:
00028a           	.BYTE 0x4
                 _st7920_graphics_on_G103:
00028e           	.BYTE 0x1
                 _st7920_bits8_15_G103:
00028f           	.BYTE 0x1
                 _xt_G103:
000290           	.BYTE 0x1
                 _yt_G103:
000291           	.BYTE 0x1
                 __seed_G10D:
000292           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
000e26 e0e0      	LDI  R30,LOW(0)
000e27 bdef      	OUT  0x2F,R30
000e28 bdee      	OUT  0x2E,R30
000e29 bded      	OUT  0x2D,R30
000e2a bdec      	OUT  0x2C,R30
000e2b bde7      	OUT  0x27,R30
000e2c bde6      	OUT  0x26,R30
000e2d bdeb      	OUT  0x2B,R30
000e2e bdea      	OUT  0x2A,R30
000e2f bde9      	OUT  0x29,R30
000e30 bde8      	OUT  0x28,R30
000e31 bfe9      	OUT  0x39,R30
000e32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000e33 e0a3      	LDI  R26,LOW(_tempSet)
000e34 e0b0      	LDI  R27,HIGH(_tempSet)
000e35 940e 1221 	CALL __EEPROMRDB
000e37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2:
000e38 940e 0cfd 	CALL _DHT_GetTemHumi
000e3a 27ff      	CLR  R31
000e3b 2766      	CLR  R22
000e3c 2777      	CLR  R23
000e3d 940e 104e 	CALL __CDF1
000e3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000e40 e0e0     +LDI R30 , LOW ( 0x43800000 )
000e41 e0f0     +LDI R31 , HIGH ( 0x43800000 )
000e42 e860     +LDI R22 , BYTE3 ( 0x43800000 )
000e43 e473     +LDI R23 , BYTE4 ( 0x43800000 )
                 	__GETD1N 0x43800000
000e44 940e 10d1 	CALL __MULF12
000e46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000e47 940e 1081 	CALL __ADDF12
000e49 01df      	MOVW R26,R30
000e4a 01cb      	MOVW R24,R22
                +
000e4b e0e0     +LDI R30 , LOW ( 0x41200000 )
000e4c e0f0     +LDI R31 , HIGH ( 0x41200000 )
000e4d e260     +LDI R22 , BYTE3 ( 0x41200000 )
000e4e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000e4f 940e 111f 	CALL __DIVF21
000e51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
000e52 91e0 0286 	LDS  R30,_temperature
000e54 91f0 0287 	LDS  R31,_temperature+1
000e56 9160 0288 	LDS  R22,_temperature+2
000e58 9170 0289 	LDS  R23,_temperature+3
000e5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000e5b 940e 1218 	CALL __PUTPARD1
000e5d e084      	LDI  R24,4
000e5e 940e 05cf 	CALL _sprintf
000e60 9628      	ADIW R28,8
000e61 8deb      	LDD  R30,Y+27
000e62 93ea      	ST   -Y,R30
000e63 8deb      	LDD  R30,Y+27
000e64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000e65 93ea      	ST   -Y,R30
000e66 01de      	MOVW R26,R28
000e67 9652      	ADIW R26,18
000e68 940e 0b8b 	CALL _glcd_outtextxy
000e6a 8deb      	LDD  R30,Y+27
000e6b 5ee7      	SUBI R30,-LOW(25)
000e6c 93ea      	ST   -Y,R30
000e6d 8deb      	LDD  R30,Y+27
000e6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000e6f e0a1      	LDI  R26,LOW(_hourSet)
000e70 e0b0      	LDI  R27,HIGH(_hourSet)
000e71 940e 1221 	CALL __EEPROMRDB
000e73 e0f0      	LDI  R31,0
000e74 01df      	MOVW R26,R30
000e75 e0ea      	LDI  R30,LOW(10)
000e76 e0f0      	LDI  R31,HIGH(10)
000e77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000e78 940e 11e5 	CALL __DIVW21
000e7a 5de0      	SUBI R30,-LOW(48)
000e7b 2fae      	MOV  R26,R30
000e7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000e7d 940e 11ea 	CALL __MODW21
000e7f 5de0      	SUBI R30,-LOW(48)
000e80 2fae      	MOV  R26,R30
000e81 940c 0aed 	JMP  _glcd_putchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000e83 e0a2      	LDI  R26,LOW(_minSet)
000e84 e0b0      	LDI  R27,HIGH(_minSet)
000e85 940e 1221 	CALL __EEPROMRDB
000e87 e0f0      	LDI  R31,0
000e88 01df      	MOVW R26,R30
000e89 e0ea      	LDI  R30,LOW(10)
000e8a e0f0      	LDI  R31,HIGH(10)
000e8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC:
000e8c dfc5      	RCALL SUBOPT_0x5
000e8d 940e 1017 	CALL __CFD1
000e8f 010f      	MOVW R0,R30
000e90 cfa2      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD:
000e91 932a      	ST   -Y,R18
000e92 85ad      	LDD  R26,Y+13
000e93 85be      	LDD  R27,Y+13+1
000e94 85ef      	LDD  R30,Y+15
000e95 89f8      	LDD  R31,Y+15+1
000e96 9509      	ICALL
000e97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xE:
000e98 89e8      	LDD  R30,Y+16
000e99 89f9      	LDD  R31,Y+16+1
000e9a 9734      	SBIW R30,4
000e9b 8be8      	STD  Y+16,R30
000e9c 8bf9      	STD  Y+16+1,R31
000e9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000e9e 85ad      	LDD  R26,Y+13
000e9f 85be      	LDD  R27,Y+13+1
000ea0 85ef      	LDD  R30,Y+15
000ea1 89f8      	LDD  R31,Y+15+1
000ea2 9509      	ICALL
000ea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x10:
000ea4 89a8      	LDD  R26,Y+16
000ea5 89b9      	LDD  R27,Y+16+1
000ea6 9614      	ADIW R26,4
000ea7 940e 1206 	CALL __GETW1P
000ea9 83ee      	STD  Y+6,R30
000eaa 83ff      	STD  Y+6+1,R31
000eab 81ae      	LDD  R26,Y+6
000eac 81bf      	LDD  R27,Y+6+1
000ead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
000eae 89a8      	LDD  R26,Y+16
000eaf 89b9      	LDD  R27,Y+16+1
000eb0 9614      	ADIW R26,4
000eb1 940e 1206 	CALL __GETW1P
000eb3 87ea      	STD  Y+10,R30
000eb4 87fb      	STD  Y+10+1,R31
000eb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000eb6 01de      	MOVW R26,R28
000eb7 961c      	ADIW R26,12
000eb8 940e 1184 	CALL __ADDW2R15
000eba 940e 1206 	CALL __GETW1P
000ebc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000ebd e0a1      	LDI  R26,LOW(1)
000ebe 940e 0f93 	CALL _i2c_read
000ec0 2fae      	MOV  R26,R30
000ec1 940c 0d95 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
000ec3 9aa9      	SBI  0x15,1
000ec4 98a4      	CBI  0x14,4
000ec5 98a5      	CBI  0x14,5
000ec6 98a6      	CBI  0x14,6
000ec7 98a7      	CBI  0x14,7
000ec8 98d7      	CBI  0x1A,7
000ec9 98d6      	CBI  0x1A,6
000eca 98d5      	CBI  0x1A,5
000ecb 98d4      	CBI  0x1A,4
000ecc 9aaa      	SBI  0x15,2
000ecd 940c 0649 	JMP  _st7920_delay_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000ecf 91e0 028e 	LDS  R30,_st7920_graphics_on_G103
000ed1 63e0      	ORI  R30,LOW(0x30)
000ed2 2fae      	MOV  R26,R30
000ed3 940c 06b7 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x16:
000ed5 91e0 028e 	LDS  R30,_st7920_graphics_on_G103
000ed7 63e4      	ORI  R30,LOW(0x34)
000ed8 2fae      	MOV  R26,R30
000ed9 940c 06b7 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
000edb e3a0      	LDI  R26,LOW(48)
000edc 940e 064d 	CALL _st7920_wrbus_G103
                +
000ede e280     +LDI R24 , LOW ( 800 )
000edf e093     +LDI R25 , HIGH ( 800 )
                +__DELAY_USW_LOOP :
000ee0 9701     +SBIW R24 , 1
000ee1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 800
000ee2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x18:
000ee3 940e 078c 	CALL _st7920_rdbyte_G103
000ee5 2fae      	MOV  R26,R30
000ee6 940c 0e13 	JMP  _glcd_revbits
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000ee8 0fea      	ADD  R30,R26
000ee9 1ffb      	ADC  R31,R27
000eea 83ee      	STD  Y+6,R30
000eeb 83ff      	STD  Y+6+1,R31
000eec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1A:
000eed 89e8      	LDD  R30,Y+16
000eee 93ea      	ST   -Y,R30
000eef 81ef      	LDD  R30,Y+7
000ef0 85f8      	LDD  R31,Y+7+1
000ef1 9631      	ADIW R30,1
000ef2 83ef      	STD  Y+7,R30
000ef3 87f8      	STD  Y+7+1,R31
000ef4 9731      	SBIW R30,1
000ef5 93fa      	ST   -Y,R31
000ef6 93ea      	ST   -Y,R30
000ef7 e0a0      	LDI  R26,LOW(0)
000ef8 940c 0df4 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
000efa 89e8      	LDD  R30,Y+16
000efb 93ea      	ST   -Y,R30
000efc 81af      	LDD  R26,Y+7
000efd 85b8      	LDD  R27,Y+7+1
000efe 2788      	CLR  R24
000eff 2799      	CLR  R25
000f00 940c 0dd5 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
000f02 89e8      	LDD  R30,Y+16
000f03 93ea      	ST   -Y,R30
000f04 81ef      	LDD  R30,Y+7
000f05 85f8      	LDD  R31,Y+7+1
000f06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
000f07 93ea      	ST   -Y,R30
000f08 85ee      	LDD  R30,Y+14
000f09 93ea      	ST   -Y,R30
000f0a 89a9      	LDD  R26,Y+17
000f0b 940c 07dc 	JMP  _st7920_wrmasked_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000f0d 93ba      	ST   -Y,R27
000f0e 93aa      	ST   -Y,R26
000f0f 81a8      	LD   R26,Y
000f10 81b9      	LDD  R27,Y+1
000f11 940e 123e 	CALL __CPW02
000f13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000f14 940e 1242 	CALL __SAVELOCR6
                +
000f16 91e0 026d+LDS R30 , _glcd_state + ( 4 )
000f18 91f0 026e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000f1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000f1b 01f8      	MOVW R30,R16
                +
000f1c 5f0f     +SUBI R16 , LOW ( - 1 )
000f1d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000f1e 9004      	LPM  R0,Z
000f1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21:
                +
000f20 91e0 026d+LDS R30 , _glcd_state + ( 4 )
000f22 91f0 026e+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000f24 9631      	ADIW R30,1
000f25 91e4      	LPM  R30,Z
000f26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000f27 940e 0a21 	CALL _glcd_clipy
                +
000f29 93e0 026c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000f2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
000f2c 91e0 026b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000f2e 93ea      	ST   -Y,R30
                +
000f2f 91e0 026c+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000f31 93ea      	ST   -Y,R30
000f32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24:
000f33 940e 0825 	CALL _glcd_block
                +
000f35 91e0 026b+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000f37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
000f38 93ea      	ST   -Y,R30
000f39 e0e0      	LDI  R30,LOW(0)
000f3a 93ea      	ST   -Y,R30
000f3b e0e0      	LDI  R30,LOW(0)
000f3c e0f0      	LDI  R31,HIGH(0)
000f3d 93fa      	ST   -Y,R31
000f3e 93ea      	ST   -Y,R30
000f3f e0a9      	LDI  R26,LOW(9)
000f40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
000f41 93ba      	ST   -Y,R27
000f42 93aa      	ST   -Y,R26
000f43 931a      	ST   -Y,R17
000f44 81ec      	LDD  R30,Y+4
000f45 93ea      	ST   -Y,R30
000f46 81ac      	LDD  R26,Y+4
000f47 940c 0bfb 	JMP  _glcd_moveto
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x27:
000f49 81e9      	LDD  R30,Y+1
000f4a 81fa      	LDD  R31,Y+1+1
000f4b 9631      	ADIW R30,1
000f4c 83e9      	STD  Y+1,R30
000f4d 83fa      	STD  Y+1+1,R31
000f4e 9731      	SBIW R30,1
000f4f 91e4      	LPM  R30,Z
000f50 2f1e      	MOV  R17,R30
000f51 30e0      	CPI  R30,0
000f52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000f53 83ed      	STD  Y+5,R30
000f54 83fe      	STD  Y+5+1,R31
000f55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29:
000f56 81ae      	LDD  R26,Y+6
000f57 5faf      	SUBI R26,-LOW(1)
000f58 83ae      	STD  Y+6,R26
000f59 50a1      	SUBI R26,LOW(1)
                +
000f5a 91e0 0271+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000f5c 17ae      	CP   R26,R30
000f5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000f5e 933a      	ST   -Y,R19
000f5f 85aa      	LDD  R26,Y+10
000f60 940c 0be0 	JMP  _glcd_putpixelm_G104
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000f62 85a9      	LDD  R26,Y+9
000f63 85ba      	LDD  R27,Y+9+1
000f64 0fea      	ADD  R30,R26
000f65 1ffb      	ADC  R31,R27
000f66 87e9      	STD  Y+9,R30
000f67 87fa      	STD  Y+9+1,R31
000f68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000f69 85e9      	LDD  R30,Y+9
000f6a 85fa      	LDD  R31,Y+9+1
000f6b 1bea      	SUB  R30,R26
000f6c 0bfb      	SBC  R31,R27
000f6d 87e9      	STD  Y+9,R30
000f6e 87fa      	STD  Y+9+1,R31
000f6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
                +
000f70 ef80     +LDI R24 , LOW ( 240 )
000f71 e090     +LDI R25 , HIGH ( 240 )
                +__DELAY_USW_LOOP :
000f72 9701     +SBIW R24 , 1
000f73 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 240
000f74 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=6
                 	.equ __scl_bit=7
                 	.equ __i2c_port=0x12 ;PORTD
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
000f75 9897      	cbi  __i2c_port,__scl_bit
000f76 9896      	cbi  __i2c_port,__sda_bit
000f77 9a8f      	sbi  __i2c_dir,__scl_bit
000f78 988e      	cbi  __i2c_dir,__sda_bit
000f79 c015      	rjmp __i2c_delay2
                 _i2c_start:
000f7a 988e      	cbi  __i2c_dir,__sda_bit
000f7b 988f      	cbi  __i2c_dir,__scl_bit
000f7c 27ee      	clr  r30
000f7d 0000      	nop
000f7e 9b86      	sbis __i2c_pin,__sda_bit
000f7f 9508      	ret
000f80 9b87      	sbis __i2c_pin,__scl_bit
000f81 9508      	ret
000f82 d004      	rcall __i2c_delay1
000f83 9a8e      	sbi  __i2c_dir,__sda_bit
000f84 d002      	rcall __i2c_delay1
000f85 9a8f      	sbi  __i2c_dir,__scl_bit
000f86 e0e1      	ldi  r30,1
                 __i2c_delay1:
000f87 e16b      	ldi  r22,27
000f88 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
000f89 9a8e      	sbi  __i2c_dir,__sda_bit
000f8a 9a8f      	sbi  __i2c_dir,__scl_bit
000f8b d003      	rcall __i2c_delay2
000f8c 988f      	cbi  __i2c_dir,__scl_bit
000f8d dff9      	rcall __i2c_delay1
000f8e 988e      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
000f8f e365      	ldi  r22,53
                 __i2c_delay2l:
000f90 956a      	dec  r22
000f91 f7f1      	brne __i2c_delay2l
000f92 9508      	ret
                 _i2c_read:
000f93 e078      	ldi  r23,8
                 __i2c_read0:
000f94 988f      	cbi  __i2c_dir,__scl_bit
000f95 dff1      	rcall __i2c_delay1
                 __i2c_read3:
000f96 9b87      	sbis __i2c_pin,__scl_bit
000f97 cffe      	rjmp __i2c_read3
000f98 dfee      	rcall __i2c_delay1
000f99 9488      	clc
000f9a 9986      	sbic __i2c_pin,__sda_bit
000f9b 9408      	sec
000f9c 9a8f      	sbi  __i2c_dir,__scl_bit
000f9d dff1      	rcall __i2c_delay2
000f9e 1fee      	rol  r30
000f9f 957a      	dec  r23
000fa0 f799      	brne __i2c_read0
000fa1 2f7a      	mov  r23,r26
000fa2 2377      	tst  r23
000fa3 f411      	brne __i2c_read1
000fa4 988e      	cbi  __i2c_dir,__sda_bit
000fa5 c001      	rjmp __i2c_read2
                 __i2c_read1:
000fa6 9a8e      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
000fa7 dfdf      	rcall __i2c_delay1
000fa8 988f      	cbi  __i2c_dir,__scl_bit
000fa9 dfe5      	rcall __i2c_delay2
000faa 9a8f      	sbi  __i2c_dir,__scl_bit
000fab dfdb      	rcall __i2c_delay1
000fac 988e      	cbi  __i2c_dir,__sda_bit
000fad cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
000fae e078      	ldi  r23,8
                 __i2c_write0:
000faf 0faa      	lsl  r26
000fb0 f410      	brcc __i2c_write1
000fb1 988e      	cbi  __i2c_dir,__sda_bit
000fb2 c001      	rjmp __i2c_write2
                 __i2c_write1:
000fb3 9a8e      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
000fb4 dfda      	rcall __i2c_delay2
000fb5 988f      	cbi  __i2c_dir,__scl_bit
000fb6 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
000fb7 9b87      	sbis __i2c_pin,__scl_bit
000fb8 cffe      	rjmp __i2c_write3
000fb9 dfcd      	rcall __i2c_delay1
000fba 9a8f      	sbi  __i2c_dir,__scl_bit
000fbb 957a      	dec  r23
000fbc f791      	brne __i2c_write0
000fbd 988e      	cbi  __i2c_dir,__sda_bit
000fbe dfc8      	rcall __i2c_delay1
000fbf 988f      	cbi  __i2c_dir,__scl_bit
000fc0 dfce      	rcall __i2c_delay2
000fc1 e0e1      	ldi  r30,1
000fc2 9986      	sbic __i2c_pin,__sda_bit
000fc3 27ee      	clr  r30
000fc4 9a8f      	sbi  __i2c_dir,__scl_bit
000fc5 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
000fc6 9610      	adiw r26,0
000fc7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000fc8 ea80     +LDI R24 , LOW ( 0xFA0 )
000fc9 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000fca 9701     +SBIW R24 , 1
000fcb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000fcc 95a8      	wdr
000fcd 9711      	sbiw r26,1
000fce f7c9      	brne __delay_ms0
                 __delay_ms1:
000fcf 9508      	ret
                 
                 	.equ __w1_port=0x1B
                 	.equ __w1_bit=0x00
                 
                 _w1_init:
000fd0 27ee      	clr  r30
000fd1 98d8      	cbi  __w1_port,__w1_bit
000fd2 9ad0      	sbi  __w1_port-1,__w1_bit
                +
000fd3 e880     +LDI R24 , LOW ( 0x780 )
000fd4 e097     +LDI R25 , HIGH ( 0x780 )
                +__DELAY_USW_LOOP :
000fd5 9701     +SBIW R24 , 1
000fd6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x780
000fd7 98d0      	cbi  __w1_port-1,__w1_bit
                +
000fd8 e48b     +LDI R24 , LOW ( 0x4B )
                +__DELAY_USB_LOOP :
000fd9 958a     +DEC R24
000fda f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x4B
000fdb 9bc8      	sbis __w1_port-2,__w1_bit
000fdc 9508      	ret
                +
000fdd e380     +LDI R24 , LOW ( 0x130 )
000fde e091     +LDI R25 , HIGH ( 0x130 )
                +__DELAY_USW_LOOP :
000fdf 9701     +SBIW R24 , 1
000fe0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x130
000fe1 9bc8      	sbis __w1_port-2,__w1_bit
000fe2 e0e1      	ldi  r30,1
                +
000fe3 e188     +LDI R24 , LOW ( 0x618 )
000fe4 e096     +LDI R25 , HIGH ( 0x618 )
                +__DELAY_USW_LOOP :
000fe5 9701     +SBIW R24 , 1
000fe6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x618
000fe7 9508      	ret
                 
                 __ROUND_REPACK:
000fe8 2355      	TST  R21
000fe9 f442      	BRPL __REPACK
000fea 3850      	CPI  R21,0x80
000feb f411      	BRNE __ROUND_REPACK0
000fec ffe0      	SBRS R30,0
000fed c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000fee 9631      	ADIW R30,1
000fef 1f69      	ADC  R22,R25
000ff0 1f79      	ADC  R23,R25
000ff1 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000ff2 e850      	LDI  R21,0x80
000ff3 2757      	EOR  R21,R23
000ff4 f411      	BRNE __REPACK0
000ff5 935f      	PUSH R21
000ff6 c0c8      	RJMP __ZERORES
                 __REPACK0:
000ff7 3f5f      	CPI  R21,0xFF
000ff8 f031      	BREQ __REPACK1
000ff9 0f66      	LSL  R22
000ffa 0c00      	LSL  R0
000ffb 9557      	ROR  R21
000ffc 9567      	ROR  R22
000ffd 2f75      	MOV  R23,R21
000ffe 9508      	RET
                 __REPACK1:
000fff 935f      	PUSH R21
001000 2000      	TST  R0
001001 f00a      	BRMI __REPACK2
001002 c0c8      	RJMP __MAXRES
                 __REPACK2:
001003 c0c1      	RJMP __MINRES
                 
                 __UNPACK:
001004 e850      	LDI  R21,0x80
001005 2e19      	MOV  R1,R25
001006 2215      	AND  R1,R21
001007 0f88      	LSL  R24
001008 1f99      	ROL  R25
001009 2795      	EOR  R25,R21
00100a 0f55      	LSL  R21
00100b 9587      	ROR  R24
                 
                 __UNPACK1:
00100c e850      	LDI  R21,0x80
00100d 2e07      	MOV  R0,R23
00100e 2205      	AND  R0,R21
00100f 0f66      	LSL  R22
001010 1f77      	ROL  R23
001011 2775      	EOR  R23,R21
001012 0f55      	LSL  R21
001013 9567      	ROR  R22
001014 9508      	RET
                 
                 __CFD1U:
001015 9468      	SET
001016 c001      	RJMP __CFD1U0
                 __CFD1:
001017 94e8      	CLT
                 __CFD1U0:
001018 935f      	PUSH R21
001019 dff2      	RCALL __UNPACK1
00101a 3870      	CPI  R23,0x80
00101b f018      	BRLO __CFD10
00101c 3f7f      	CPI  R23,0xFF
00101d f408      	BRCC __CFD10
00101e c0a0      	RJMP __ZERORES
                 __CFD10:
00101f e156      	LDI  R21,22
001020 1b57      	SUB  R21,R23
001021 f4aa      	BRPL __CFD11
001022 9551      	NEG  R21
001023 3058      	CPI  R21,8
001024 f40e      	BRTC __CFD19
001025 3059      	CPI  R21,9
                 __CFD19:
001026 f030      	BRLO __CFD17
001027 efef      	SER  R30
001028 efff      	SER  R31
001029 ef6f      	SER  R22
00102a e77f      	LDI  R23,0x7F
00102b f977      	BLD  R23,7
00102c c01a      	RJMP __CFD15
                 __CFD17:
00102d 2777      	CLR  R23
00102e 2355      	TST  R21
00102f f0b9      	BREQ __CFD15
                 __CFD18:
001030 0fee      	LSL  R30
001031 1fff      	ROL  R31
001032 1f66      	ROL  R22
001033 1f77      	ROL  R23
001034 955a      	DEC  R21
001035 f7d1      	BRNE __CFD18
001036 c010      	RJMP __CFD15
                 __CFD11:
001037 2777      	CLR  R23
                 __CFD12:
001038 3058      	CPI  R21,8
001039 f028      	BRLO __CFD13
00103a 2fef      	MOV  R30,R31
00103b 2ff6      	MOV  R31,R22
00103c 2f67      	MOV  R22,R23
00103d 5058      	SUBI R21,8
00103e cff9      	RJMP __CFD12
                 __CFD13:
00103f 2355      	TST  R21
001040 f031      	BREQ __CFD15
                 __CFD14:
001041 9576      	LSR  R23
001042 9567      	ROR  R22
001043 95f7      	ROR  R31
001044 95e7      	ROR  R30
001045 955a      	DEC  R21
001046 f7d1      	BRNE __CFD14
                 __CFD15:
001047 2000      	TST  R0
001048 f40a      	BRPL __CFD16
001049 d142      	RCALL __ANEGD1
                 __CFD16:
00104a 915f      	POP  R21
00104b 9508      	RET
                 
                 __CDF1U:
00104c 9468      	SET
00104d c001      	RJMP __CDF1U0
                 __CDF1:
00104e 94e8      	CLT
                 __CDF1U0:
00104f 9730      	SBIW R30,0
001050 4060      	SBCI R22,0
001051 4070      	SBCI R23,0
001052 f0b1      	BREQ __CDF10
001053 2400      	CLR  R0
001054 f026      	BRTS __CDF11
001055 2377      	TST  R23
001056 f412      	BRPL __CDF11
001057 9400      	COM  R0
001058 d133      	RCALL __ANEGD1
                 __CDF11:
001059 2e17      	MOV  R1,R23
00105a e17e      	LDI  R23,30
00105b 2011      	TST  R1
                 __CDF12:
00105c f032      	BRMI __CDF13
00105d 957a      	DEC  R23
00105e 0fee      	LSL  R30
00105f 1fff      	ROL  R31
001060 1f66      	ROL  R22
001061 1c11      	ROL  R1
001062 cff9      	RJMP __CDF12
                 __CDF13:
001063 2fef      	MOV  R30,R31
001064 2ff6      	MOV  R31,R22
001065 2d61      	MOV  R22,R1
001066 935f      	PUSH R21
001067 df8a      	RCALL __REPACK
001068 915f      	POP  R21
                 __CDF10:
001069 9508      	RET
                 
                 __SWAPACC:
00106a 934f      	PUSH R20
00106b 01af      	MOVW R20,R30
00106c 01fd      	MOVW R30,R26
00106d 01da      	MOVW R26,R20
00106e 01ab      	MOVW R20,R22
00106f 01bc      	MOVW R22,R24
001070 01ca      	MOVW R24,R20
001071 2d40      	MOV  R20,R0
001072 2c01      	MOV  R0,R1
001073 2e14      	MOV  R1,R20
001074 914f      	POP  R20
001075 9508      	RET
                 
                 __UADD12:
001076 0fea      	ADD  R30,R26
001077 1ffb      	ADC  R31,R27
001078 1f68      	ADC  R22,R24
001079 9508      	RET
                 
                 __NEGMAN1:
00107a 95e0      	COM  R30
00107b 95f0      	COM  R31
00107c 9560      	COM  R22
00107d 5fef      	SUBI R30,-1
00107e 4fff      	SBCI R31,-1
00107f 4f6f      	SBCI R22,-1
001080 9508      	RET
                 
                 __ADDF12:
001081 935f      	PUSH R21
001082 df81      	RCALL __UNPACK
001083 3890      	CPI  R25,0x80
001084 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001085 3870      	CPI  R23,0x80
001086 f121      	BREQ __ADDF128
                 __ADDF121:
001087 2f57      	MOV  R21,R23
001088 1b59      	SUB  R21,R25
001089 f12b      	BRVS __ADDF1211
00108a f412      	BRPL __ADDF122
00108b dfde      	RCALL __SWAPACC
00108c cffa      	RJMP __ADDF121
                 __ADDF122:
00108d 3158      	CPI  R21,24
00108e f018      	BRLO __ADDF123
00108f 27aa      	CLR  R26
001090 27bb      	CLR  R27
001091 2788      	CLR  R24
                 __ADDF123:
001092 3058      	CPI  R21,8
001093 f028      	BRLO __ADDF124
001094 2fab      	MOV  R26,R27
001095 2fb8      	MOV  R27,R24
001096 2788      	CLR  R24
001097 5058      	SUBI R21,8
001098 cff9      	RJMP __ADDF123
                 __ADDF124:
001099 2355      	TST  R21
00109a f029      	BREQ __ADDF126
                 __ADDF125:
00109b 9586      	LSR  R24
00109c 95b7      	ROR  R27
00109d 95a7      	ROR  R26
00109e 955a      	DEC  R21
00109f f7d9      	BRNE __ADDF125
                 __ADDF126:
0010a0 2d50      	MOV  R21,R0
0010a1 2551      	EOR  R21,R1
0010a2 f072      	BRMI __ADDF127
0010a3 dfd2      	RCALL __UADD12
0010a4 f438      	BRCC __ADDF129
0010a5 9567      	ROR  R22
0010a6 95f7      	ROR  R31
0010a7 95e7      	ROR  R30
0010a8 9573      	INC  R23
0010a9 f413      	BRVC __ADDF129
0010aa c020      	RJMP __MAXRES
                 __ADDF128:
0010ab dfbe      	RCALL __SWAPACC
                 __ADDF129:
0010ac df45      	RCALL __REPACK
0010ad 915f      	POP  R21
0010ae 9508      	RET
                 __ADDF1211:
0010af f7d8      	BRCC __ADDF128
0010b0 cffb      	RJMP __ADDF129
                 __ADDF127:
0010b1 1bea      	SUB  R30,R26
0010b2 0bfb      	SBC  R31,R27
0010b3 0b68      	SBC  R22,R24
0010b4 f051      	BREQ __ZERORES
0010b5 f410      	BRCC __ADDF1210
0010b6 9400      	COM  R0
0010b7 dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
0010b8 2366      	TST  R22
0010b9 f392      	BRMI __ADDF129
0010ba 0fee      	LSL  R30
0010bb 1fff      	ROL  R31
0010bc 1f66      	ROL  R22
0010bd 957a      	DEC  R23
0010be f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0010bf 27ee      	CLR  R30
0010c0 27ff      	CLR  R31
0010c1 2766      	CLR  R22
0010c2 2777      	CLR  R23
0010c3 915f      	POP  R21
0010c4 9508      	RET
                 
                 __MINRES:
0010c5 efef      	SER  R30
0010c6 efff      	SER  R31
0010c7 e76f      	LDI  R22,0x7F
0010c8 ef7f      	SER  R23
0010c9 915f      	POP  R21
0010ca 9508      	RET
                 
                 __MAXRES:
0010cb efef      	SER  R30
0010cc efff      	SER  R31
0010cd e76f      	LDI  R22,0x7F
0010ce e77f      	LDI  R23,0x7F
0010cf 915f      	POP  R21
0010d0 9508      	RET
                 
                 __MULF12:
0010d1 935f      	PUSH R21
0010d2 df31      	RCALL __UNPACK
0010d3 3870      	CPI  R23,0x80
0010d4 f351      	BREQ __ZERORES
0010d5 3890      	CPI  R25,0x80
0010d6 f341      	BREQ __ZERORES
0010d7 2401      	EOR  R0,R1
0010d8 9408      	SEC
0010d9 1f79      	ADC  R23,R25
0010da f423      	BRVC __MULF124
0010db f31c      	BRLT __ZERORES
                 __MULF125:
0010dc 2000      	TST  R0
0010dd f33a      	BRMI __MINRES
0010de cfec      	RJMP __MAXRES
                 __MULF124:
0010df 920f      	PUSH R0
0010e0 931f      	PUSH R17
0010e1 932f      	PUSH R18
0010e2 933f      	PUSH R19
0010e3 934f      	PUSH R20
0010e4 2711      	CLR  R17
0010e5 2722      	CLR  R18
0010e6 2799      	CLR  R25
0010e7 9f68      	MUL  R22,R24
0010e8 01a0      	MOVW R20,R0
0010e9 9f8f      	MUL  R24,R31
0010ea 2d30      	MOV  R19,R0
0010eb 0d41      	ADD  R20,R1
0010ec 1f59      	ADC  R21,R25
0010ed 9f6b      	MUL  R22,R27
0010ee 0d30      	ADD  R19,R0
0010ef 1d41      	ADC  R20,R1
0010f0 1f59      	ADC  R21,R25
0010f1 9f8e      	MUL  R24,R30
0010f2 d027      	RCALL __MULF126
0010f3 9fbf      	MUL  R27,R31
0010f4 d025      	RCALL __MULF126
0010f5 9f6a      	MUL  R22,R26
0010f6 d023      	RCALL __MULF126
0010f7 9fbe      	MUL  R27,R30
0010f8 d01d      	RCALL __MULF127
0010f9 9faf      	MUL  R26,R31
0010fa d01b      	RCALL __MULF127
0010fb 9fae      	MUL  R26,R30
0010fc 0d11      	ADD  R17,R1
0010fd 1f29      	ADC  R18,R25
0010fe 1f39      	ADC  R19,R25
0010ff 1f49      	ADC  R20,R25
001100 1f59      	ADC  R21,R25
001101 2fe3      	MOV  R30,R19
001102 2ff4      	MOV  R31,R20
001103 2f65      	MOV  R22,R21
001104 2f52      	MOV  R21,R18
001105 914f      	POP  R20
001106 913f      	POP  R19
001107 912f      	POP  R18
001108 911f      	POP  R17
001109 900f      	POP  R0
00110a 2366      	TST  R22
00110b f02a      	BRMI __MULF122
00110c 0f55      	LSL  R21
00110d 1fee      	ROL  R30
00110e 1fff      	ROL  R31
00110f 1f66      	ROL  R22
001110 c002      	RJMP __MULF123
                 __MULF122:
001111 9573      	INC  R23
001112 f24b      	BRVS __MULF125
                 __MULF123:
001113 ded4      	RCALL __ROUND_REPACK
001114 915f      	POP  R21
001115 9508      	RET
                 
                 __MULF127:
001116 0d10      	ADD  R17,R0
001117 1d21      	ADC  R18,R1
001118 1f39      	ADC  R19,R25
001119 c002      	RJMP __MULF128
                 __MULF126:
00111a 0d20      	ADD  R18,R0
00111b 1d31      	ADC  R19,R1
                 __MULF128:
00111c 1f49      	ADC  R20,R25
00111d 1f59      	ADC  R21,R25
00111e 9508      	RET
                 
                 __DIVF21:
00111f 935f      	PUSH R21
001120 dee3      	RCALL __UNPACK
001121 3870      	CPI  R23,0x80
001122 f421      	BRNE __DIVF210
001123 2011      	TST  R1
                 __DIVF211:
001124 f40a      	BRPL __DIVF219
001125 cf9f      	RJMP __MINRES
                 __DIVF219:
001126 cfa4      	RJMP __MAXRES
                 __DIVF210:
001127 3890      	CPI  R25,0x80
001128 f409      	BRNE __DIVF218
                 __DIVF217:
001129 cf95      	RJMP __ZERORES
                 __DIVF218:
00112a 2401      	EOR  R0,R1
00112b 9408      	SEC
00112c 0b97      	SBC  R25,R23
00112d f41b      	BRVC __DIVF216
00112e f3d4      	BRLT __DIVF217
00112f 2000      	TST  R0
001130 cff3      	RJMP __DIVF211
                 __DIVF216:
001131 2f79      	MOV  R23,R25
001132 931f      	PUSH R17
001133 932f      	PUSH R18
001134 933f      	PUSH R19
001135 934f      	PUSH R20
001136 2411      	CLR  R1
001137 2711      	CLR  R17
001138 2722      	CLR  R18
001139 2733      	CLR  R19
00113a 2744      	CLR  R20
00113b 2755      	CLR  R21
00113c e290      	LDI  R25,32
                 __DIVF212:
00113d 17ae      	CP   R26,R30
00113e 07bf      	CPC  R27,R31
00113f 0786      	CPC  R24,R22
001140 0741      	CPC  R20,R17
001141 f030      	BRLO __DIVF213
001142 1bae      	SUB  R26,R30
001143 0bbf      	SBC  R27,R31
001144 0b86      	SBC  R24,R22
001145 0b41      	SBC  R20,R17
001146 9408      	SEC
001147 c001      	RJMP __DIVF214
                 __DIVF213:
001148 9488      	CLC
                 __DIVF214:
001149 1f55      	ROL  R21
00114a 1f22      	ROL  R18
00114b 1f33      	ROL  R19
00114c 1c11      	ROL  R1
00114d 1faa      	ROL  R26
00114e 1fbb      	ROL  R27
00114f 1f88      	ROL  R24
001150 1f44      	ROL  R20
001151 959a      	DEC  R25
001152 f751      	BRNE __DIVF212
001153 01f9      	MOVW R30,R18
001154 2d61      	MOV  R22,R1
001155 914f      	POP  R20
001156 913f      	POP  R19
001157 912f      	POP  R18
001158 911f      	POP  R17
001159 2366      	TST  R22
00115a f032      	BRMI __DIVF215
00115b 0f55      	LSL  R21
00115c 1fee      	ROL  R30
00115d 1fff      	ROL  R31
00115e 1f66      	ROL  R22
00115f 957a      	DEC  R23
001160 f243      	BRVS __DIVF217
                 __DIVF215:
001161 de86      	RCALL __ROUND_REPACK
001162 915f      	POP  R21
001163 9508      	RET
                 
                 __CMPF12:
001164 2399      	TST  R25
001165 f09a      	BRMI __CMPF120
001166 2377      	TST  R23
001167 f042      	BRMI __CMPF121
001168 1797      	CP   R25,R23
001169 f048      	BRLO __CMPF122
00116a f429      	BRNE __CMPF121
00116b 17ae      	CP   R26,R30
00116c 07bf      	CPC  R27,R31
00116d 0786      	CPC  R24,R22
00116e f020      	BRLO __CMPF122
00116f f031      	BREQ __CMPF123
                 __CMPF121:
001170 9498      	CLZ
001171 9488      	CLC
001172 9508      	RET
                 __CMPF122:
001173 9498      	CLZ
001174 9408      	SEC
001175 9508      	RET
                 __CMPF123:
001176 9418      	SEZ
001177 9488      	CLC
001178 9508      	RET
                 __CMPF120:
001179 2377      	TST  R23
00117a f7c2      	BRPL __CMPF122
00117b 1797      	CP   R25,R23
00117c f398      	BRLO __CMPF121
00117d f7a9      	BRNE __CMPF122
00117e 17ea      	CP   R30,R26
00117f 07fb      	CPC  R31,R27
001180 0768      	CPC  R22,R24
001181 f388      	BRLO __CMPF122
001182 f399      	BREQ __CMPF123
001183 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
001184 2400      	CLR  R0
001185 0daf      	ADD  R26,R15
001186 1db0      	ADC  R27,R0
001187 9508      	RET
                 
                 __ANEGW1:
001188 95f1      	NEG  R31
001189 95e1      	NEG  R30
00118a 40f0      	SBCI R31,0
00118b 9508      	RET
                 
                 __ANEGD1:
00118c 95f0      	COM  R31
00118d 9560      	COM  R22
00118e 9570      	COM  R23
00118f 95e1      	NEG  R30
001190 4fff      	SBCI R31,-1
001191 4f6f      	SBCI R22,-1
001192 4f7f      	SBCI R23,-1
001193 9508      	RET
                 
                 __LSLB12:
001194 23ee      	TST  R30
001195 2e0e      	MOV  R0,R30
001196 2fea      	MOV  R30,R26
001197 f019      	BREQ __LSLB12R
                 __LSLB12L:
001198 0fee      	LSL  R30
001199 940a      	DEC  R0
00119a f7e9      	BRNE __LSLB12L
                 __LSLB12R:
00119b 9508      	RET
                 
                 __LSRB12:
00119c 23ee      	TST  R30
00119d 2e0e      	MOV  R0,R30
00119e 2fea      	MOV  R30,R26
00119f f019      	BREQ __LSRB12R
                 __LSRB12L:
0011a0 95e6      	LSR  R30
0011a1 940a      	DEC  R0
0011a2 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
0011a3 9508      	RET
                 
                 __CBD1:
0011a4 2ffe      	MOV  R31,R30
0011a5 0fff      	ADD  R31,R31
0011a6 0bff      	SBC  R31,R31
0011a7 2f6f      	MOV  R22,R31
0011a8 2f7f      	MOV  R23,R31
0011a9 9508      	RET
                 
                 __MULW12U:
0011aa 9ffa      	MUL  R31,R26
0011ab 2df0      	MOV  R31,R0
0011ac 9feb      	MUL  R30,R27
0011ad 0df0      	ADD  R31,R0
0011ae 9fea      	MUL  R30,R26
0011af 2de0      	MOV  R30,R0
0011b0 0df1      	ADD  R31,R1
0011b1 9508      	RET
                 
                 __MULD12U:
0011b2 9f7a      	MUL  R23,R26
0011b3 2d70      	MOV  R23,R0
0011b4 9f6b      	MUL  R22,R27
0011b5 0d70      	ADD  R23,R0
0011b6 9ff8      	MUL  R31,R24
0011b7 0d70      	ADD  R23,R0
0011b8 9fe9      	MUL  R30,R25
0011b9 0d70      	ADD  R23,R0
0011ba 9f6a      	MUL  R22,R26
0011bb 2d60      	MOV  R22,R0
0011bc 0d71      	ADD  R23,R1
0011bd 9ffb      	MUL  R31,R27
0011be 0d60      	ADD  R22,R0
0011bf 1d71      	ADC  R23,R1
0011c0 9fe8      	MUL  R30,R24
0011c1 0d60      	ADD  R22,R0
0011c2 1d71      	ADC  R23,R1
0011c3 2788      	CLR  R24
0011c4 9ffa      	MUL  R31,R26
0011c5 2df0      	MOV  R31,R0
0011c6 0d61      	ADD  R22,R1
0011c7 1f78      	ADC  R23,R24
0011c8 9feb      	MUL  R30,R27
0011c9 0df0      	ADD  R31,R0
0011ca 1d61      	ADC  R22,R1
0011cb 1f78      	ADC  R23,R24
0011cc 9fea      	MUL  R30,R26
0011cd 2de0      	MOV  R30,R0
0011ce 0df1      	ADD  R31,R1
0011cf 1f68      	ADC  R22,R24
0011d0 1f78      	ADC  R23,R24
0011d1 9508      	RET
                 
                 __DIVW21U:
0011d2 2400      	CLR  R0
0011d3 2411      	CLR  R1
0011d4 e190      	LDI  R25,16
                 __DIVW21U1:
0011d5 0faa      	LSL  R26
0011d6 1fbb      	ROL  R27
0011d7 1c00      	ROL  R0
0011d8 1c11      	ROL  R1
0011d9 1a0e      	SUB  R0,R30
0011da 0a1f      	SBC  R1,R31
0011db f418      	BRCC __DIVW21U2
0011dc 0e0e      	ADD  R0,R30
0011dd 1e1f      	ADC  R1,R31
0011de c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0011df 60a1      	SBR  R26,1
                 __DIVW21U3:
0011e0 959a      	DEC  R25
0011e1 f799      	BRNE __DIVW21U1
0011e2 01fd      	MOVW R30,R26
0011e3 01d0      	MOVW R26,R0
0011e4 9508      	RET
                 
                 __DIVW21:
0011e5 d012      	RCALL __CHKSIGNW
0011e6 dfeb      	RCALL __DIVW21U
0011e7 f40e      	BRTC __DIVW211
0011e8 df9f      	RCALL __ANEGW1
                 __DIVW211:
0011e9 9508      	RET
                 
                 __MODW21:
0011ea 94e8      	CLT
0011eb ffb7      	SBRS R27,7
0011ec c004      	RJMP __MODW211
0011ed 95a0      	COM  R26
0011ee 95b0      	COM  R27
0011ef 9611      	ADIW R26,1
0011f0 9468      	SET
                 __MODW211:
0011f1 fdf7      	SBRC R31,7
0011f2 df95      	RCALL __ANEGW1
0011f3 dfde      	RCALL __DIVW21U
0011f4 01fd      	MOVW R30,R26
0011f5 f40e      	BRTC __MODW212
0011f6 df91      	RCALL __ANEGW1
                 __MODW212:
0011f7 9508      	RET
                 
                 __CHKSIGNW:
0011f8 94e8      	CLT
0011f9 fff7      	SBRS R31,7
0011fa c002      	RJMP __CHKSW1
0011fb df8c      	RCALL __ANEGW1
0011fc 9468      	SET
                 __CHKSW1:
0011fd ffb7      	SBRS R27,7
0011fe c006      	RJMP __CHKSW2
0011ff 95a0      	COM  R26
001200 95b0      	COM  R27
001201 9611      	ADIW R26,1
001202 f800      	BLD  R0,0
001203 9403      	INC  R0
001204 fa00      	BST  R0,0
                 __CHKSW2:
001205 9508      	RET
                 
                 __GETW1P:
001206 91ed      	LD   R30,X+
001207 91fc      	LD   R31,X
001208 9711      	SBIW R26,1
001209 9508      	RET
                 
                 __GETW1PF:
00120a 9005      	LPM  R0,Z+
00120b 91f4      	LPM  R31,Z
00120c 2de0      	MOV  R30,R0
00120d 9508      	RET
                 
                 __GETD2S0:
00120e 81a8      	LD   R26,Y
00120f 81b9      	LDD  R27,Y+1
001210 818a      	LDD  R24,Y+2
001211 819b      	LDD  R25,Y+3
001212 9508      	RET
                 
                 __PUTD1S0:
001213 83e8      	ST   Y,R30
001214 83f9      	STD  Y+1,R31
001215 836a      	STD  Y+2,R22
001216 837b      	STD  Y+3,R23
001217 9508      	RET
                 
                 __PUTPARD1:
001218 937a      	ST   -Y,R23
001219 936a      	ST   -Y,R22
00121a 93fa      	ST   -Y,R31
00121b 93ea      	ST   -Y,R30
00121c 9508      	RET
                 
                 __SWAPB12:
00121d 2e1a      	MOV  R1,R26
00121e 2fae      	MOV  R26,R30
00121f 2de1      	MOV  R30,R1
001220 9508      	RET
                 
                 __EEPROMRDB:
001221 99e1      	SBIC EECR,EEWE
001222 cffe      	RJMP __EEPROMRDB
001223 93ff      	PUSH R31
001224 b7ff      	IN   R31,SREG
001225 94f8      	CLI
001226 bbae      	OUT  EEARL,R26
001227 bbbf      	OUT  EEARH,R27
001228 9ae0      	SBI  EECR,EERE
001229 b3ed      	IN   R30,EEDR
00122a bfff      	OUT  SREG,R31
00122b 91ff      	POP  R31
00122c 9508      	RET
                 
                 __EEPROMWRB:
00122d 9be1      	SBIS EECR,EEWE
00122e c002      	RJMP __EEPROMWRB1
00122f 95a8      	WDR
001230 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001231 b79f      	IN   R25,SREG
001232 94f8      	CLI
001233 bbae      	OUT  EEARL,R26
001234 bbbf      	OUT  EEARH,R27
001235 9ae0      	SBI  EECR,EERE
001236 b38d      	IN   R24,EEDR
001237 17e8      	CP   R30,R24
001238 f019      	BREQ __EEPROMWRB0
001239 bbed      	OUT  EEDR,R30
00123a 9ae2      	SBI  EECR,EEMWE
00123b 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00123c bf9f      	OUT  SREG,R25
00123d 9508      	RET
                 
                 __CPW02:
00123e 2400      	CLR  R0
00123f 160a      	CP   R0,R26
001240 060b      	CPC  R0,R27
001241 9508      	RET
                 
                 __SAVELOCR6:
001242 935a      	ST   -Y,R21
                 __SAVELOCR5:
001243 934a      	ST   -Y,R20
                 __SAVELOCR4:
001244 933a      	ST   -Y,R19
                 __SAVELOCR3:
001245 932a      	ST   -Y,R18
                 __SAVELOCR2:
001246 931a      	ST   -Y,R17
001247 930a      	ST   -Y,R16
001248 9508      	RET
                 
                 __LOADLOCR6:
001249 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00124a 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00124b 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00124c 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00124d 8119      	LDD  R17,Y+1
00124e 8108      	LD   R16,Y
00124f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  80 r1 :  41 r2 :   0 r3 :   0 r4 :   4 r5 :   0 r6 :   4 r7 :   0 
r8 :   0 r9 :   5 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  11 
r16:  98 r17: 139 r18:  81 r19:  62 r20:  53 r21:  94 r22:  83 r23:  79 
r24:  67 r25:  51 r26: 519 r27: 169 r28:  39 r29:   1 r30:1125 r31: 268 
x  :  31 y  : 872 z  :  32 
Registers used: 25 out of 35 (71.4%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  39 add   :  48 
adiw  :  55 and   :  14 andi  :  28 asr   :   0 bclr  :   0 bld   :  11 
brbc  :   0 brbs  :   0 brcc  :   7 brcs  :   0 break :   0 breq  :  76 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  37 
brlt  :   9 brmi  :  10 brne  : 101 brpl  :  10 brsh  :  31 brtc  :   3 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   9 call  : 264 
cbi   :  46 cbr   :   0 clc   :   4 clh   :   0 cli   :   3 cln   :   0 
clr   :  71 cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :  20 
cp    :  49 cpc   :  24 cpi   : 135 cpse  :   0 dec   :  16 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :   6 inc   :   7 jmp   :  53 ld    :  72 ldd   : 417 ldi   : 402 
lds   :  48 lpm   :  42 lsl   :  23 lsr   :  25 mov   : 138 movw  :  63 
mul   :  24 muls  :   0 mulsu :   0 neg   :   4 nop   :   4 or    :   9 
ori   :  21 out   :  47 pop   :  24 push  :  23 rcall : 111 ret   : 112 
reti  :   2 rjmp  : 206 rol   :  30 ror   :  12 sbc   :  12 sbci  :  18 
sbi   :  60 sbic  :  15 sbis  :  11 sbiw  :  42 sbr   :   1 sbrc  :   3 
sbrs  :  15 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 272 std   : 146 sts   :  38 sub   :  24 subi  :  64 swap  :   3 
tst   :  27 wdr   :   2 
Instructions used: 82 out of 116 (70.7%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0024a0   8472    904   9376   32768  28.6%
[.dseg] 0x000060 0x000296      0     54     54    2048   2.6%
[.eseg] 0x000000 0x000004      0      4      4    1024   0.4%

Assembly complete, 0 errors, 9 warnings
