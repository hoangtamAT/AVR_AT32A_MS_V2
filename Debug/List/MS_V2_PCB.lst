
AVRASM ver. 2.1.30  G:\TAM\K\AVR\May Say V2 PCB AT32A\Debug\List\MS_V2_PCB.asm Thu Jan 11 11:57:26 2018

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0195 	JMP  __RESET
000002 940c 01c1 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 01c2 	JMP  _timer0_ovf_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 0400
000030 0404
000031 0404      	.DB  0x0,0x0,0x0,0x4,0x4,0x4,0x4,0x4
000032 0400
000033 0a0a
000034 000a
000035 0000      	.DB  0x0,0x4,0xA,0xA,0xA,0x0,0x0,0x0
000036 0a00
000037 1f0a
000038 1f0a
000039 0a0a      	.DB  0x0,0xA,0xA,0x1F,0xA,0x1F,0xA,0xA
00003a 1e04
00003b 0e05
00003c 0f14
00003d 0304      	.DB  0x4,0x1E,0x5,0xE,0x14,0xF,0x4,0x3
00003e 0813
00003f 0204
000040 1819
000041 0906      	.DB  0x13,0x8,0x4,0x2,0x19,0x18,0x6,0x9
000042 0205
000043 0915
000044 0616
000045 0204      	.DB  0x5,0x2,0x15,0x9,0x16,0x6,0x4,0x2
000046 0000
000047 0000
000048 0408
000049 0202      	.DB  0x0,0x0,0x0,0x0,0x8,0x4,0x2,0x2
00004a 0402
00004b 0208
00004c 0804
00004d 0808      	.DB  0x2,0x4,0x8,0x2,0x4,0x8,0x8,0x8
00004e 0204
00004f 0a00
000050 1f04
000051 0a04      	.DB  0x4,0x2,0x0,0xA,0x4,0x1F,0x4,0xA
000052 0000
000053 0404
000054 041f
000055 0004      	.DB  0x0,0x0,0x4,0x4,0x1F,0x4,0x4,0x0
000056 0000
000057 0000
000058 0406
000059 0002      	.DB  0x0,0x0,0x0,0x0,0x6,0x4,0x2,0x0
00005a 0000
00005b 001f
00005c 0000
00005d 0000      	.DB  0x0,0x0,0x1F,0x0,0x0,0x0,0x0,0x0
00005e 0000
00005f 0606
000060 0000
000061 0810      	.DB  0x0,0x0,0x6,0x6,0x0,0x0,0x10,0x8
000062 0204
000063 0001
000064 110e
000065 1519      	.DB  0x4,0x2,0x1,0x0,0xE,0x11,0x19,0x15
000066 1113
000067 040e
000068 0406
000069 0404      	.DB  0x13,0x11,0xE,0x4,0x6,0x4,0x4,0x4
00006a 0e04
00006b 110e
00006c 0810
00006d 0204      	.DB  0x4,0xE,0xE,0x11,0x10,0x8,0x4,0x2
00006e 1f1f
00006f 0408
000070 1008
000071 0e11      	.DB  0x1F,0x1F,0x8,0x4,0x8,0x10,0x11,0xE
000072 0c08
000073 090a
000074 081f
000075 1f08      	.DB  0x8,0xC,0xA,0x9,0x1F,0x8,0x8,0x1F
000076 0f01
000077 1010
000078 0e11
000079 020c      	.DB  0x1,0xF,0x10,0x10,0x11,0xE,0xC,0x2
00007a 0f01
00007b 1111
00007c 1f0e
00007d 0810      	.DB  0x1,0xF,0x11,0x11,0xE,0x1F,0x10,0x8
00007e 0204
00007f 0202
000080 110e
000081 0e11      	.DB  0x4,0x2,0x2,0x2,0xE,0x11,0x11,0xE
000082 1111
000083 0e0e
000084 1111
000085 101e      	.DB  0x11,0x11,0xE,0xE,0x11,0x11,0x1E,0x10
000086 0608
000087 0600
000088 0006
000089 0606      	.DB  0x8,0x6,0x0,0x6,0x6,0x0,0x6,0x6
00008a 0000
00008b 0606
00008c 0600
00008d 0204      	.DB  0x0,0x0,0x6,0x6,0x0,0x6,0x4,0x2
00008e 0810
00008f 0204
000090 0804
000091 0010      	.DB  0x10,0x8,0x4,0x2,0x4,0x8,0x10,0x0
000092 1f00
000093 1f00
000094 0000
000095 0201      	.DB  0x0,0x1F,0x0,0x1F,0x0,0x0,0x1,0x2
000096 0804
000097 0204
000098 0e01
000099 1011      	.DB  0x4,0x8,0x4,0x2,0x1,0xE,0x11,0x10
00009a 0408
00009b 0400
00009c 110e
00009d 1610      	.DB  0x8,0x4,0x0,0x4,0xE,0x11,0x10,0x16
00009e 1515
00009f 0e0e
0000a0 1111
0000a1 1f11      	.DB  0x15,0x15,0xE,0xE,0x11,0x11,0x11,0x1F
0000a2 1111
0000a3 110f
0000a4 0f11
0000a5 1111      	.DB  0x11,0x11,0xF,0x11,0x11,0xF,0x11,0x11
0000a6 0e0f
0000a7 0111
0000a8 0101
0000a9 0e11      	.DB  0xF,0xE,0x11,0x1,0x1,0x1,0x11,0xE
0000aa 0907
0000ab 1111
0000ac 0911
0000ad 1f07      	.DB  0x7,0x9,0x11,0x11,0x11,0x9,0x7,0x1F
0000ae 0101
0000af 010f
0000b0 1f01
0000b1 011f      	.DB  0x1,0x1,0xF,0x1,0x1,0x1F,0x1F,0x1
0000b2 0701
0000b3 0101
0000b4 0e01
0000b5 0111      	.DB  0x1,0x7,0x1,0x1,0x1,0xE,0x11,0x1
0000b6 1901
0000b7 0e11
0000b8 1111
0000b9 1f11      	.DB  0x1,0x19,0x11,0xE,0x11,0x11,0x11,0x1F
0000ba 1111
0000bb 0e11
0000bc 0404
0000bd 0404      	.DB  0x11,0x11,0x11,0xE,0x4,0x4,0x4,0x4
0000be 0e04
0000bf 081c
0000c0 0808
0000c1 0908      	.DB  0x4,0xE,0x1C,0x8,0x8,0x8,0x8,0x9
0000c2 1106
0000c3 0509
0000c4 0503
0000c5 1109      	.DB  0x6,0x11,0x9,0x5,0x3,0x5,0x9,0x11
0000c6 0101
0000c7 0101
0000c8 0101
0000c9 111f      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1F,0x11
0000ca 151b
0000cb 1111
0000cc 1111
0000cd 1111      	.DB  0x1B,0x15,0x11,0x11,0x11,0x11,0x11,0x11
0000ce 1513
0000cf 1119
0000d0 0e11
0000d1 1111      	.DB  0x13,0x15,0x19,0x11,0x11,0xE,0x11,0x11
0000d2 1111
0000d3 0e11
0000d4 110f
0000d5 0f11      	.DB  0x11,0x11,0x11,0xE,0xF,0x11,0x11,0xF
0000d6 0101
0000d7 0e01
0000d8 1111
0000d9 1511      	.DB  0x1,0x1,0x1,0xE,0x11,0x11,0x11,0x15
0000da 1609
0000db 110f
0000dc 0f11
0000dd 0905      	.DB  0x9,0x16,0xF,0x11,0x11,0xF,0x5,0x9
0000de 1e11
0000df 0101
0000e0 100e
0000e1 0f10      	.DB  0x11,0x1E,0x1,0x1,0xE,0x10,0x10,0xF
0000e2 041f
0000e3 0404
0000e4 0404
0000e5 1104      	.DB  0x1F,0x4,0x4,0x4,0x4,0x4,0x4,0x11
0000e6 1111
0000e7 1111
0000e8 0e11
0000e9 1111      	.DB  0x11,0x11,0x11,0x11,0x11,0xE,0x11,0x11
0000ea 1111
0000eb 0a11
0000ec 1104
0000ed 1111      	.DB  0x11,0x11,0x11,0xA,0x4,0x11,0x11,0x11
0000ee 1515
0000ef 111b
0000f0 1111
0000f1 040a      	.DB  0x15,0x15,0x1B,0x11,0x11,0x11,0xA,0x4
0000f2 110a
0000f3 1111
0000f4 0a11
0000f5 0404      	.DB  0xA,0x11,0x11,0x11,0x11,0xA,0x4,0x4
0000f6 0404
0000f7 101f
0000f8 0408
0000f9 0102      	.DB  0x4,0x4,0x1F,0x10,0x8,0x4,0x2,0x1
0000fa 1c1f
0000fb 0404
0000fc 0404
0000fd 1c04      	.DB  0x1F,0x1C,0x4,0x4,0x4,0x4,0x4,0x1C
0000fe 0100
0000ff 0402
000100 1008
000101 0700      	.DB  0x0,0x1,0x2,0x4,0x8,0x10,0x0,0x7
000102 0404
000103 0404
000104 0704
000105 0a04      	.DB  0x4,0x4,0x4,0x4,0x4,0x7,0x4,0xA
000106 0011
000107 0000
000108 0000
000109 0000      	.DB  0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00010a 0000
00010b 1f00
00010c 0402
00010d 0008      	.DB  0x0,0x0,0x0,0x1F,0x2,0x4,0x8,0x0
00010e 0000
00010f 0000
000110 0e00
000111 1e10      	.DB  0x0,0x0,0x0,0x0,0x0,0xE,0x10,0x1E
000112 1e11
000113 0101
000114 130d
000115 1111      	.DB  0x11,0x1E,0x1,0x1,0xD,0x13,0x11,0x11
000116 000f
000117 0e00
000118 0101
000119 0e11      	.DB  0xF,0x0,0x0,0xE,0x1,0x1,0x11,0xE
00011a 1010
00011b 1916
00011c 1111
00011d 001e      	.DB  0x10,0x10,0x16,0x19,0x11,0x11,0x1E,0x0
00011e 0e00
00011f 1f11
000120 0e01
000121 120c      	.DB  0x0,0xE,0x11,0x1F,0x1,0xE,0xC,0x12
000122 0702
000123 0202
000124 0002
000125 1e00      	.DB  0x2,0x7,0x2,0x2,0x2,0x0,0x0,0x1E
000126 1e11
000127 0c10
000128 0101
000129 130d      	.DB  0x11,0x1E,0x10,0xC,0x1,0x1,0xD,0x13
00012a 1111
00012b 0411
00012c 0600
00012d 0404      	.DB  0x11,0x11,0x11,0x4,0x0,0x6,0x4,0x4
00012e 0e04
00012f 0008
000130 080c
000131 0908      	.DB  0x4,0xE,0x8,0x0,0xC,0x8,0x8,0x9
000132 0206
000133 1202
000134 060a
000135 120a      	.DB  0x6,0x2,0x2,0x12,0xA,0x6,0xA,0x12
000136 0406
000137 0404
000138 0404
000139 000e      	.DB  0x6,0x4,0x4,0x4,0x4,0x4,0xE,0x0
00013a 0b00
00013b 1515
00013c 1111
00013d 0000      	.DB  0x0,0xB,0x15,0x15,0x11,0x11,0x0,0x0
00013e 130d
00013f 1111
000140 0011
000141 0e00      	.DB  0xD,0x13,0x11,0x11,0x11,0x0,0x0,0xE
000142 1111
000143 0e11
000144 0000
000145 110f      	.DB  0x11,0x11,0x11,0xE,0x0,0x0,0xF,0x11
000146 010f
000147 0001
000148 1600
000149 1e19      	.DB  0xF,0x1,0x1,0x0,0x0,0x16,0x19,0x1E
00014a 1010
00014b 0000
00014c 130d
00014d 0101      	.DB  0x10,0x10,0x0,0x0,0xD,0x13,0x1,0x1
00014e 0001
00014f 0e00
000150 0e01
000151 0f10      	.DB  0x1,0x0,0x0,0xE,0x1,0xE,0x10,0xF
000152 0202
000153 0207
000154 1202
000155 000c      	.DB  0x2,0x2,0x7,0x2,0x2,0x12,0xC,0x0
000156 1100
000157 1111
000158 1619
000159 0000      	.DB  0x0,0x11,0x11,0x11,0x19,0x16,0x0,0x0
00015a 1111
00015b 0a11
00015c 0004
00015d 1100      	.DB  0x11,0x11,0x11,0xA,0x4,0x0,0x0,0x11
00015e 1511
00015f 0a15
000160 0000
000161 0a11      	.DB  0x11,0x15,0x15,0xA,0x0,0x0,0x11,0xA
000162 0a04
000163 0011
000164 1100
000165 1e11      	.DB  0x4,0xA,0x11,0x0,0x0,0x11,0x11,0x1E
000166 0e10
000167 0000
000168 081f
000169 0204      	.DB  0x10,0xE,0x0,0x0,0x1F,0x8,0x4,0x2
00016a 081f
00016b 0404
00016c 0402
00016d 0804      	.DB  0x1F,0x8,0x4,0x4,0x2,0x4,0x4,0x8
00016e 0404
00016f 0404
000170 0404
000171 0204      	.DB  0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x2
000172 0404
000173 0408
000174 0204
000175 1502      	.DB  0x4,0x4,0x8,0x4,0x4,0x2,0x2,0x15
000176 0008
000177 0000
000178 1f00
000179 1111      	.DB  0x8,0x0,0x0,0x0,0x0,0x1F,0x11,0x11
00017a 1111
00017b 1f11      	.DB  0x11,0x11,0x11,0x1F
                 _conv_delay_G101:
00017c 0064
00017d 00c8
00017e 0190
00017f 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G101:
000180 fff8
000181 fffc
000182 fffe
000183 ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 __glcd_mask:
000184 0100
000185 0703
000186 1f0f
000187 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
G:\TAM\K\AVR\May Say V2 PCB AT32A\Debug\List\MS_V2_PCB.asm(1207): warning: .cseg .db misalignment - padding zero byte
000188 00ff      	.DB  0xFF
                 _st7920_base_y_G102:
000189 9080
00018a 9888      	.DB  0x80,0x90,0x88,0x98
                 
                 _0x2140060:
G:\TAM\K\AVR\May Say V2 PCB AT32A\Debug\List\MS_V2_PCB.asm(1212): warning: .cseg .db misalignment - padding zero byte
00018b 0001      	.DB  0x1
                 _0x2140000:
00018c 4e2d
00018d 4e41
00018e 4900
00018f 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
G:\TAM\K\AVR\May Say V2 PCB AT32A\Debug\List\MS_V2_PCB.asm(1215): warning: .cseg .db misalignment - padding zero byte
000190 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000191 0001      	.DW  0x01
000192 028a      	.DW  __seed_G10A
000193 0316      	.DW  _0x2140060*2
                 
                 _0xFFFFFFFF:
000194 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000195 94f8      	CLI
000196 27ee      	CLR  R30
000197 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000198 e0f1      	LDI  R31,1
000199 bff5      	OUT  MCUCR,R31
00019a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00019b e08d      	LDI  R24,(14-2)+1
00019c e0a2      	LDI  R26,2
00019d 27bb      	CLR  R27
                 __CLEAR_REG:
00019e 93ed      	ST   X+,R30
00019f 958a      	DEC  R24
0001a0 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001a1 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001a2 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001a3 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
0001a4 93ed      	ST   X+,R30
0001a5 9701      	SBIW R24,1
0001a6 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001a7 e2e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001a8 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001a9 9185      	LPM  R24,Z+
0001aa 9195      	LPM  R25,Z+
0001ab 9700      	SBIW R24,0
0001ac f061      	BREQ __GLOBAL_INI_END
0001ad 91a5      	LPM  R26,Z+
0001ae 91b5      	LPM  R27,Z+
0001af 9005      	LPM  R0,Z+
0001b0 9015      	LPM  R1,Z+
0001b1 01bf      	MOVW R22,R30
0001b2 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0001b3 9005      	LPM  R0,Z+
0001b4 920d      	ST   X+,R0
0001b5 9701      	SBIW R24,1
0001b6 f7e1      	BRNE __GLOBAL_INI_LOOP
0001b7 01fb      	MOVW R30,R22
0001b8 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001b9 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001ba bfed      	OUT  SPL,R30
0001bb e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001bc bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001bd e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0001be e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0001bf 940c 01c3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*******************************************************
                 ;Project : MS_V2
                 ;Version : 01
                 ;Date    : 1/11/2018
                 ;Author  : AT
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega32A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 512
                 ;*******************************************************/
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;// I2C Bus functions
                 ;#include <i2c.h>
                 ;// DS1307 Real Time Clock functions
                 ;#include <ds1307.h>
                 ;// 1 Wire Bus interface functions
                 ;#include <1wire.h>
                 ;// DS18b20 Temperature Sensor functions
                 ;#include <ds18b20.h>
                 ;// Graphic Display functions
                 ;#include <glcd.h>
                 ;// Font used for displaying text
                 ;// on the graphic display
                 ;#include <font5x7.h>
                 ;// library extern
                 ;#include "LIB/exlib.h"
                 ;// DHT library
                 ;#include <DHT.h>
                 ;// Declare your global variables here
                 ;
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0028 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
                 ; 0000 0029 // Place your code here
                 ; 0000 002A 
                 ; 0000 002B }
0001c1 9518      	RETI
                 ; .FEND
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 002F {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
                 ; 0000 0030 // Place your code here
                 ; 0000 0031 
                 ; 0000 0032 }
0001c2 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0035 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0036 // Declare your local variables here
                 ; 0000 0037 // Variable used to store graphic display
                 ; 0000 0038 // controller initialization data
                 ; 0000 0039 GLCDINIT_t glcd_init_data;
                 ; 0000 003A 
                 ; 0000 003B // Input/Output Ports initialization
                 ; 0000 003C // Port A initialization
                 ; 0000 003D // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003E DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0001c3 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
0001c4 efe0      	LDI  R30,LOW(240)
0001c5 bbea      	OUT  0x1A,R30
                 ; 0000 003F // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=P Bit2=T Bit1=T Bit0=T
                 ; 0000 0040 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (1<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0001c6 e0e8      	LDI  R30,LOW(8)
0001c7 bbeb      	OUT  0x1B,R30
                 ; 0000 0041 
                 ; 0000 0042 // Port B initialization
                 ; 0000 0043 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0044 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
0001c8 efef      	LDI  R30,LOW(255)
0001c9 bbe7      	OUT  0x17,R30
                 ; 0000 0045 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0046 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0001ca e0e0      	LDI  R30,LOW(0)
0001cb bbe8      	OUT  0x18,R30
                 ; 0000 0047 
                 ; 0000 0048 // Port C initialization
                 ; 0000 0049 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 004A DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0001cc efef      	LDI  R30,LOW(255)
0001cd bbe4      	OUT  0x14,R30
                 ; 0000 004B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 004C PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0001ce e0e0      	LDI  R30,LOW(0)
0001cf bbe5      	OUT  0x15,R30
                 ; 0000 004D 
                 ; 0000 004E // Port D initialization
                 ; 0000 004F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0050 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0001d0 bbe1      	OUT  0x11,R30
                 ; 0000 0051 // State: Bit7=T Bit6=T Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
                 ; 0000 0052 PORTD=(0<<PORTD7) | (0<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
0001d1 e3ef      	LDI  R30,LOW(63)
0001d2 bbe2      	OUT  0x12,R30
                 ; 0000 0053 
                 ; 0000 0054 // Timer/Counter 0 initialization
                 ; 0000 0055 // Clock source: System Clock
                 ; 0000 0056 // Clock value: 62.500 kHz
                 ; 0000 0057 // Mode: Normal top=0xFF
                 ; 0000 0058 // OC0 output: Disconnected
                 ; 0000 0059 // Timer Period: 4.096 ms
                 ; 0000 005A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
0001d3 e0e4      	LDI  R30,LOW(4)
0001d4 bfe3      	OUT  0x33,R30
                 ; 0000 005B TCNT0=0x00;
0001d5 e0e0      	LDI  R30,LOW(0)
0001d6 bfe2      	OUT  0x32,R30
                 ; 0000 005C OCR0=0x00;
0001d7 bfec      	OUT  0x3C,R30
                 ; 0000 005D 
                 ; 0000 005E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 005F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0001d8 e0e1      	LDI  R30,LOW(1)
0001d9 bfe9      	OUT  0x39,R30
                 ; 0000 0060 
                 ; 0000 0061 // External Interrupt(s) initialization
                 ; 0000 0062 // INT0: On
                 ; 0000 0063 // INT0 Mode: Falling Edge
                 ; 0000 0064 // INT1: Off
                 ; 0000 0065 // INT2: Off
                 ; 0000 0066 GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
0001da b7eb      	IN   R30,0x3B
0001db 64e0      	ORI  R30,0x40
0001dc bfeb      	OUT  0x3B,R30
                 ; 0000 0067 MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
0001dd e0e2      	LDI  R30,LOW(2)
0001de bfe5      	OUT  0x35,R30
                 ; 0000 0068 MCUCSR=(0<<ISC2);
0001df e0e0      	LDI  R30,LOW(0)
0001e0 bfe4      	OUT  0x34,R30
                 ; 0000 0069 GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
0001e1 e4e0      	LDI  R30,LOW(64)
0001e2 bfea      	OUT  0x3A,R30
                 ; 0000 006A 
                 ; 0000 006B // Bit-Banged I2C Bus initialization
                 ; 0000 006C // I2C Port: PORTD
                 ; 0000 006D // I2C SDA bit: 6
                 ; 0000 006E // I2C SCL bit: 7
                 ; 0000 006F // Bit Rate: 100 kHz
                 ; 0000 0070 // Note: I2C settings are specified in the
                 ; 0000 0071 // Project|Configure|C Compiler|Libraries|I2C menu.
                 ; 0000 0072 i2c_init();
0001e3 940e 03a5 	CALL _i2c_init
                 ; 0000 0073 
                 ; 0000 0074 // DS1307 Real Time Clock initialization
                 ; 0000 0075 // Square wave output on pin SQW/OUT: Off
                 ; 0000 0076 // SQW/OUT pin state: 0
                 ; 0000 0077 rtc_init(0,0,0);
0001e5 e0e0      	LDI  R30,LOW(0)
0001e6 93ea      	ST   -Y,R30
0001e7 93ea      	ST   -Y,R30
0001e8 e0a0      	LDI  R26,LOW(0)
0001e9 d010      	RCALL _rtc_init
                 ; 0000 0078 
                 ; 0000 0079 // 1 Wire Bus initialization
                 ; 0000 007A // 1 Wire Data port: PORTA
                 ; 0000 007B // 1 Wire Data bit: 0
                 ; 0000 007C // Note: 1 Wire port settings are specified in the
                 ; 0000 007D // Project|Configure|C Compiler|Libraries|1 Wire menu.
                 ; 0000 007E w1_init();
0001ea 940e 0400 	CALL _w1_init
                 ; 0000 007F 
                 ; 0000 0080 // Graphic Display Controller initialization
                 ; 0000 0081 // The ST7920 connections are specified in the
                 ; 0000 0082 // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 0083 // DB0 - PORTC Bit 4
                 ; 0000 0084 // DB1 - PORTC Bit 5
                 ; 0000 0085 // DB2 - PORTC Bit 6
                 ; 0000 0086 // DB3 - PORTC Bit 7
                 ; 0000 0087 // DB4 - PORTA Bit 7
                 ; 0000 0088 // DB5 - PORTA Bit 6
                 ; 0000 0089 // DB6 - PORTA Bit 5
                 ; 0000 008A // DB7 - PORTA Bit 4
                 ; 0000 008B // E - PORTC Bit 2
                 ; 0000 008C // R /W - PORTC Bit 1
                 ; 0000 008D // RS - PORTC Bit 0
                 ; 0000 008E // /RST - PORTC Bit 3
                 ; 0000 008F 
                 ; 0000 0090 // Specify the current font for displaying text
                 ; 0000 0091 glcd_init_data.font=font5x7;
0001ec e5e4      	LDI  R30,LOW(_font5x7*2)
0001ed e0f0      	LDI  R31,HIGH(_font5x7*2)
0001ee 83e8      	ST   Y,R30
0001ef 83f9      	STD  Y+1,R31
                 ; 0000 0092 // No function is used for reading
                 ; 0000 0093 // image data from external memory
                 ; 0000 0094 glcd_init_data.readxmem=NULL;
0001f0 e0e0      	LDI  R30,LOW(0)
0001f1 83ea      	STD  Y+2,R30
0001f2 83eb      	STD  Y+2+1,R30
                 ; 0000 0095 // No function is used for writing
                 ; 0000 0096 // image data to external memory
                 ; 0000 0097 glcd_init_data.writexmem=NULL;
0001f3 83ec      	STD  Y+4,R30
0001f4 83ed      	STD  Y+4+1,R30
                 ; 0000 0098 
                 ; 0000 0099 glcd_init(&glcd_init_data);
0001f5 01de      	MOVW R26,R28
0001f6 d0d1      	RCALL _glcd_init
                 ; 0000 009A 
                 ; 0000 009B // Global enable interrupts
                 ; 0000 009C #asm("sei")
0001f7 9478      	sei
                 ; 0000 009D 
                 ; 0000 009E while (1)
                 _0x3:
                 ; 0000 009F       {
                 ; 0000 00A0       // Place your code here
                 ; 0000 00A1 
                 ; 0000 00A2       }
0001f8 cfff      	RJMP _0x3
                 ; 0000 00A3 }
                 _0x6:
0001f9 cfff      	RJMP _0x6
                 ; .FEND
                 
                 	.CSEG
                 _rtc_init:
                 ; .FSTART _rtc_init
0001fa 93aa      	ST   -Y,R26
0001fb 81ea      	LDD  R30,Y+2
0001fc 70e3      	ANDI R30,LOW(0x3)
0001fd 83ea      	STD  Y+2,R30
0001fe 81e9      	LDD  R30,Y+1
0001ff 30e0      	CPI  R30,0
000200 f019      	BREQ _0x2000003
000201 81ea      	LDD  R30,Y+2
000202 61e0      	ORI  R30,0x10
000203 83ea      	STD  Y+2,R30
                 _0x2000003:
000204 81e8      	LD   R30,Y
000205 30e0      	CPI  R30,0
000206 f019      	BREQ _0x2000004
000207 81ea      	LDD  R30,Y+2
000208 68e0      	ORI  R30,0x80
000209 83ea      	STD  Y+2,R30
                 _0x2000004:
00020a 940e 03aa 	CALL _i2c_start
00020c eda0      	LDI  R26,LOW(208)
00020d 940e 03de 	CALL _i2c_write
00020f e0a7      	LDI  R26,LOW(7)
000210 940e 03de 	CALL _i2c_write
000212 81aa      	LDD  R26,Y+2
000213 940e 03de 	CALL _i2c_write
000215 940e 03b9 	CALL _i2c_stop
000217 9623      	ADIW R28,3
000218 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _st7920_delay_G102:
                 ; .FSTART _st7920_delay_G102
000219 0000          nop
00021a 0000          nop
00021b 0000          nop
00021c 9508      	RET
                 ; .FEND
                 _st7920_wrbus_G102:
                 ; .FSTART _st7920_wrbus_G102
00021d 93aa      	ST   -Y,R26
00021e 98a9      	CBI  0x15,1
00021f 9aaa      	SBI  0x15,2
000220 9aa4      	SBI  0x14,4
000221 9aa5      	SBI  0x14,5
000222 9aa6      	SBI  0x14,6
000223 9aa7      	SBI  0x14,7
000224 9ad7      	SBI  0x1A,7
000225 9ad6      	SBI  0x1A,6
000226 9ad5      	SBI  0x1A,5
000227 9ad4      	SBI  0x1A,4
000228 81e8      	LD   R30,Y
000229 70e1      	ANDI R30,LOW(0x1)
00022a f011      	BREQ _0x2040003
00022b 9aac      	SBI  0x15,4
00022c c001      	RJMP _0x2040004
                 _0x2040003:
00022d 98ac      	CBI  0x15,4
                 _0x2040004:
00022e 81e8      	LD   R30,Y
00022f 70e2      	ANDI R30,LOW(0x2)
000230 f011      	BREQ _0x2040005
000231 9aad      	SBI  0x15,5
000232 c001      	RJMP _0x2040006
                 _0x2040005:
000233 98ad      	CBI  0x15,5
                 _0x2040006:
000234 81e8      	LD   R30,Y
000235 70e4      	ANDI R30,LOW(0x4)
000236 f011      	BREQ _0x2040007
000237 9aae      	SBI  0x15,6
000238 c001      	RJMP _0x2040008
                 _0x2040007:
000239 98ae      	CBI  0x15,6
                 _0x2040008:
00023a 81e8      	LD   R30,Y
00023b 70e8      	ANDI R30,LOW(0x8)
00023c f011      	BREQ _0x2040009
00023d 9aaf      	SBI  0x15,7
00023e c001      	RJMP _0x204000A
                 _0x2040009:
00023f 98af      	CBI  0x15,7
                 _0x204000A:
000240 81e8      	LD   R30,Y
000241 71e0      	ANDI R30,LOW(0x10)
000242 f011      	BREQ _0x204000B
000243 9adf      	SBI  0x1B,7
000244 c001      	RJMP _0x204000C
                 _0x204000B:
000245 98df      	CBI  0x1B,7
                 _0x204000C:
000246 81e8      	LD   R30,Y
000247 72e0      	ANDI R30,LOW(0x20)
000248 f011      	BREQ _0x204000D
000249 9ade      	SBI  0x1B,6
00024a c001      	RJMP _0x204000E
                 _0x204000D:
00024b 98de      	CBI  0x1B,6
                 _0x204000E:
00024c 81e8      	LD   R30,Y
00024d 74e0      	ANDI R30,LOW(0x40)
00024e f011      	BREQ _0x204000F
00024f 9add      	SBI  0x1B,5
000250 c001      	RJMP _0x2040010
                 _0x204000F:
000251 98dd      	CBI  0x1B,5
                 _0x2040010:
000252 81e8      	LD   R30,Y
000253 78e0      	ANDI R30,LOW(0x80)
000254 f011      	BREQ _0x2040011
000255 9adc      	SBI  0x1B,4
000256 c001      	RJMP _0x2040012
                 _0x2040011:
000257 98dc      	CBI  0x1B,4
                 _0x2040012:
000258 dfc0      	RCALL _st7920_delay_G102
000259 98aa      	CBI  0x15,2
00025a c048      	RJMP _0x2180002
                 ; .FEND
                 _st7920_busy_G102:
                 ; .FSTART _st7920_busy_G102
00025b 98a8      	CBI  0x15,0
00025c 9aa9      	SBI  0x15,1
00025d 98a4      	CBI  0x14,4
00025e 98a5      	CBI  0x14,5
00025f 98a6      	CBI  0x14,6
000260 98a7      	CBI  0x14,7
000261 98d7      	CBI  0x1A,7
000262 98d6      	CBI  0x1A,6
000263 98d5      	CBI  0x1A,5
000264 98d4      	CBI  0x1A,4
000265 9aaa      	SBI  0x15,2
000266 dfb2      	RCALL _st7920_delay_G102
                 _0x204001B:
000267 99cc      	SBIC 0x19,4
000268 cffe      	RJMP _0x204001B
000269 98aa      	CBI  0x15,2
                +
00026a e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
00026b 958a     +DEC R24
00026c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
00026d 9508      	RET
                 ; .FEND
                 _st7920_wrdata:
                 ; .FSTART _st7920_wrdata
00026e 93aa      	ST   -Y,R26
00026f dfeb      	RCALL _st7920_busy_G102
000270 9aa8      	SBI  0x15,0
000271 81a8      	LD   R26,Y
000272 dfaa      	RCALL _st7920_wrbus_G102
000273 c02f      	RJMP _0x2180002
                 ; .FEND
                 _st7920_wrcmd:
                 ; .FSTART _st7920_wrcmd
000274 93aa      	ST   -Y,R26
000275 dfe5      	RCALL _st7920_busy_G102
000276 81a8      	LD   R26,Y
000277 dfa5      	RCALL _st7920_wrbus_G102
000278 c02a      	RJMP _0x2180002
                 ; .FEND
                 _st7920_setxy_G102:
                 ; .FSTART _st7920_setxy_G102
000279 93aa      	ST   -Y,R26
00027a 81e8      	LD   R30,Y
00027b 71ef      	ANDI R30,LOW(0x1F)
00027c 68e0      	ORI  R30,0x80
00027d 2fae      	MOV  R26,R30
00027e dff5      	RCALL _st7920_wrcmd
00027f 81a8      	LD   R26,Y
000280 32a0      	CPI  R26,LOW(0x20)
000281 f018      	BRLO _0x204001E
000282 81e9      	LDD  R30,Y+1
000283 68e0      	ORI  R30,0x80
000284 83e9      	STD  Y+1,R30
                 _0x204001E:
000285 81e9      	LDD  R30,Y+1
000286 95e2      	SWAP R30
000287 70ef      	ANDI R30,0xF
000288 68e0      	ORI  R30,0x80
000289 2fae      	MOV  R26,R30
00028a dfe9      	RCALL _st7920_wrcmd
00028b c0ec      	RJMP _0x2180001
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00028c 93aa      	ST   -Y,R26
00028d 940e 038a 	CALL SUBOPT_0x0
00028f 81e8      	LD   R30,Y
000290 30e0      	CPI  R30,0
000291 f011      	BREQ _0x204001F
000292 e0ec      	LDI  R30,LOW(12)
000293 c001      	RJMP _0x2040020
                 _0x204001F:
000294 e0e8      	LDI  R30,LOW(8)
                 _0x2040020:
000295 2fae      	MOV  R26,R30
000296 dfdd      	RCALL _st7920_wrcmd
000297 81e8      	LD   R30,Y
000298 30e0      	CPI  R30,0
000299 f011      	BREQ _0x2040022
00029a e0e2      	LDI  R30,LOW(2)
00029b c001      	RJMP _0x2040023
                 _0x2040022:
00029c e0e0      	LDI  R30,LOW(0)
                 _0x2040023:
00029d 93e0 0286 	STS  _st7920_graphics_on_G102,R30
00029f 940e 038a 	CALL SUBOPT_0x0
0002a1 940e 0390 	CALL SUBOPT_0x1
                 _0x2180002:
0002a3 9621      	ADIW R28,1
0002a4 9508      	RET
                 ; .FEND
                 _glcd_cleargraphics:
                 ; .FSTART _glcd_cleargraphics
0002a5 940e 0420 	CALL __SAVELOCR4
0002a7 e030      	LDI  R19,0
                +
0002a8 91e0 026a+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0002aa 30e0      	CPI  R30,0
0002ab f009      	BREQ _0x2040025
0002ac ef3f      	LDI  R19,LOW(255)
                 _0x2040025:
0002ad 940e 0390 	CALL SUBOPT_0x1
0002af e000      	LDI  R16,LOW(0)
                 _0x2040026:
0002b0 3400      	CPI  R16,64
0002b1 f470      	BRSH _0x2040028
0002b2 e0e0      	LDI  R30,LOW(0)
0002b3 93ea      	ST   -Y,R30
0002b4 2fa0      	MOV  R26,R16
0002b5 5f0f      	SUBI R16,-1
0002b6 dfc2      	RCALL _st7920_setxy_G102
0002b7 e110      	LDI  R17,LOW(16)
                 _0x2040029:
0002b8 2fe1      	MOV  R30,R17
0002b9 5011      	SUBI R17,1
0002ba 30e0      	CPI  R30,0
0002bb f019      	BREQ _0x204002B
0002bc 2fa3      	MOV  R26,R19
0002bd dfb0      	RCALL _st7920_wrdata
0002be cff9      	RJMP _0x2040029
                 _0x204002B:
0002bf cff0      	RJMP _0x2040026
                 _0x2040028:
0002c0 e0e0      	LDI  R30,LOW(0)
0002c1 93ea      	ST   -Y,R30
0002c2 e0a0      	LDI  R26,LOW(0)
0002c3 d0a9      	RCALL _glcd_moveto
0002c4 940e 0425 	CALL __LOADLOCR4
0002c6 9624      	ADIW R28,4
0002c7 9508      	RET
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0002c8 93ba      	ST   -Y,R27
0002c9 93aa      	ST   -Y,R26
0002ca 9aa2      	SBI  0x14,2
0002cb 98aa      	CBI  0x15,2
0002cc 9aa1      	SBI  0x14,1
0002cd 9aa9      	SBI  0x15,1
0002ce 9aa0      	SBI  0x14,0
0002cf 98a8      	CBI  0x15,0
0002d0 9aa3      	SBI  0x14,3
0002d1 e3a2      	LDI  R26,LOW(50)
0002d2 e0b0      	LDI  R27,0
0002d3 940e 03f6 	CALL _delay_ms
0002d5 98ab      	CBI  0x15,3
0002d6 e0a1      	LDI  R26,LOW(1)
0002d7 e0b0      	LDI  R27,0
0002d8 940e 03f6 	CALL _delay_ms
0002da 9aab      	SBI  0x15,3
0002db e0a1      	LDI  R26,LOW(1)
0002dc e0b0      	LDI  R27,0
0002dd 940e 03f6 	CALL _delay_ms
0002df 940e 0396 	CALL SUBOPT_0x2
0002e1 940e 0396 	CALL SUBOPT_0x2
0002e3 e0a8      	LDI  R26,LOW(8)
0002e4 df38      	RCALL _st7920_wrbus_G102
                +
0002e5 e280     +LDI R24 , LOW ( 800 )
0002e6 e093     +LDI R25 , HIGH ( 800 )
                +__DELAY_USW_LOOP :
0002e7 9701     +SBIW R24 , 1
0002e8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 800
0002e9 e0a1      	LDI  R26,LOW(1)
0002ea df89      	RCALL _st7920_wrcmd
0002eb e0af      	LDI  R26,LOW(15)
0002ec e0b0      	LDI  R27,0
0002ed 940e 03f6 	CALL _delay_ms
0002ef e0e0      	LDI  R30,LOW(0)
0002f0 93e0 0289 	STS  _yt_G102,R30
0002f2 93e0 0288 	STS  _xt_G102,R30
0002f4 e0a6      	LDI  R26,LOW(6)
0002f5 df7e      	RCALL _st7920_wrcmd
0002f6 e3a4      	LDI  R26,LOW(52)
0002f7 df7c      	RCALL _st7920_wrcmd
0002f8 e4a0      	LDI  R26,LOW(64)
0002f9 df7a      	RCALL _st7920_wrcmd
0002fa e0a2      	LDI  R26,LOW(2)
0002fb df78      	RCALL _st7920_wrcmd
0002fc e0e0      	LDI  R30,LOW(0)
0002fd 93e0 0286 	STS  _st7920_graphics_on_G102,R30
0002ff dfa5      	RCALL _glcd_cleargraphics
000300 e0a1      	LDI  R26,LOW(1)
000301 df8a      	RCALL _glcd_display
000302 e0e1      	LDI  R30,LOW(1)
000303 93e0 0269 	STS  _glcd_state,R30
000305 e0e0      	LDI  R30,LOW(0)
                +
000306 93e0 026a+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000308 e0e1      	LDI  R30,LOW(1)
                +
000309 93e0 026f+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00030b 93e0 0270+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
00030d 81e8      	LD   R30,Y
00030e 81f9      	LDD  R31,Y+1
00030f 9730      	SBIW R30,0
000310 f0a9      	BREQ _0x204002C
000311 81a8      	LD   R26,Y
000312 81b9      	LDD  R27,Y+1
000313 940e 0418 	CALL __GETW1P
                +
000315 93e0 026d+STS _glcd_state + ( 4 ) , R30
000317 93f0 026e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000319 9612      	ADIW R26,2
00031a 940e 0418 	CALL __GETW1P
                +
00031c 93e0 0282+STS _glcd_state + ( 25 ) , R30
00031e 93f0 0283+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
000320 81a8      	LD   R26,Y
000321 81b9      	LDD  R27,Y+1
000322 9614      	ADIW R26,4
000323 940e 0418 	CALL __GETW1P
000325 c00a      	RJMP _0x20400BB
                 _0x204002C:
000326 e0e0      	LDI  R30,LOW(0)
000327 e0f0      	LDI  R31,HIGH(0)
                +
000328 93e0 026d+STS _glcd_state + ( 4 ) , R30
00032a 93f0 026e+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00032c 93e0 0282+STS _glcd_state + ( 25 ) , R30
00032e 93f0 0283+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400BB:
                +
000330 93e0 0284+STS _glcd_state + ( 27 ) , R30
000332 93f0 0285+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000334 e0e1      	LDI  R30,LOW(1)
                +
000335 93e0 0271+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000337 efef      	LDI  R30,LOW(255)
                +
000338 93e0 0272+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00033a e0e1      	LDI  R30,LOW(1)
                +
00033b 93e0 0279+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00033d e7ea     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00033e e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
00033f 93fa      	ST   -Y,R31
000340 93ea      	ST   -Y,R30
000341 efef      	LDI  R30,LOW(255)
000342 93ea      	ST   -Y,R30
000343 e0a8      	LDI  R26,LOW(8)
000344 e0b0      	LDI  R27,0
000345 940e 037a 	CALL _memset
000347 e0e1      	LDI  R30,LOW(1)
000348 c02f      	RJMP _0x2180001
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000349 940e 039e 	CALL SUBOPT_0x3
00034b f01c      	BRLT _0x2060003
00034c e0e0      	LDI  R30,LOW(0)
00034d e0f0      	LDI  R31,HIGH(0)
00034e c029      	RJMP _0x2180001
                 _0x2060003:
00034f 81a8      	LD   R26,Y
000350 81b9      	LDD  R27,Y+1
000351 38a0      	CPI  R26,LOW(0x80)
000352 e0e0      	LDI  R30,HIGH(0x80)
000353 07be      	CPC  R27,R30
000354 f01c      	BRLT _0x2060004
000355 e7ef      	LDI  R30,LOW(127)
000356 e0f0      	LDI  R31,HIGH(127)
000357 c020      	RJMP _0x2180001
                 _0x2060004:
000358 81e8      	LD   R30,Y
000359 81f9      	LDD  R31,Y+1
00035a c01d      	RJMP _0x2180001
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
00035b 940e 039e 	CALL SUBOPT_0x3
00035d f01c      	BRLT _0x2060005
00035e e0e0      	LDI  R30,LOW(0)
00035f e0f0      	LDI  R31,HIGH(0)
000360 c017      	RJMP _0x2180001
                 _0x2060005:
000361 81a8      	LD   R26,Y
000362 81b9      	LDD  R27,Y+1
000363 34a0      	CPI  R26,LOW(0x40)
000364 e0e0      	LDI  R30,HIGH(0x40)
000365 07be      	CPC  R27,R30
000366 f01c      	BRLT _0x2060006
000367 e3ef      	LDI  R30,LOW(63)
000368 e0f0      	LDI  R31,HIGH(63)
000369 c00e      	RJMP _0x2180001
                 _0x2060006:
00036a 81e8      	LD   R30,Y
00036b 81f9      	LDD  R31,Y+1
00036c c00b      	RJMP _0x2180001
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
00036d 93aa      	ST   -Y,R26
00036e 81a9      	LDD  R26,Y+1
00036f 27bb      	CLR  R27
000370 dfd8      	RCALL _glcd_clipx
                +
000371 93e0 026b+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000373 81a8      	LD   R26,Y
000374 27bb      	CLR  R27
000375 dfe5      	RCALL _glcd_clipy
                +
000376 93e0 026c+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
                 _0x2180001:
000378 9622      	ADIW R28,2
000379 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00037a 93ba      	ST   -Y,R27
00037b 93aa      	ST   -Y,R26
00037c 81b9          ldd  r27,y+1
00037d 81a8          ld   r26,y
00037e 9610          adiw r26,0
00037f f031          breq memset1
000380 81fc          ldd  r31,y+4
000381 81eb          ldd  r30,y+3
000382 816a          ldd  r22,y+2
                 memset0:
000383 9361          st   z+,r22
000384 9711          sbiw r26,1
000385 f7e9          brne memset0
                 memset1:
000386 81eb          ldd  r30,y+3
000387 81fc          ldd  r31,y+4
000388 9625      	ADIW R28,5
000389 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
000260           	.BYTE 0x9
                 _glcd_state:
000269           	.BYTE 0x1D
                 _st7920_graphics_on_G102:
000286           	.BYTE 0x1
                 _st7920_bits8_15_G102:
000287           	.BYTE 0x1
                 _xt_G102:
000288           	.BYTE 0x1
                 _yt_G102:
000289           	.BYTE 0x1
                 __seed_G10A:
00028a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00038a 91e0 0286 	LDS  R30,_st7920_graphics_on_G102
00038c 63e0      	ORI  R30,LOW(0x30)
00038d 2fae      	MOV  R26,R30
00038e 940c 0274 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000390 91e0 0286 	LDS  R30,_st7920_graphics_on_G102
000392 63e4      	ORI  R30,LOW(0x34)
000393 2fae      	MOV  R26,R30
000394 940c 0274 	JMP  _st7920_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
000396 e3a0      	LDI  R26,LOW(48)
000397 940e 021d 	CALL _st7920_wrbus_G102
                +
000399 e280     +LDI R24 , LOW ( 800 )
00039a e093     +LDI R25 , HIGH ( 800 )
                +__DELAY_USW_LOOP :
00039b 9701     +SBIW R24 , 1
00039c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 800
00039d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00039e 93ba      	ST   -Y,R27
00039f 93aa      	ST   -Y,R26
0003a0 81a8      	LD   R26,Y
0003a1 81b9      	LDD  R27,Y+1
0003a2 940e 041c 	CALL __CPW02
0003a4 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=6
                 	.equ __scl_bit=7
                 	.equ __i2c_port=0x12 ;PORTD
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
0003a5 9897      	cbi  __i2c_port,__scl_bit
0003a6 9896      	cbi  __i2c_port,__sda_bit
0003a7 9a8f      	sbi  __i2c_dir,__scl_bit
0003a8 988e      	cbi  __i2c_dir,__sda_bit
0003a9 c015      	rjmp __i2c_delay2
                 _i2c_start:
0003aa 988e      	cbi  __i2c_dir,__sda_bit
0003ab 988f      	cbi  __i2c_dir,__scl_bit
0003ac 27ee      	clr  r30
0003ad 0000      	nop
0003ae 9b86      	sbis __i2c_pin,__sda_bit
0003af 9508      	ret
0003b0 9b87      	sbis __i2c_pin,__scl_bit
0003b1 9508      	ret
0003b2 d004      	rcall __i2c_delay1
0003b3 9a8e      	sbi  __i2c_dir,__sda_bit
0003b4 d002      	rcall __i2c_delay1
0003b5 9a8f      	sbi  __i2c_dir,__scl_bit
0003b6 e0e1      	ldi  r30,1
                 __i2c_delay1:
0003b7 e16b      	ldi  r22,27
0003b8 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
0003b9 9a8e      	sbi  __i2c_dir,__sda_bit
0003ba 9a8f      	sbi  __i2c_dir,__scl_bit
0003bb d003      	rcall __i2c_delay2
0003bc 988f      	cbi  __i2c_dir,__scl_bit
0003bd dff9      	rcall __i2c_delay1
0003be 988e      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0003bf e365      	ldi  r22,53
                 __i2c_delay2l:
0003c0 956a      	dec  r22
0003c1 f7f1      	brne __i2c_delay2l
0003c2 9508      	ret
                 _i2c_read:
0003c3 e078      	ldi  r23,8
                 __i2c_read0:
0003c4 988f      	cbi  __i2c_dir,__scl_bit
0003c5 dff1      	rcall __i2c_delay1
                 __i2c_read3:
0003c6 9b87      	sbis __i2c_pin,__scl_bit
0003c7 cffe      	rjmp __i2c_read3
0003c8 dfee      	rcall __i2c_delay1
0003c9 9488      	clc
0003ca 9986      	sbic __i2c_pin,__sda_bit
0003cb 9408      	sec
0003cc 9a8f      	sbi  __i2c_dir,__scl_bit
0003cd dff1      	rcall __i2c_delay2
0003ce 1fee      	rol  r30
0003cf 957a      	dec  r23
0003d0 f799      	brne __i2c_read0
0003d1 2f7a      	mov  r23,r26
0003d2 2377      	tst  r23
0003d3 f411      	brne __i2c_read1
0003d4 988e      	cbi  __i2c_dir,__sda_bit
0003d5 c001      	rjmp __i2c_read2
                 __i2c_read1:
0003d6 9a8e      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
0003d7 dfdf      	rcall __i2c_delay1
0003d8 988f      	cbi  __i2c_dir,__scl_bit
0003d9 dfe5      	rcall __i2c_delay2
0003da 9a8f      	sbi  __i2c_dir,__scl_bit
0003db dfdb      	rcall __i2c_delay1
0003dc 988e      	cbi  __i2c_dir,__sda_bit
0003dd cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
0003de e078      	ldi  r23,8
                 __i2c_write0:
0003df 0faa      	lsl  r26
0003e0 f410      	brcc __i2c_write1
0003e1 988e      	cbi  __i2c_dir,__sda_bit
0003e2 c001      	rjmp __i2c_write2
                 __i2c_write1:
0003e3 9a8e      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0003e4 dfda      	rcall __i2c_delay2
0003e5 988f      	cbi  __i2c_dir,__scl_bit
0003e6 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0003e7 9b87      	sbis __i2c_pin,__scl_bit
0003e8 cffe      	rjmp __i2c_write3
0003e9 dfcd      	rcall __i2c_delay1
0003ea 9a8f      	sbi  __i2c_dir,__scl_bit
0003eb 957a      	dec  r23
0003ec f791      	brne __i2c_write0
0003ed 988e      	cbi  __i2c_dir,__sda_bit
0003ee dfc8      	rcall __i2c_delay1
0003ef 988f      	cbi  __i2c_dir,__scl_bit
0003f0 dfce      	rcall __i2c_delay2
0003f1 e0e1      	ldi  r30,1
0003f2 9986      	sbic __i2c_pin,__sda_bit
0003f3 27ee      	clr  r30
0003f4 9a8f      	sbi  __i2c_dir,__scl_bit
0003f5 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0003f6 9610      	adiw r26,0
0003f7 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003f8 ea80     +LDI R24 , LOW ( 0xFA0 )
0003f9 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
0003fa 9701     +SBIW R24 , 1
0003fb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
0003fc 95a8      	wdr
0003fd 9711      	sbiw r26,1
0003fe f7c9      	brne __delay_ms0
                 __delay_ms1:
0003ff 9508      	ret
                 
                 	.equ __w1_port=0x1B
                 	.equ __w1_bit=0x00
                 
                 _w1_init:
000400 27ee      	clr  r30
000401 98d8      	cbi  __w1_port,__w1_bit
000402 9ad0      	sbi  __w1_port-1,__w1_bit
                +
000403 e880     +LDI R24 , LOW ( 0x780 )
000404 e097     +LDI R25 , HIGH ( 0x780 )
                +__DELAY_USW_LOOP :
000405 9701     +SBIW R24 , 1
000406 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x780
000407 98d0      	cbi  __w1_port-1,__w1_bit
                +
000408 e48b     +LDI R24 , LOW ( 0x4B )
                +__DELAY_USB_LOOP :
000409 958a     +DEC R24
00040a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x4B
00040b 9bc8      	sbis __w1_port-2,__w1_bit
00040c 9508      	ret
                +
00040d e380     +LDI R24 , LOW ( 0x130 )
00040e e091     +LDI R25 , HIGH ( 0x130 )
                +__DELAY_USW_LOOP :
00040f 9701     +SBIW R24 , 1
000410 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x130
000411 9bc8      	sbis __w1_port-2,__w1_bit
000412 e0e1      	ldi  r30,1
                +
000413 e188     +LDI R24 , LOW ( 0x618 )
000414 e096     +LDI R25 , HIGH ( 0x618 )
                +__DELAY_USW_LOOP :
000415 9701     +SBIW R24 , 1
000416 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x618
000417 9508      	ret
                 
                 __GETW1P:
000418 91ed      	LD   R30,X+
000419 91fc      	LD   R31,X
00041a 9711      	SBIW R26,1
00041b 9508      	RET
                 
                 __CPW02:
00041c 2400      	CLR  R0
00041d 160a      	CP   R0,R26
00041e 060b      	CPC  R0,R27
00041f 9508      	RET
                 
                 __SAVELOCR4:
000420 933a      	ST   -Y,R19
                 __SAVELOCR3:
000421 932a      	ST   -Y,R18
                 __SAVELOCR2:
000422 931a      	ST   -Y,R17
000423 930a      	ST   -Y,R16
000424 9508      	RET
                 
                 __LOADLOCR4:
000425 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000426 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000427 8119      	LDD  R17,Y+1
000428 8108      	LD   R16,Y
000429 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :   7 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   6 r17:   5 r18:   2 r19:   5 r20:   0 r21:   0 r22:   7 r23:   6 
r24:  23 r25:   8 r26:  63 r27:  21 r28:   8 r29:   1 r30: 172 r31:  23 
x  :   5 y  :  85 z  :   8 
Registers used: 19 out of 35 (54.3%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   9 and   :   0 andi  :  11 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   4 brmi  :   0 brne  :  17 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  27 
cbi   :  40 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   3 cpi   :  10 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   0 jmp   :  24 ld    :  28 ldd   :  25 ldi   : 106 
lds   :   3 lpm   :   7 lsl   :   1 lsr   :   0 mov   :   9 movw  :   4 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   4 or    :   0 
ori   :   8 out   :  21 pop   :   0 push  :   0 rcall :  39 ret   :  19 
reti  :   2 rjmp  :  36 rol   :   1 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :  38 sbic  :   3 sbis  :   6 sbiw  :  14 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  29 std   :   9 sts   :  23 sub   :   0 subi  :   2 swap  :   1 
tst   :   1 wdr   :   1 
Instructions used: 48 out of 116 (41.4%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000854   1406    726   2132   32768   6.5%
[.dseg] 0x000060 0x00028e      0     46     46    2048   2.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
